Microchip MPLAB XC8 Compiler V1.44 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.44\dat\en_msgs.txt -cs \
  -h+dist/default/production\HxProgrammerInterface.X.production.sym \
  --cmf=dist/default/production\HxProgrammerInterface.X.production.cmf -z \
  -Q18F47K40 -oC:\Users\ADMINI~1\AppData\Local\Temp\s8tg.2 \
  -Mdist/default/production/HxProgrammerInterface.X.production.map -E1 \
  -ver=XC8 -ASTACK=0D00h-0e87h -pstack=STACK -ACODE=00h-01FFFFh \
  -ACONST=00h-01FFFFh -ASMALLCONST=0F00h-0FFFhx497 \
  -AMEDIUMCONST=0F00h-0FFFFh,010F00h-01FFFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-0E87h -ABIGRAM=01h-0E87h \
  -ARAM=060h-0FFh,0100h-01FFhx13,0E00h-0E87h -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ABANK6=0600h-06FFh \
  -ABANK7=0700h-07FFh -ABANK8=0800h-08FFh -ABANK9=0900h-09FFh \
  -ABANK10=0A00h-0AFFh -ABANK11=0B00h-0BFFh -ABANK12=0C00h-0CFFh \
  -ABANK13=0D00h-0DFFh -ABANK14=0E00h-0E87h \
  -ASFR=0E8Dh-0EFFh,0F00h-0F5Fh,0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init -pramtop=0F00h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Bh -pconfig=CONFIG \
  -AIDLOC=0200000h-020000Fh -pidloc=IDLOC -AEEDATA=0310000h-03103FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\ADMINI~1\AppData\Local\Temp\s8tg.obj \
  dist/default/production\HxProgrammerInterface.X.production.obj 

Object code version is 3.11

Machine type is 18F47K40

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\ADMINI~1\AppData\Local\Temp\s8tg.obj
                init                                 E8       E8        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000       10   200000       0
                config                           300000   300000        C   300000       0
dist/default/production\HxProgrammerInterface.X.production.obj
                intcode                               8        8       E0        4       0
                temp                                 47       47        1        1       1
                text115                            3D6C     3D6C       2E        4       0
                text114                            3E66     3E66       26        4       0
                text113                            3FF2     3FF2       16        4       0
                text112                            37B0     37B0       50        4       0
                text111                            3354     3354       6C        4       0
                text110                            40DE     40DE        4        4       0
                text109                            407E     407E        A        4       0
                text108                            4042     4042       12        4       0
                text107                            3F34     3F34       1A        4       0
                text106                            3FDC     3FDC       16        4       0
                text105                            1FAA     1FAA      18C        4       0
                text104                            40DA     40DA        4        4       0
                text103                            4030     4030       12        4       0
                text102                            2A94     2A94       D6        4       0
                text101                            4054     4054       10        4       0
                text100                            3CAA     3CAA       32        4       0
                text99                             40EA     40EA        2        4       0
                text98                             3FAE     3FAE       18        4       0
                text97                             39EA     39EA       3E        4       0
                text96                             1BC8     1BC8      250        4       0
                text95                             3A28     3A28       3C        4       0
                text94                             40C4     40C4        6        4       0
                text93                             3D3C     3D3C       30        4       0
                text91                             3E3E     3E3E       28        4       0
                text90                             3ECA     3ECA       1C        4       0
                text89                             3F96     3F96       18        4       0
                text88                             3F7E     3F7E       18        4       0
                text87                             3FC6     3FC6       16        4       0
                text86                             3A64     3A64       3A        4       0
                text85                             3C78     3C78       32        4       0
                text84                             40D6     40D6        4        4       0
                text83                             3F66     3F66       18        4       0
                text82                             2DCC     2DCC       BC        4       0
                text81                             4064     4064        E        4       0
                text80                             39AC     39AC       3E        4       0
                text79                             3F1A     3F1A       1A        4       0
                text78                             3968     3968       44        4       0
                text77                             40D2     40D2        4        4       0
                text76                             4072     4072        C        4       0
                text75                             401C     401C       14        4       0
                text74                             35B8     35B8       5C        4       0
                text73                             40E8     40E8        2        4       0
                text72                             40E6     40E6        2        4       0
                text71                             342A     342A       6A        4       0
                text70                             40E4     40E4        2        4       0
                text69                             3E8C     3E8C       22        4       0
                text68                             3D0C     3D0C       30        4       0
                text67                             3894     3894       48        4       0
                text66                             36BE     36BE       52        4       0
                text65                             2FDE     2FDE       A4        4       0
                text64                             3922     3922       46        4       0
                text63                             1E18     1E18      192        4       0
                text62                             40CE     40CE        4        4       0
                text61                             3CDC     3CDC       30        4       0
                text60                             2136     2136      180        4       0
                text59                             3760     3760       50        4       0
                text58                             3558     3558       60        4       0
                text57                             3AD6     3AD6       36        4       0
                text56                             3EAE     3EAE       1C        4       0
                text55                             34F8     34F8       60        4       0
                text54                             3F4E     3F4E       18        4       0
                text53                             2B6A     2B6A       CE        4       0
                text52                             3614     3614       58        4       0
                text51                             2434     2434      172        4       0
                text50                             29B8     29B8       DC        4       0
                text49                             2F34     2F34       AA        4       0
                text48                             40BE     40BE        6        4       0
                text47                             40B8     40B8        6        4       0
                text46                             286E     286E      14A        4       0
                text45                             40B0     40B0        8        4       0
                text44                             3C44     3C44       34        4       0
                text43                             3DC4     3DC4       2A        4       0
                text42                             2E88     2E88       AC        4       0
                text41                             32E4     32E4       70        4       0
                text40                             40A8     40A8        8        4       0
                text39                             3E16     3E16       28        4       0
                text38                             40A0     40A0        8        4       0
                text37                             4098     4098        8        4       0
                text36                             40E2     40E2        2        4       0
                text35                             3122     3122       9E        4       0
                text34                             33C0     33C0       6A        4       0
                text33                             3C10     3C10       34        4       0
                text32                             3BDC     3BDC       34        4       0
                text31                             3F00     3F00       1A        4       0
                text30                             38DC     38DC       46        4       0
                text29                             2D02     2D02       CA        4       0
                text28                             3BA8     3BA8       34        4       0
                text27                             3B74     3B74       34        4       0
                text26                             3D9A     3D9A       2A        4       0
                text25                             3EE6     3EE6       1A        4       0
                text24                             4090     4090        8        4       0
                text23                             4088     4088        8        4       0
                text22                             2710     2710      15E        4       0
                text21                               EC       EC      908        4       0
                text20                             31C0     31C0       94        4       0
                text19                             3DEE     3DEE       28        4       0
                text18                             3494     3494       64        4       0
                text17                             4008     4008       14        4       0
                text16                             3B40     3B40       34        4       0
                text15                             3B0C     3B0C       34        4       0
                text14                              DF0      DF0      318        4       0
                text13                             13F6     13F6      2C2        4       0
                text12                             3710     3710       50        4       0
                text11                             3800     3800       4C        4       0
                text10                              9F4      9F4      3FC        4       0
                text9                              366C     366C       52        4       0
                text8                              1108     1108      2EE        4       0
                text7                              22B6     22B6      17E        4       0
                text6                              1958     1958      270        4       0
                text5                              384C     384C       48        4       0
                text4                              25A6     25A6      16A        4       0
                text3                              2C38     2C38       CA        4       0
                text2                              3A9E     3A9E       38        4       0
                text1                              16B8     16B8      2A0        4       0
                text0                              3082     3082       A0        4       0
                cstackCOMRAM                          1        1       23        1       1
                cstackBANK0                          60       60       79       60       1
                cstackBANK1                         100      100       F8      100       1
                cstackBANK2                         200      200       DB      200       1
                cstackBANK3                         300      300       D5      300       1
                cstackBANK4                         400      400       D5      400       1
                cstackBANK5                         500      500       D5      500       1
                cstackBANK6                         600      600       D5      600       1
                cstackBANK7                         700      700       D5      700       1
                cstackBANK8                         800      800       D5      800       1
                cstackBANK9                         900      900       D5      900       1
                cstackBANK10                        A00      A00       47      A00       1
                cstackBANK12                        C00      C00      100      C00       1
                bssBANK11                           B00      B00       FD      B00       1
                bssBANK6                            6D5      6D5       22      600       1
                dataBANK5                           5F9      5F9        4      500       1
                bssBANK5                            5D5      5D5       24      500       1
                bssBANK4                            4D5      4D5       2A      400       1
                bssBANK3                            3D5      3D5       26      300       1
                bssBANK2                            2DB      2DB       25      200       1
                dataCOMRAM                           46       46        1        1       1
                bssCOMRAM                            24       24       1F        1       1
                cinit                              3254     3254       90        4       0
                nvBANK3                             3FB      3FB        4      300       1
                nvCOMRAM                             43       43        3        1       1
                idataBANK5                         40CA     40CA        4        4       0
                idataCOMRAM                        40EC     40EC        1        4       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcode                               8        8       E0         0
                init                                 E8       E8        4         0
                reset_vec                             0        0        4         0
                text115                            3D6C     3D6C       2E         0
                text114                            3E66     3E66       26         0
                text113                            3FF2     3FF2       16         0
                text112                            37B0     37B0       50         0
                text111                            3354     3354       6C         0
                text110                            40DE     40DE        4         0
                text109                            407E     407E        A         0
                text108                            4042     4042       12         0
                text107                            3F34     3F34       1A         0
                text106                            3FDC     3FDC       16         0
                text105                            1FAA     1FAA      18C         0
                text104                            40DA     40DA        4         0
                text103                            4030     4030       12         0
                text102                            2A94     2A94       D6         0
                text101                            4054     4054       10         0
                text100                            3CAA     3CAA       32         0
                text99                             40EA     40EA        2         0
                text98                             3FAE     3FAE       18         0
                text97                             39EA     39EA       3E         0
                text96                             1BC8     1BC8      250         0
                text95                             3A28     3A28       3C         0
                text94                             40C4     40C4        6         0
                text93                             3D3C     3D3C       30         0
                text91                             3E3E     3E3E       28         0
                text90                             3ECA     3ECA       1C         0
                text89                             3F96     3F96       18         0
                text88                             3F7E     3F7E       18         0
                text87                             3FC6     3FC6       16         0
                text86                             3A64     3A64       3A         0
                text85                             3C78     3C78       32         0
                text84                             40D6     40D6        4         0
                text83                             3F66     3F66       18         0
                text82                             2DCC     2DCC       BC         0
                text81                             4064     4064        E         0
                text80                             39AC     39AC       3E         0
                text79                             3F1A     3F1A       1A         0
                text78                             3968     3968       44         0
                text77                             40D2     40D2        4         0
                text76                             4072     4072        C         0
                text75                             401C     401C       14         0
                text74                             35B8     35B8       5C         0
                text73                             40E8     40E8        2         0
                text72                             40E6     40E6        2         0
                text71                             342A     342A       6A         0
                text70                             40E4     40E4        2         0
                text69                             3E8C     3E8C       22         0
                text68                             3D0C     3D0C       30         0
                text67                             3894     3894       48         0
                text66                             36BE     36BE       52         0
                text65                             2FDE     2FDE       A4         0
                text64                             3922     3922       46         0
                text63                             1E18     1E18      192         0
                text62                             40CE     40CE        4         0
                text61                             3CDC     3CDC       30         0
                text60                             2136     2136      180         0
                text59                             3760     3760       50         0
                text58                             3558     3558       60         0
                text57                             3AD6     3AD6       36         0
                text56                             3EAE     3EAE       1C         0
                text55                             34F8     34F8       60         0
                text54                             3F4E     3F4E       18         0
                text53                             2B6A     2B6A       CE         0
                text52                             3614     3614       58         0
                text51                             2434     2434      172         0
                text50                             29B8     29B8       DC         0
                text49                             2F34     2F34       AA         0
                text48                             40BE     40BE        6         0
                text47                             40B8     40B8        6         0
                text46                             286E     286E      14A         0
                text45                             40B0     40B0        8         0
                text44                             3C44     3C44       34         0
                text43                             3DC4     3DC4       2A         0
                text42                             2E88     2E88       AC         0
                text41                             32E4     32E4       70         0
                text40                             40A8     40A8        8         0
                text39                             3E16     3E16       28         0
                text38                             40A0     40A0        8         0
                text37                             4098     4098        8         0
                text36                             40E2     40E2        2         0
                text35                             3122     3122       9E         0
                text34                             33C0     33C0       6A         0
                text33                             3C10     3C10       34         0
                text32                             3BDC     3BDC       34         0
                text31                             3F00     3F00       1A         0
                text30                             38DC     38DC       46         0
                text29                             2D02     2D02       CA         0
                text28                             3BA8     3BA8       34         0
                text27                             3B74     3B74       34         0
                text26                             3D9A     3D9A       2A         0
                text25                             3EE6     3EE6       1A         0
                text24                             4090     4090        8         0
                text23                             4088     4088        8         0
                text22                             2710     2710      15E         0
                text21                               EC       EC      908         0
                text20                             31C0     31C0       94         0
                text19                             3DEE     3DEE       28         0
                text18                             3494     3494       64         0
                text17                             4008     4008       14         0
                text16                             3B40     3B40       34         0
                text15                             3B0C     3B0C       34         0
                text14                              DF0      DF0      318         0
                text13                             13F6     13F6      2C2         0
                text12                             3710     3710       50         0
                text11                             3800     3800       4C         0
                text10                              9F4      9F4      3FC         0
                text9                              366C     366C       52         0
                text8                              1108     1108      2EE         0
                text7                              22B6     22B6      17E         0
                text6                              1958     1958      270         0
                text5                              384C     384C       48         0
                text4                              25A6     25A6      16A         0
                text3                              2C38     2C38       CA         0
                text2                              3A9E     3A9E       38         0
                text1                              16B8     16B8      2A0         0
                text0                              3082     3082       A0         0
                cinit                              3254     3254       90         0
                idataBANK5                         40CA     40CA        4         0
                idataCOMRAM                        40EC     40EC        1         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 47       47        1         1
                cstackCOMRAM                          1        1       23         1
                dataCOMRAM                           46       46        1         1
                bssCOMRAM                            24       24       1F         1
                nvCOMRAM                             43       43        3         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       79         1

        CLASS   BANK1          
                cstackBANK1                         100      100       F8         1

        CLASS   BANK2          
                cstackBANK2                         200      200       DB         1
                bssBANK2                            2DB      2DB       25         1

        CLASS   BANK3          
                cstackBANK3                         300      300       D5         1
                bssBANK3                            3D5      3D5       26         1
                nvBANK3                             3FB      3FB        4         1

        CLASS   BANK4          
                cstackBANK4                         400      400       D5         1
                bssBANK4                            4D5      4D5       2A         1

        CLASS   BANK5          
                cstackBANK5                         500      500       D5         1
                dataBANK5                           5F9      5F9        4         1
                bssBANK5                            5D5      5D5       24         1

        CLASS   BANK6          
                cstackBANK6                         600      600       D5         1
                bssBANK6                            6D5      6D5       22         1

        CLASS   BANK7          
                cstackBANK7                         700      700       D5         1

        CLASS   BANK8          
                cstackBANK8                         800      800       D5         1

        CLASS   BANK9          
                cstackBANK9                         900      900       D5         1

        CLASS   BANK10         
                cstackBANK10                        A00      A00       47         1

        CLASS   BANK11         
                bssBANK11                           B00      B00       FD         1

        CLASS   BANK12         
                cstackBANK12                        C00      C00      100         1

        CLASS   BANK13         

        CLASS   BANK14         

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        C         0

        CLASS   IDLOC          
                idloc                            200000   200000       10         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000047  000048         1       1  COMRAM  
                intcode                        000008  0040E5  0040ED         4       0  CODE    
                cstackBANK0                    000060  000079  0000D9        60       1  BANK0   
                cstackBANK1                    000100  0000F8  0001F8       100       1  BANK1   
                cstackBANK2                    000200  000100  000300       200       1  BANK2   
                cstackBANK3                    000300  0000FF  0003FF       300       1  BANK3   
                cstackBANK4                    000400  0000FF  0004FF       400       1  BANK4   
                cstackBANK5                    000500  0000FD  0005FD       500       1  BANK5   
                cstackBANK6                    000600  0000F7  0006F7       600       1  BANK6   
                cstackBANK7                    000700  0000D5  0007D5       700       1  BANK7   
                cstackBANK8                    000800  0000D5  0008D5       800       1  BANK8   
                cstackBANK9                    000900  0000D5  0009D5       900       1  BANK9   
                cstackBANK10                   000A00  000047  000A47       A00       1  BANK10  
                bssBANK11                      000B00  0000FD  000BFD       B00       1  BANK11  
                cstackBANK12                   000C00  000100  000D00       C00       1  BANK12  
                idloc                          200000  000010  200010    200000       0  IDLOC   
                config                         300000  00000C  30000C    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000D9-0000FF               27
        BANK1            0001F8-0001FF                8
        BANK10           000A47-000AFF               B9
        BANK11           000BFD-000BFF                3
        BANK13           000D00-000DFF              100
        BANK14           000E00-000E87               88
        BANK3            0003FF-0003FF                1
        BANK4            0004FF-0004FF                1
        BANK5            0005FD-0005FF                3
        BANK6            0006F7-0006FF                9
        BANK7            0007D5-0007FF               2B
        BANK8            0008D5-0008FF               2B
        BANK9            0009D5-0009FF               2B
        BIGRAM           000048-00005F               18
                         0000D9-0000FF               27
                         0001F8-0001FF                8
                         0003FF-0003FF                1
                         0004FF-0004FF                1
                         0005FD-0005FF                3
                         0006F7-0006FF                9
                         0007D5-0007FF               2B
                         0008D5-0008FF               2B
                         0009D5-0009FF               2B
                         000A47-000AFF               B9
                         000BFD-000BFF                3
                         000D00-000E87              188
        CODE             000004-000007                4
                         0040ED-01FFFF            1BF13
        COMRAM           000048-00005F               18
        CONST            000004-000007                4
                         0040ED-01FFFF            1BF13
        EEDATA           310000-3103FF              400
        MEDIUMCONST      0040ED-00FFFF             BF13
                         010F00-01FFFF             F100
        RAM              0000D9-0000FF               27
                         0001F8-0001FF                8
                         0003FF-0003FF                1
                         0004FF-0004FF                1
                         0005FD-0005FF                3
                         0006F7-0006FF                9
                         0007D5-0007FF               2B
                         0008D5-0008FF               2B
                         0009D5-0009FF               2B
                         000A47-000AFF               B9
                         000BFD-000BFF                3
                         000D00-000E87              100
        SFR              000E8D-000FFF               73
        SMALLCONST       0040ED-01FFFF              100
        STACK            000D00-000E87              188

                                  Symbol Table

?___aldiv                                       cstackBANK0  000060
?_calcBaudRate                                  cstackBANK0  00006E
ASLB_ADC@rxBuffer                               cstackBANK0  000060
ASLB_ADC@rx_index                               cstackBANK0  000062
ASLB_ADCReferenceVoltage@cmdReadbackPkt         cstackBANK0  000065
ASLB_ADCReferenceVoltage@rxBuffer               cstackBANK0  000062
ASLB_ADCReferenceVoltage@rx_index               cstackBANK0  000064
ASLB_AnalogMuxReadingSetup@cmdReadbackPkt       cstackBANK2  000206
ASLB_AnalogMuxReadingSetup@ovenWrPkt            cstackBANK2  00024D
ASLB_AnalogMuxReadingSetup@rxBuffer             cstackBANK0  000072
ASLB_AnalogMuxReadingSetup@rx_index             cstackBANK2  000200
ASLB_AnalogMuxReadingSetup@stream               cstackBANK2  000202
ASLB_AnalogMuxReadingSetup@stream_status        cstackBANK2  000201
ASLB_CFCVVaricap@rxBuffer                       cstackBANK0  000060
ASLB_CFCVVaricap@rx_index                       cstackBANK0  000062
ASLB_CTHERM@cmdReadbackPkt                      cstackBANK0  000065
ASLB_CTHERM@rxBuffer                            cstackBANK0  000062
ASLB_CTHERM@rx_index                            cstackBANK0  000064
ASLB_ColpittsOscillator@rxBuffer                cstackBANK0  000060
ASLB_ColpittsOscillator@rx_index                cstackBANK0  000062
ASLB_CommonGate@rxBuffer                        cstackBANK0  000060
ASLB_CommonGate@rx_index                        cstackBANK0  000062
ASLB_ContinuityESD@rxBuffer                     cstackBANK0  000060
ASLB_CurrentLimitDACVoltage@cmdReadbackPkt      cstackBANK0  00006B
ASLB_CurrentLimitDACVoltage@i                   cstackBANK0  0000B2
ASLB_CurrentLimitDACVoltage@rxBuffer            cstackBANK0  000068
ASLB_CurrentLimitDACVoltage@rx_index            cstackBANK0  00006A
ASLB_DACReferenceVoltage@cmdReadbackPkt         cstackBANK0  000065
ASLB_DACReferenceVoltage@rxBuffer               cstackBANK0  000062
ASLB_DACReferenceVoltage@rx_index               cstackBANK0  000064
ASLB_DigitalRegulatorVoltage@cmdReadbackPkt     cstackBANK0  000065
ASLB_DigitalRegulatorVoltage@rxBuffer           cstackBANK0  000062
ASLB_DigitalRegulatorVoltage@rx_index           cstackBANK0  000064
ASLB_ExternalReferenceVoltage@cmdReadbackPkt    cstackBANK0  000065
ASLB_ExternalReferenceVoltage@rxBuffer          cstackBANK0  000062
ASLB_ExternalReferenceVoltage@rx_index          cstackBANK0  000064
ASLB_HeaterFBSignals@cmdReadbackPkt             cstackBANK0  000065
ASLB_HeaterFBSignals@rxBuffer                   cstackBANK0  000062
ASLB_HeaterFBSignals@rx_index                   cstackBANK0  000064
ASLB_HeaterFunctionality@cmdReadbackPkt         cstackBANK2  00024D
ASLB_HeaterFunctionality@heatDacWrPkt           cstackBANK2  000206
ASLB_HeaterFunctionality@ovenWrPkt              cstackBANK2  000294
ASLB_HeaterFunctionality@rxBuffer               cstackBANK0  000072
ASLB_HeaterFunctionality@rx_index               cstackBANK2  000200
ASLB_HeaterFunctionality@stream                 cstackBANK2  000202
ASLB_HeaterFunctionality@stream_status          cstackBANK2  000201
ASLB_InternalTempSensor@cmdReadbackPkt          cstackBANK0  000065
ASLB_InternalTempSensor@rxBuffer                cstackBANK0  000062
ASLB_InternalTempSensor@rx_index                cstackBANK0  000064
ASLB_MuxOpenCircuit@cmdReadbackPkt              cstackBANK0  000065
ASLB_MuxOpenCircuit@rxBuffer                    cstackBANK0  000062
ASLB_MuxOpenCircuit@rx_index                    cstackBANK0  000064
ASLB_MuxReadingVDD@cmdReadbackPkt               cstackBANK0  000065
ASLB_MuxReadingVDD@rxBuffer                     cstackBANK0  000062
ASLB_MuxReadingVDD@rx_index                     cstackBANK0  000064
ASLB_OscillatorRegulatorVoltage@cmdReadbackPkt  cstackBANK0  000065
ASLB_OscillatorRegulatorVoltage@rxBuffer        cstackBANK0  000062
ASLB_OscillatorRegulatorVoltage@rx_index        cstackBANK0  000064
ASLB_PierceOscillator@rxBuffer                  cstackBANK0  000060
ASLB_PierceOscillator@rx_index                  cstackBANK0  000062
ASLB_RDResistor@rxBuffer                        cstackBANK0  000060
ASLB_RDResistor@rx_index                        cstackBANK0  000062
ASLB_SheetResistance@rxBuffer                   cstackBANK0  0000C4
ASLB_SheetResistance@rx_index                   cstackBANK0  0000C6
ASLB_TempSetDACVoltage@cmdReadbackPkt           cstackBANK0  000065
ASLB_TempSetDACVoltage@i                        cstackBANK0  0000AC
ASLB_TempSetDACVoltage@rxBuffer                 cstackBANK0  000062
ASLB_TempSetDACVoltage@rx_index                 cstackBANK0  000064
ASLB_VaricapBiasSteering@cmdReadbackPkt         cstackBANK0  000065
ASLB_VaricapBiasSteering@rxBuffer               cstackBANK0  000062
ASLB_VaricapBiasSteering@rx_index               cstackBANK0  000064
ASLB_VaricapDACVoltage@cmdReadbackPkt           cstackBANK0  000065
ASLB_VaricapDACVoltage@rxBuffer                 cstackBANK0  000062
ASLB_VaricapDACVoltage@rx_index                 cstackBANK0  000064
ASLB_ZTCReferenceCurrent@cmdReadbackPkt         cstackBANK0  000065
ASLB_ZTCReferenceCurrent@rxBuffer               cstackBANK0  000062
ASLB_ZTCReferenceCurrent@rx_index               cstackBANK0  000064
ASLB_cnfg0@rxBuffer                             cstackBANK0  000060
ASLB_cnfg1@rxBuffer                             cstackBANK0  000060
ASLB_debug0@rxBuffer                            cstackBANK0  000060
ASLB_debug0@rx_index                            cstackBANK0  000062
ASLB_debug1@cmdReadbackPkt                      cstackBANK0  000081
ASLB_debug1@ramAddrHi                           cstackBANK0  00007E
ASLB_debug1@ramAddrLo                           cstackBANK0  00007F
ASLB_debug1@ramData                             cstackBANK0  000074
ASLB_debug1@ramRdPkt                            cstackBANK2  000200
ASLB_debug1@ramReadbackPkt                      cstackBANK1  0001A2
ASLB_debug1@ramWrPkt                            cstackBANK2  000247
ASLB_debug1@rxBuffer                            cstackBANK0  000072
ASLB_debug1@rx_index                            cstackBANK0  000080
ASLB_debug1@stream                              cstackBANK0  000076
ASLB_debug1@stream_status                       cstackBANK0  000075
ASLB_debug2@F12373                              bssBANK4     0004F5
ASLB_debug2@rxBuffer                            cstackBANK0  000078
ASLB_debug2@rx_index                            cstackBANK0  000084
ASLB_debug2@wr_status                           cstackBANK0  000085
ASLB_debug2@zeros                               cstackBANK0  00007A
ASLB_debug3@dataByte                            cstackBANK0  000063
ASLB_debug3@rxBuffer                            cstackBANK0  000061
ASLB_debug3@rx_index                            cstackBANK0  000064
EUSART1_Write@txData                            cstackBANK0  000060
I2C1_ISR@i2c_10bit_address_restart              bssCOMRAM    00002C
I2C1_ISR@i2c_address                            bssCOMRAM    000041
I2C1_ISR@i2c_bytes_left                         bssCOMRAM    00002D
I2C1_ISR@pi2c_buf_ptr                           bssBANK3     0003D5
I2C1_MasterRead@address                         cstackBANK0  00006C
I2C1_MasterRead@length                          cstackBANK0  00006B
I2C1_MasterRead@pdata                           cstackBANK0  000069
I2C1_MasterRead@pflag                           cstackBANK0  00006E
I2C1_MasterRead@trBlock                         bssBANK3     0003EC
I2C1_MasterReadTRBBuild@address                 cstackBANK0  000065
I2C1_MasterReadTRBBuild@length                  cstackBANK0  000064
I2C1_MasterReadTRBBuild@pdata                   cstackBANK0  000062
I2C1_MasterReadTRBBuild@ptrb                    cstackBANK0  000060
I2C1_MasterTRBInsert@count                      cstackBANK0  000065
I2C1_MasterTRBInsert@pflag                      cstackBANK0  000062
I2C1_MasterTRBInsert@ptrb_list                  cstackBANK0  000060
I2C1_MasterWrite@address                        cstackBANK0  00006C
I2C1_MasterWrite@length                         cstackBANK0  00006B
I2C1_MasterWrite@pdata                          cstackBANK0  000069
I2C1_MasterWrite@pflag                          cstackBANK0  00006E
I2C1_MasterWrite@trBlock                        bssBANK3     0003F1
I2C1_MasterWriteTRBBuild@address                cstackBANK0  000065
I2C1_MasterWriteTRBBuild@length                 cstackBANK0  000064
I2C1_MasterWriteTRBBuild@pdata                  cstackBANK0  000062
I2C1_MasterWriteTRBBuild@ptrb                   cstackBANK0  000060
I2C1_Stop@completion_code                       cstackCOMRAM 000003
PIN_MANAGER_Initialize@state                    cstackBANK0  000060
TMR0_SetInterruptHandler@InterruptHandler       cstackBANK0  000060
TMR0_Write16bitTimer@timerVal                   cstackBANK0  000060
_ANSELA                                         (abs)        000F11
_ANSELB                                         (abs)        000F19
_ANSELC                                         (abs)        000F21
_ANSELD                                         (abs)        000F26
_ANSELE                                         (abs)        000F2E
_ASLB_ADC                                       text45       0040B0
_ASLB_ADCReferenceVoltage                       text43       003DC4
_ASLB_AnalogMuxReadingSetup                     text41       0032E4
_ASLB_CFCVVaricap                               text40       0040A8
_ASLB_CTHERM                                    text39       003E16
_ASLB_ColpittsOscillator                        text38       0040A0
_ASLB_CommonGate                                text37       004098
_ASLB_ContinuityESD                             text36       0040E2
_ASLB_CurrentLimitDACVoltage                    text34       0033C0
_ASLB_DACReferenceVoltage                       text33       003C10
_ASLB_DigitalRegulatorVoltage                   text32       003BDC
_ASLB_ExternalReferenceVoltage                  text31       003F00
_ASLB_HeaterFBSignals                           text30       0038DC
_ASLB_HeaterFunctionality                       text29       002D02
_ASLB_InternalTempSensor                        text28       003BA8
_ASLB_MuxOpenCircuit                            text27       003B74
_ASLB_MuxReadingVDD                             text26       003D9A
_ASLB_OscillatorRegulatorVoltage                text25       003EE6
_ASLB_PierceOscillator                          text24       004090
_ASLB_RDResistor                                text23       004088
_ASLB_SheetResistance                           text20       0031C0
_ASLB_TempSetDACVoltage                         text18       003494
_ASLB_VaricapBiasSteering                       text17       004008
_ASLB_VaricapDACVoltage                         text16       003B40
_ASLB_ZTCReferenceCurrent                       text15       003B0C
_ASLB_cnfg0                                     text73       0040E8
_ASLB_cnfg1                                     text72       0040E6
_ASLB_debug0                                    text69       003E8C
_ASLB_debug1                                    text60       002136
_ASLB_debug2                                    text57       003AD6
_ASLB_debug3                                    text55       0034F8
_BAUD1CON                                       (abs)        000F9F
_BORON_COMM_TYPE                                bssCOMRAM    000030
_EUSART1_Initialize                             text86       003A64
_EUSART1_Receive_ISR                            text101      004054
_EUSART1_Transmit_ISR                           text100      003CAA
_EUSART1_Write                                  text78       003968
_GIE                                            (abs)        007F97
_HX_Initialize                                  text87       003FC6
_I2C1_BusCollisionISR                           text99       0040EA
_I2C1_FunctionComplete                          text98       003FAE
_I2C1_ISR                                       text96       001BC8
_I2C1_Initialize                                text85       003C78
_I2C1_MasterRead                                text12       003710
_I2C1_MasterReadTRBBuild                        text66       0036BE
_I2C1_MasterTRBInsert                           text65       002FDE
_I2C1_MasterWrite                               text59       003760
_I2C1_MasterWriteTRBBuild                       text64       003922
_I2C1_Stop                                      text97       0039EA
_INTCONbits                                     (abs)        000FF2
_INTERRUPT_Initialize                           text84       0040D6
_INTERRUPT_InterruptManager                     intcode      000008
_LATA                                           (abs)        000F83
_LATAbits                                       (abs)        000F83
_LATB                                           (abs)        000F84
_LATBbits                                       (abs)        000F84
_LATC                                           (abs)        000F85
_LATCH_ADC_DATA                                 bssBANK5     0005D9
_LATCH_ADC_MUX_DATA                             bssBANK6     0006F3
_LATCH_ANALOG_DATA                              bssBANK5     0005ED
_LATCH_BIAS_DATA                                bssBANK5     0005E1
_LATCH_CLOCK_SELECT_DATA                        bssBANK5     0005D5
_LATCH_CMOS_DATA                                bssBANK5     0005DD
_LATCH_HEAT_DAC_DATA                            bssBANK5     0005E9
_LATCH_OCXO_DIVISOR_DATA                        bssBANK6     0006EF
_LATCH_OSC0_DATA                                dataBANK5    0005F9
_LATCH_OSC1_DATA                                bssBANK5     0005F5
_LATCH_OSC2_DATA                                bssBANK5     0005F1
_LATCH_OVEN_DATA                                bssBANK2     0002E2
_LATCH_VARACTOR_DAC_DATA                        bssBANK5     0005E5
_LATD                                           (abs)        000F86
_LATE                                           (abs)        000F87
_NVMADRH                                        (abs)        000F7F
_NVMADRL                                        (abs)        000F7E
_NVMCON1bits                                    (abs)        000F81
_NVMCON2                                        (abs)        000F82
_NVMDAT                                         (abs)        000F80
_ODCONA                                         (abs)        000F0F
_ODCONB                                         (abs)        000F17
_ODCONC                                         (abs)        000F1F
_ODCOND                                         (abs)        000F24
_ODCONE                                         (abs)        000F2C
_OSCCON1                                        (abs)        000ED8
_OSCCON3                                        (abs)        000EDA
_OSCEN                                          (abs)        000EDC
_OSCFRQ                                         (abs)        000EDE
_OSCILLATOR_Initialize                          text83       003F66
_OSCTUNE                                        (abs)        000EDD
_PIE0bits                                       (abs)        000EC2
_PIE3bits                                       (abs)        000EC5
_PIN_MANAGER_Initialize                         text82       002DCC
_PIR0bits                                       (abs)        000ECA
_PIR3bits                                       (abs)        000ECD
_PIR7bits                                       (abs)        000ED1
_PORTA                                          (abs)        000F8D
_PORTAbits                                      (abs)        000F8D
_PORTBbits                                      (abs)        000F8E
_PPSLOCK                                        (abs)        000EA0
_PPSLOCKbits                                    (abs)        000EA0
_RB1PPS                                         (abs)        000EF0
_RC1PPS                                         (abs)        000EF8
_RC1REG                                         (abs)        000F99
_RC1STA                                         (abs)        000F9D
_RC1STAbits                                     (abs)        000F9D
_RC2PPS                                         (abs)        000EF9
_RX1PPSbits                                     (abs)        000EB5
_SFR_ADC_DIV_DATA                               bssBANK2     0002EE
_SFR_ADC_MUX_DATA                               bssBANK2     0002ED
_SFR_ANALOG_DATA                                bssBANK2     0002F7
_SFR_ASIC_REV_DATA                              bssBANK2     0002EC
_SFR_BIAS_DATA                                  bssBANK2     0002F3
_SFR_CLK_SEL_DATA                               bssBANK2     0002EF
_SFR_CMOS_OUT_DATA                              bssBANK2     0002F1
_SFR_EXT_DATA                                   bssBANK2     0002F2
_SFR_HEAT_DATA                                  bssBANK2     0002F5
_SFR_OCXO_DIV_DATA                              bssBANK2     0002F0
_SFR_OSC0_DATA                                  bssBANK2     0002FA
_SFR_OSC1_DATA                                  bssBANK2     0002F9
_SFR_OSC2_DATA                                  bssBANK2     0002F8
_SFR_OTP_DIV_100US_HIGH_DATA                    bssBANK3     0003EA
_SFR_OTP_DIV_100US_LOW_DATA                     bssBANK3     0003E9
_SFR_OTP_DIV_400US_HIGH_DATA                    bssBANK3     0003E8
_SFR_OTP_DIV_400US_LOW_DATA                     bssBANK3     0003E7
_SFR_OTP_MPP_DATA                               bssBANK2     0002EA
_SFR_OTP_MRR_HI_DATA                            bssBANK2     0002E8
_SFR_OTP_MRR_LO_DATA                            bssBANK2     0002E9
_SFR_OTP_MR_DATA                                bssBANK2     0002EB
_SFR_OTP_ST_TIMING_DATA                         bssBANK3     0003E6
_SFR_OTP_WR_ADDR_HIGH_DATA                      bssBANK2     0002E7
_SFR_OTP_WR_ADDR_LOW_DATA                       bssBANK2     0002E6
_SFR_OTP_WR_DATA_DATA                           bssBANK3     0003EB
_SFR_OVEN_DATA                                  bssBANK2     0002F6
_SFR_P0_DATA                                    bssBANK2     0002FC
_SFR_P1_DATA                                    bssBANK2     0002FB
_SFR_SW_100US_HIGH_DATA                         bssBANK3     0003E4
_SFR_SW_100US_LOW_DATA                          bssBANK3     0003E5
_SFR_SW_BIT_DATA_DATA                           bssBANK3     0003DD
_SFR_SW_BIT_DATA_ST_DATA                        bssBANK3     0003DC
_SFR_SW_BIT_INT_DATA                            bssBANK3     0003E1
_SFR_SW_BYT_INT_DATA                            bssBANK3     0003DF
_SFR_SW_DET_BIT_DATA                            bssBANK3     0003DE
_SFR_SW_STOP_DET_DATA                           bssBANK3     0003DB
_SFR_SW_STOP_DET_ST_DATA                        bssBANK3     0003DA
_SFR_SW_ST_DET_DATA                             bssBANK3     0003E3
_SFR_SW_WR_BIT_DATA                             bssBANK3     0003E2
_SFR_SW_WR_BYT_DATA                             bssBANK3     0003E0
_SFR_VAR_DATA                                   bssBANK2     0002F4
_SP1BRGH                                        (abs)        000F9C
_SP1BRGL                                        (abs)        000F9B
_SSP1ADD                                        (abs)        000F93
_SSP1BUF                                        (abs)        000F92
_SSP1CLKPPSbits                                 (abs)        000EB7
_SSP1CON1                                       (abs)        000F96
_SSP1CON1bits                                   (abs)        000F96
_SSP1CON2bits                                   (abs)        000F97
_SSP1CON3                                       (abs)        000F98
_SSP1DATPPSbits                                 (abs)        000EB8
_SSP1STAT                                       (abs)        000F95
_SYSTEM_Initialize                              text79       003F1A
_T0CON0                                         (abs)        000FD5
_T0CON0bits                                     (abs)        000FD5
_T0CON1                                         (abs)        000FD6
_TMR0H                                          (abs)        000FD4
_TMR0L                                          (abs)        000FD3
_TMR0_DefaultInterruptHandler                   text94       0040C4
_TMR0_ISR                                       text93       003D3C
_TMR0_Initialize                                text80       0039AC
_TMR0_InterruptHandler                          nvBANK3      0003FB
_TMR0_SetInterruptHandler                       text81       004064
_TMR0_StartTimer                                text110      0040DE
_TMR0_StopTimer                                 text77       0040D2
_TMR0_Write16bitTimer                           text76       004072
_TRISA                                          (abs)        000F88
_TRISB                                          (abs)        000F89
_TRISC                                          (abs)        000F8A
_TRISD                                          (abs)        000F8B
_TRISE                                          (abs)        000F8C
_TX1REG                                         (abs)        000F9A
_TX1STA                                         (abs)        000F9E
_WPUA                                           (abs)        000F10
_WPUB                                           (abs)        000F18
_WPUC                                           (abs)        000F20
_WPUD                                           (abs)        000F25
_WPUE                                           (abs)        000F2D
__CFG_BOREN$SBORDIS                             (abs)        000000
__CFG_BORV$VBOR_2P45                            (abs)        000000
__CFG_CLKOUTEN$OFF                              (abs)        000000
__CFG_CP$OFF                                    (abs)        000000
__CFG_CPD$OFF                                   (abs)        000000
__CFG_CSWEN$ON                                  (abs)        000000
__CFG_DEBUG$OFF                                 (abs)        000000
__CFG_EBTR0$OFF                                 (abs)        000000
__CFG_EBTR1$OFF                                 (abs)        000000
__CFG_EBTR2$OFF                                 (abs)        000000
__CFG_EBTR3$OFF                                 (abs)        000000
__CFG_EBTR4$OFF                                 (abs)        000000
__CFG_EBTR5$OFF                                 (abs)        000000
__CFG_EBTR6$OFF                                 (abs)        000000
__CFG_EBTR7$OFF                                 (abs)        000000
__CFG_EBTRB$OFF                                 (abs)        000000
__CFG_FCMEN$ON                                  (abs)        000000
__CFG_FEXTOSC$OFF                               (abs)        000000
__CFG_LPBOREN$OFF                               (abs)        000000
__CFG_LVP$ON                                    (abs)        000000
__CFG_MCLRE$EXTMCLR                             (abs)        000000
__CFG_PPS1WAY$ON                                (abs)        000000
__CFG_PWRTE$OFF                                 (abs)        000000
__CFG_RSTOSC$HFINTOSC_64MHZ                     (abs)        000000
__CFG_SCANE$ON                                  (abs)        000000
__CFG_STVREN$ON                                 (abs)        000000
__CFG_WDTCCS$SC                                 (abs)        000000
__CFG_WDTCPS$WDTCPS_31                          (abs)        000000
__CFG_WDTCWS$WDTCWS_7                           (abs)        000000
__CFG_WDTE$OFF                                  (abs)        000000
__CFG_WRT0$OFF                                  (abs)        000000
__CFG_WRT1$OFF                                  (abs)        000000
__CFG_WRT2$OFF                                  (abs)        000000
__CFG_WRT3$OFF                                  (abs)        000000
__CFG_WRT4$OFF                                  (abs)        000000
__CFG_WRT5$OFF                                  (abs)        000000
__CFG_WRT6$OFF                                  (abs)        000000
__CFG_WRT7$OFF                                  (abs)        000000
__CFG_WRTB$OFF                                  (abs)        000000
__CFG_WRTC$OFF                                  (abs)        000000
__CFG_WRTD$OFF                                  (abs)        000000
__CFG_XINST$OFF                                 (abs)        000000
__CFG_ZCD$OFF                                   (abs)        000000
__HRAM                                          (abs)        000000
__Habs1                                         abs1         000000
__Hbank0                                        bank0        000000
__Hbank1                                        bank1        000000
__Hbank10                                       bank10       000000
__Hbank11                                       bank11       000000
__Hbank12                                       bank12       000000
__Hbank13                                       bank13       000000
__Hbank14                                       bank14       000000
__Hbank2                                        bank2        000000
__Hbank3                                        bank3        000000
__Hbank4                                        bank4        000000
__Hbank5                                        bank5        000000
__Hbank6                                        bank6        000000
__Hbank7                                        bank7        000000
__Hbank8                                        bank8        000000
__Hbank9                                        bank9        000000
__Hbigbss                                       bigbss       000000
__Hbigdata                                      bigdata      000000
__Hbigram                                       bigram       000000
__Hbss                                          bss          000000
__HbssBANK11                                    bssBANK11    000000
__HbssBANK2                                     bssBANK2     000000
__HbssBANK3                                     bssBANK3     000000
__HbssBANK4                                     bssBANK4     000000
__HbssBANK5                                     bssBANK5     000000
__HbssBANK6                                     bssBANK6     000000
__HbssCOMRAM                                    bssCOMRAM    000000
__Hcinit                                        cinit        000000
__Hclrtext                                      clrtext      000000
__Hcomram                                       comram       000000
__Hconfig                                       config       30000C
__Hconst                                        const        000000
__HcstackBANK0                                  cstackBANK0  000000
__HcstackBANK1                                  cstackBANK1  000000
__HcstackBANK10                                 cstackBANK10 000000
__HcstackBANK12                                 cstackBANK12 000000
__HcstackBANK2                                  cstackBANK2  000000
__HcstackBANK3                                  cstackBANK3  000000
__HcstackBANK4                                  cstackBANK4  000000
__HcstackBANK5                                  cstackBANK5  000000
__HcstackBANK6                                  cstackBANK6  000000
__HcstackBANK7                                  cstackBANK7  000000
__HcstackBANK8                                  cstackBANK8  000000
__HcstackBANK9                                  cstackBANK9  000000
__HcstackCOMRAM                                 cstackCOMRAM 000000
__Hdata                                         data         000000
__HdataBANK5                                    dataBANK5    000000
__HdataCOMRAM                                   dataCOMRAM   000000
__Heeprom_data                                  eeprom_data  000000
__Hfarbss                                       farbss       000000
__Hfardata                                      fardata      000000
__Hibigdata                                     ibigdata     000000
__Hidata                                        idata        000000
__HidataBANK5                                   idataBANK5   000000
__HidataCOMRAM                                  idataCOMRAM  000000
__Hidloc                                        idloc        200010
__Hifardata                                     ifardata     000000
__Hinit                                         init         0000EC
__Hintcode                                      intcode      0000E8
__Hintcode_body                                 intcode_body 000000
__Hintcodelo                                    intcodelo    0000E8
__Hintentry                                     intentry     000000
__Hintret                                       intret       000000
__Hintsave_regs                                 intsave_regs 000000
__Hirdata                                       irdata       000000
__Hmediumconst                                  mediumconst  000000
__HnvBANK3                                      nvBANK3      000000
__HnvCOMRAM                                     nvCOMRAM     000000
__HnvFARRAM                                     nvFARRAM     000000
__Hnvbit                                        nvbit        000000
__Hnvrram                                       nvrram       000000
__Hparam                                        rparam       000000
__Hpowerup                                      powerup      0000E8
__Hram                                          ram          000000
__Hramtop                                       ramtop       000F00
__Hrbit                                         rbit         000000
__Hrbss                                         rbss         000000
__Hrdata                                        rdata        000000
__Hreset_vec                                    reset_vec    000004
__Hrparam                                       rparam       000000
__Hsfr                                          sfr          000000
__Hsmallconst                                   smallconst   000000
__Hspace_0                                      (abs)        30000C
__Hspace_1                                      (abs)        000D00
__Hspace_2                                      (abs)        000000
__Hstack                                        stack        000000
__Hstruct                                       struct       000000
__Htemp                                         temp         000048
__Htext                                         text         000000
__Htext0                                        text0        000000
__Htext1                                        text1        000000
__Htext10                                       text10       000000
__Htext100                                      text100      000000
__Htext101                                      text101      000000
__Htext102                                      text102      000000
__Htext103                                      text103      000000
__Htext104                                      text104      000000
__Htext105                                      text105      000000
__Htext106                                      text106      000000
__Htext107                                      text107      000000
__Htext108                                      text108      000000
__Htext109                                      text109      000000
__Htext11                                       text11       000000
__Htext110                                      text110      000000
__Htext111                                      text111      000000
__Htext112                                      text112      000000
__Htext113                                      text113      000000
__Htext114                                      text114      000000
__Htext115                                      text115      000000
__Htext116                                      text116      000000
__Htext12                                       text12       000000
__Htext13                                       text13       000000
__Htext14                                       text14       000000
__Htext15                                       text15       000000
__Htext16                                       text16       000000
__Htext17                                       text17       000000
__Htext18                                       text18       000000
__Htext19                                       text19       000000
__Htext2                                        text2        000000
__Htext20                                       text20       000000
__Htext21                                       text21       000000
__Htext22                                       text22       000000
__Htext23                                       text23       000000
__Htext24                                       text24       000000
__Htext25                                       text25       000000
__Htext26                                       text26       000000
__Htext27                                       text27       000000
__Htext28                                       text28       000000
__Htext29                                       text29       000000
__Htext3                                        text3        000000
__Htext30                                       text30       000000
__Htext31                                       text31       000000
__Htext32                                       text32       000000
__Htext33                                       text33       000000
__Htext34                                       text34       000000
__Htext35                                       text35       000000
__Htext36                                       text36       000000
__Htext37                                       text37       000000
__Htext38                                       text38       000000
__Htext39                                       text39       000000
__Htext4                                        text4        000000
__Htext40                                       text40       000000
__Htext41                                       text41       000000
__Htext42                                       text42       000000
__Htext43                                       text43       000000
__Htext44                                       text44       000000
__Htext45                                       text45       000000
__Htext46                                       text46       000000
__Htext47                                       text47       000000
__Htext48                                       text48       000000
__Htext49                                       text49       000000
__Htext5                                        text5        000000
__Htext50                                       text50       000000
__Htext51                                       text51       000000
__Htext52                                       text52       000000
__Htext53                                       text53       000000
__Htext54                                       text54       000000
__Htext55                                       text55       000000
__Htext56                                       text56       000000
__Htext57                                       text57       000000
__Htext58                                       text58       000000
__Htext59                                       text59       000000
__Htext6                                        text6        000000
__Htext60                                       text60       000000
__Htext61                                       text61       000000
__Htext62                                       text62       000000
__Htext63                                       text63       000000
__Htext64                                       text64       000000
__Htext65                                       text65       000000
__Htext66                                       text66       000000
__Htext67                                       text67       000000
__Htext68                                       text68       000000
__Htext69                                       text69       000000
__Htext7                                        text7        000000
__Htext70                                       text70       000000
__Htext71                                       text71       000000
__Htext72                                       text72       000000
__Htext73                                       text73       000000
__Htext74                                       text74       000000
__Htext75                                       text75       000000
__Htext76                                       text76       000000
__Htext77                                       text77       000000
__Htext78                                       text78       000000
__Htext79                                       text79       000000
__Htext8                                        text8        000000
__Htext80                                       text80       000000
__Htext81                                       text81       000000
__Htext82                                       text82       000000
__Htext83                                       text83       000000
__Htext84                                       text84       000000
__Htext85                                       text85       000000
__Htext86                                       text86       000000
__Htext87                                       text87       000000
__Htext88                                       text88       000000
__Htext89                                       text89       000000
__Htext9                                        text9        000000
__Htext90                                       text90       000000
__Htext91                                       text91       000000
__Htext93                                       text93       000000
__Htext94                                       text94       000000
__Htext95                                       text95       000000
__Htext96                                       text96       000000
__Htext97                                       text97       000000
__Htext98                                       text98       000000
__Htext99                                       text99       000000
__LRAM                                          (abs)        000001
__Labs1                                         abs1         000000
__Lbank0                                        bank0        000000
__Lbank1                                        bank1        000000
__Lbank10                                       bank10       000000
__Lbank11                                       bank11       000000
__Lbank12                                       bank12       000000
__Lbank13                                       bank13       000000
__Lbank14                                       bank14       000000
__Lbank2                                        bank2        000000
__Lbank3                                        bank3        000000
__Lbank4                                        bank4        000000
__Lbank5                                        bank5        000000
__Lbank6                                        bank6        000000
__Lbank7                                        bank7        000000
__Lbank8                                        bank8        000000
__Lbank9                                        bank9        000000
__Lbigbss                                       bigbss       000000
__Lbigdata                                      bigdata      000000
__Lbigram                                       bigram       000000
__Lbss                                          bss          000000
__LbssBANK11                                    bssBANK11    000000
__LbssBANK2                                     bssBANK2     000000
__LbssBANK3                                     bssBANK3     000000
__LbssBANK4                                     bssBANK4     000000
__LbssBANK5                                     bssBANK5     000000
__LbssBANK6                                     bssBANK6     000000
__LbssCOMRAM                                    bssCOMRAM    000000
__Lcinit                                        cinit        000000
__Lclrtext                                      clrtext      000000
__Lcomram                                       comram       000000
__Lconfig                                       config       300000
__Lconst                                        const        000000
__LcstackBANK0                                  cstackBANK0  000000
__LcstackBANK1                                  cstackBANK1  000000
__LcstackBANK10                                 cstackBANK10 000000
__LcstackBANK12                                 cstackBANK12 000000
__LcstackBANK2                                  cstackBANK2  000000
__LcstackBANK3                                  cstackBANK3  000000
__LcstackBANK4                                  cstackBANK4  000000
__LcstackBANK5                                  cstackBANK5  000000
__LcstackBANK6                                  cstackBANK6  000000
__LcstackBANK7                                  cstackBANK7  000000
__LcstackBANK8                                  cstackBANK8  000000
__LcstackBANK9                                  cstackBANK9  000000
__LcstackCOMRAM                                 cstackCOMRAM 000000
__Ldata                                         data         000000
__LdataBANK5                                    dataBANK5    000000
__LdataCOMRAM                                   dataCOMRAM   000000
__Leeprom_data                                  eeprom_data  000000
__Lfarbss                                       farbss       000000
__Lfardata                                      fardata      000000
__Libigdata                                     ibigdata     000000
__Lidata                                        idata        000000
__LidataBANK5                                   idataBANK5   000000
__LidataCOMRAM                                  idataCOMRAM  000000
__Lidloc                                        idloc        200000
__Lifardata                                     ifardata     000000
__Linit                                         init         0000E8
__Lintcode                                      intcode      000008
__Lintcode_body                                 intcode_body 000000
__Lintcodelo                                    intcodelo    0000E8
__Lintentry                                     intentry     000000
__Lintret                                       intret       000000
__Lintsave_regs                                 intsave_regs 000000
__Lirdata                                       irdata       000000
__Lmediumconst                                  mediumconst  000000
__LnvBANK3                                      nvBANK3      000000
__LnvCOMRAM                                     nvCOMRAM     000000
__LnvFARRAM                                     nvFARRAM     000000
__Lnvbit                                        nvbit        000000
__Lnvrram                                       nvrram       000000
__Lparam                                        rparam       000000
__Lpowerup                                      powerup      0000E8
__Lram                                          ram          000000
__Lramtop                                       ramtop       000F00
__Lrbit                                         rbit         000000
__Lrbss                                         rbss         000000
__Lrdata                                        rdata        000000
__Lreset_vec                                    reset_vec    000000
__Lrparam                                       rparam       000000
__Lsfr                                          sfr          000000
__Lsmallconst                                   smallconst   000000
__Lspace_0                                      (abs)        000000
__Lspace_1                                      (abs)        000000
__Lspace_2                                      (abs)        000000
__Lstack                                        stack        000000
__Lstruct                                       struct       000000
__Ltemp                                         temp         000047
__Ltext                                         text         000000
__Ltext0                                        text0        000000
__Ltext1                                        text1        000000
__Ltext10                                       text10       000000
__Ltext100                                      text100      000000
__Ltext101                                      text101      000000
__Ltext102                                      text102      000000
__Ltext103                                      text103      000000
__Ltext104                                      text104      000000
__Ltext105                                      text105      000000
__Ltext106                                      text106      000000
__Ltext107                                      text107      000000
__Ltext108                                      text108      000000
__Ltext109                                      text109      000000
__Ltext11                                       text11       000000
__Ltext110                                      text110      000000
__Ltext111                                      text111      000000
__Ltext112                                      text112      000000
__Ltext113                                      text113      000000
__Ltext114                                      text114      000000
__Ltext115                                      text115      000000
__Ltext116                                      text116      000000
__Ltext12                                       text12       000000
__Ltext13                                       text13       000000
__Ltext14                                       text14       000000
__Ltext15                                       text15       000000
__Ltext16                                       text16       000000
__Ltext17                                       text17       000000
__Ltext18                                       text18       000000
__Ltext19                                       text19       000000
__Ltext2                                        text2        000000
__Ltext20                                       text20       000000
__Ltext21                                       text21       000000
__Ltext22                                       text22       000000
__Ltext23                                       text23       000000
__Ltext24                                       text24       000000
__Ltext25                                       text25       000000
__Ltext26                                       text26       000000
__Ltext27                                       text27       000000
__Ltext28                                       text28       000000
__Ltext29                                       text29       000000
__Ltext3                                        text3        000000
__Ltext30                                       text30       000000
__Ltext31                                       text31       000000
__Ltext32                                       text32       000000
__Ltext33                                       text33       000000
__Ltext34                                       text34       000000
__Ltext35                                       text35       000000
__Ltext36                                       text36       000000
__Ltext37                                       text37       000000
__Ltext38                                       text38       000000
__Ltext39                                       text39       000000
__Ltext4                                        text4        000000
__Ltext40                                       text40       000000
__Ltext41                                       text41       000000
__Ltext42                                       text42       000000
__Ltext43                                       text43       000000
__Ltext44                                       text44       000000
__Ltext45                                       text45       000000
__Ltext46                                       text46       000000
__Ltext47                                       text47       000000
__Ltext48                                       text48       000000
__Ltext49                                       text49       000000
__Ltext5                                        text5        000000
__Ltext50                                       text50       000000
__Ltext51                                       text51       000000
__Ltext52                                       text52       000000
__Ltext53                                       text53       000000
__Ltext54                                       text54       000000
__Ltext55                                       text55       000000
__Ltext56                                       text56       000000
__Ltext57                                       text57       000000
__Ltext58                                       text58       000000
__Ltext59                                       text59       000000
__Ltext6                                        text6        000000
__Ltext60                                       text60       000000
__Ltext61                                       text61       000000
__Ltext62                                       text62       000000
__Ltext63                                       text63       000000
__Ltext64                                       text64       000000
__Ltext65                                       text65       000000
__Ltext66                                       text66       000000
__Ltext67                                       text67       000000
__Ltext68                                       text68       000000
__Ltext69                                       text69       000000
__Ltext7                                        text7        000000
__Ltext70                                       text70       000000
__Ltext71                                       text71       000000
__Ltext72                                       text72       000000
__Ltext73                                       text73       000000
__Ltext74                                       text74       000000
__Ltext75                                       text75       000000
__Ltext76                                       text76       000000
__Ltext77                                       text77       000000
__Ltext78                                       text78       000000
__Ltext79                                       text79       000000
__Ltext8                                        text8        000000
__Ltext80                                       text80       000000
__Ltext81                                       text81       000000
__Ltext82                                       text82       000000
__Ltext83                                       text83       000000
__Ltext84                                       text84       000000
__Ltext85                                       text85       000000
__Ltext86                                       text86       000000
__Ltext87                                       text87       000000
__Ltext88                                       text88       000000
__Ltext89                                       text89       000000
__Ltext9                                        text9        000000
__Ltext90                                       text90       000000
__Ltext91                                       text91       000000
__Ltext93                                       text93       000000
__Ltext94                                       text94       000000
__Ltext95                                       text95       000000
__Ltext96                                       text96       000000
__Ltext97                                       text97       000000
__Ltext98                                       text98       000000
__Ltext99                                       text99       000000
__S0                                            (abs)        30000C
__S1                                            (abs)        000D00
__S2                                            (abs)        000000
___aldiv                                        text53       002B6A
___aldiv@counter                                cstackBANK0  000068
___aldiv@dividend                               cstackBANK0  000060
___aldiv@divisor                                cstackBANK0  000064
___aldiv@quotient                               cstackBANK0  00006A
___aldiv@sign                                   cstackBANK0  000069
___inthi_sp                                     stack        000000
___intlo_sp                                     stack        000000
___param_bank                                   (abs)        000000
___rparam_used                                  (abs)        000001
___sp                                           stack        000000
__accesstop                                     (abs)        000060
__activetblptr                                  (abs)        000003
__end_of_ASLB_ADC                               text45       0040B8
__end_of_ASLB_ADCReferenceVoltage               text43       003DEE
__end_of_ASLB_AnalogMuxReadingSetup             text41       003354
__end_of_ASLB_CFCVVaricap                       text40       0040B0
__end_of_ASLB_CTHERM                            text39       003E3E
__end_of_ASLB_ColpittsOscillator                text38       0040A8
__end_of_ASLB_CommonGate                        text37       0040A0
__end_of_ASLB_ContinuityESD                     text36       0040E4
__end_of_ASLB_CurrentLimitDACVoltage            text34       00342A
__end_of_ASLB_DACReferenceVoltage               text33       003C44
__end_of_ASLB_DigitalRegulatorVoltage           text32       003C10
__end_of_ASLB_ExternalReferenceVoltage          text31       003F1A
__end_of_ASLB_HeaterFBSignals                   text30       003922
__end_of_ASLB_HeaterFunctionality               text29       002DCC
__end_of_ASLB_InternalTempSensor                text28       003BDC
__end_of_ASLB_MuxOpenCircuit                    text27       003BA8
__end_of_ASLB_MuxReadingVDD                     text26       003DC4
__end_of_ASLB_OscillatorRegulatorVoltage        text25       003F00
__end_of_ASLB_PierceOscillator                  text24       004098
__end_of_ASLB_RDResistor                        text23       004090
__end_of_ASLB_SheetResistance                   text20       003254
__end_of_ASLB_TempSetDACVoltage                 text18       0034F8
__end_of_ASLB_VaricapBiasSteering               text17       00401C
__end_of_ASLB_VaricapDACVoltage                 text16       003B74
__end_of_ASLB_ZTCReferenceCurrent               text15       003B40
__end_of_ASLB_cnfg0                             text73       0040EA
__end_of_ASLB_cnfg1                             text72       0040E8
__end_of_ASLB_debug0                            text69       003EAE
__end_of_ASLB_debug1                            text60       0022B6
__end_of_ASLB_debug2                            text57       003B0C
__end_of_ASLB_debug3                            text55       003558
__end_of_EUSART1_Initialize                     text86       003A9E
__end_of_EUSART1_Receive_ISR                    text101      004064
__end_of_EUSART1_Transmit_ISR                   text100      003CDC
__end_of_EUSART1_Write                          text78       0039AC
__end_of_HX_Initialize                          text87       003FDC
__end_of_I2C1_BusCollisionISR                   text99       0040EC
__end_of_I2C1_FunctionComplete                  text98       003FC6
__end_of_I2C1_ISR                               text96       001E18
__end_of_I2C1_Initialize                        text85       003CAA
__end_of_I2C1_MasterRead                        text12       003760
__end_of_I2C1_MasterReadTRBBuild                text66       003710
__end_of_I2C1_MasterTRBInsert                   text65       003082
__end_of_I2C1_MasterWrite                       text59       0037B0
__end_of_I2C1_MasterWriteTRBBuild               text64       003968
__end_of_I2C1_Stop                              text97       003A28
__end_of_INTERRUPT_Initialize                   text84       0040DA
__end_of_INTERRUPT_InterruptManager             intcode      0000E8
__end_of_OSCILLATOR_Initialize                  text83       003F7E
__end_of_PIN_MANAGER_Initialize                 text82       002E88
__end_of_SYSTEM_Initialize                      text79       003F34
__end_of_TMR0_DefaultInterruptHandler           text94       0040CA
__end_of_TMR0_ISR                               text93       003D6C
__end_of_TMR0_Initialize                        text80       0039EA
__end_of_TMR0_SetInterruptHandler               text81       004072
__end_of_TMR0_StartTimer                        text110      0040E2
__end_of_TMR0_StopTimer                         text77       0040D6
__end_of_TMR0_Write16bitTimer                   text76       00407E
__end_of___aldiv                                text53       002C38
__end_of__initialization                        cinit        0032DA
__end_of_adjustI2CBaudRate                      text56       003ECA
__end_of_calcBaudRate                           text52       00366C
__end_of_calcChecksum                           text68       003D3C
__end_of_checkAndSendLatchData                  text21       0009F4
__end_of_cycleBoronPower                        text54       003F66
__end_of_filterLatchPacketResponses             text22       00286E
__end_of_findMaxI2CSpeed                        text51       0025A6
__end_of_hxCalcChecksum                         text115      003D9A
__end_of_hxClearArray                           text91       003E66
__end_of_hxCmdFilter                            text105      002136
__end_of_hxFlushInputBuffer                     text90       003EE6
__end_of_hxFlushMainDataBuffer                  text89       003FAE
__end_of_hxFlushOutputBuffer                    text88       003F96
__end_of_hxHandleTmr0                           text95       003A64
__end_of_hxHandleTxUART                         text74       003614
__end_of_hxISRHandle                            text102      002B6A
__end_of_hxOddParityCalc                        text9        0036BE
__end_of_hxSPPCarbonCheckBusy_test              text8        0013F6
__end_of_hxSPPCarbonProgram_test                text7        002434
__end_of_hxSPPCarbonReadReg_test                text6        001BC8
__end_of_hxSPPCarbonRead_test                   text5        003894
__end_of_hxSPPCarbonWriteAndVerity_test         text3        002D02
__end_of_hxSPPCarbonWriteReg_test               text4        002710
__end_of_hxSPPCarbonWrite_test                  text2        003AD6
__end_of_hxSetupPacket1                         text112      003800
__end_of_hxSetupPacket2                         text111      0033C0
__end_of_hxStartTimer                           text108      004054
__end_of_hxStopTimer                            text75       004030
__end_of_main                                   text0        003122
__end_of_memcpy                                 text67       0038DC
__end_of_readI2C                                text11       00384C
__end_of_resetLATCHData                         text50       002A94
__end_of_resetSFRData                           text49       002FDE
__end_of_run_ASLBoron                           text13       0016B8
__end_of_run_I2C                                text10       000DF0
__end_of_run_SPPCarbon_test                     text1        001958
__end_of_setCommI2C                             text48       0040C4
__end_of_setCommSingleWire                      text47       0040BE
__end_of_setCurrLimitDAC                        text35       0031C0
__end_of_setTempCtrlDAC                         text19       003E16
__end_of_setupCmdReadbackPkt                    text44       003C78
__end_of_setupLatchPkt                          text42       002F34
__end_of_streamBoronComm                        text61       003D0C
__end_of_streamI2C                              text63       001FAA
__end_of_streamSW                               text62       0040D2
__end_of_writeI2C                               text58       0035B8
__end_of_write_ASLBoron_cnfg                    text71       003494
__end_of_write_ASLBoron_cstm_cnfg               text70       0040E6
__end_of_write_ASLBoron_debug                   text46       0029B8
__end_of_write_ASLBoron_test                    text14       001108
__end_ofi2_TMR0_StopTimer                       text104      0040DE
__end_ofi2_TMR0_Write16bitTimer                 text109      004088
__end_ofi2_hxClearArray                         text114      003E8C
__end_ofi2_hxFlushInputBuffer                   text107      003F4E
__end_ofi2_hxFlushMainDataBuffer                text106      003FF2
__end_ofi2_hxFlushOutputBuffer                  text113      004008
__end_ofi2_hxStopTimer                          text103      004042
__initialization                                cinit        003254
__mediumconst                                   mediumconst  000000
__pbssBANK11                                    bssBANK11    000B00
__pbssBANK2                                     bssBANK2     0002DB
__pbssBANK3                                     bssBANK3     0003D5
__pbssBANK4                                     bssBANK4     0004D5
__pbssBANK5                                     bssBANK5     0005D5
__pbssBANK6                                     bssBANK6     0006D5
__pbssCOMRAM                                    bssCOMRAM    000024
__pcinit                                        cinit        003254
__pcstackBANK0                                  cstackBANK0  000060
__pcstackBANK1                                  cstackBANK1  000100
__pcstackBANK10                                 cstackBANK10 000A00
__pcstackBANK12                                 cstackBANK12 000C00
__pcstackBANK2                                  cstackBANK2  000200
__pcstackBANK3                                  cstackBANK3  000300
__pcstackBANK4                                  cstackBANK4  000400
__pcstackBANK5                                  cstackBANK5  000500
__pcstackBANK6                                  cstackBANK6  000600
__pcstackBANK7                                  cstackBANK7  000700
__pcstackBANK8                                  cstackBANK8  000800
__pcstackBANK9                                  cstackBANK9  000900
__pcstackCOMRAM                                 cstackCOMRAM 000001
__pdataBANK5                                    dataBANK5    0005F9
__pdataCOMRAM                                   dataCOMRAM   000046
__pidataBANK5                                   idataBANK5   0040CA
__pidataCOMRAM                                  idataCOMRAM  0040EC
__pintcode                                      intcode      000008
__pnvBANK3                                      nvBANK3      0003FB
__pnvCOMRAM                                     nvCOMRAM     000043
__ptext0                                        text0        003082
__ptext1                                        text1        0016B8
__ptext10                                       text10       0009F4
__ptext100                                      text100      003CAA
__ptext101                                      text101      004054
__ptext102                                      text102      002A94
__ptext103                                      text103      004030
__ptext104                                      text104      0040DA
__ptext105                                      text105      001FAA
__ptext106                                      text106      003FDC
__ptext107                                      text107      003F34
__ptext108                                      text108      004042
__ptext109                                      text109      00407E
__ptext11                                       text11       003800
__ptext110                                      text110      0040DE
__ptext111                                      text111      003354
__ptext112                                      text112      0037B0
__ptext113                                      text113      003FF2
__ptext114                                      text114      003E66
__ptext115                                      text115      003D6C
__ptext116                                      text116      000000
__ptext12                                       text12       003710
__ptext13                                       text13       0013F6
__ptext14                                       text14       000DF0
__ptext15                                       text15       003B0C
__ptext16                                       text16       003B40
__ptext17                                       text17       004008
__ptext18                                       text18       003494
__ptext19                                       text19       003DEE
__ptext2                                        text2        003A9E
__ptext20                                       text20       0031C0
__ptext21                                       text21       0000EC
__ptext22                                       text22       002710
__ptext23                                       text23       004088
__ptext24                                       text24       004090
__ptext25                                       text25       003EE6
__ptext26                                       text26       003D9A
__ptext27                                       text27       003B74
__ptext28                                       text28       003BA8
__ptext29                                       text29       002D02
__ptext3                                        text3        002C38
__ptext30                                       text30       0038DC
__ptext31                                       text31       003F00
__ptext32                                       text32       003BDC
__ptext33                                       text33       003C10
__ptext34                                       text34       0033C0
__ptext35                                       text35       003122
__ptext36                                       text36       0040E2
__ptext37                                       text37       004098
__ptext38                                       text38       0040A0
__ptext39                                       text39       003E16
__ptext4                                        text4        0025A6
__ptext40                                       text40       0040A8
__ptext41                                       text41       0032E4
__ptext42                                       text42       002E88
__ptext43                                       text43       003DC4
__ptext44                                       text44       003C44
__ptext45                                       text45       0040B0
__ptext46                                       text46       00286E
__ptext47                                       text47       0040B8
__ptext48                                       text48       0040BE
__ptext49                                       text49       002F34
__ptext5                                        text5        00384C
__ptext50                                       text50       0029B8
__ptext51                                       text51       002434
__ptext52                                       text52       003614
__ptext53                                       text53       002B6A
__ptext54                                       text54       003F4E
__ptext55                                       text55       0034F8
__ptext56                                       text56       003EAE
__ptext57                                       text57       003AD6
__ptext58                                       text58       003558
__ptext59                                       text59       003760
__ptext6                                        text6        001958
__ptext60                                       text60       002136
__ptext61                                       text61       003CDC
__ptext62                                       text62       0040CE
__ptext63                                       text63       001E18
__ptext64                                       text64       003922
__ptext65                                       text65       002FDE
__ptext66                                       text66       0036BE
__ptext67                                       text67       003894
__ptext68                                       text68       003D0C
__ptext69                                       text69       003E8C
__ptext7                                        text7        0022B6
__ptext70                                       text70       0040E4
__ptext71                                       text71       00342A
__ptext72                                       text72       0040E6
__ptext73                                       text73       0040E8
__ptext74                                       text74       0035B8
__ptext75                                       text75       00401C
__ptext76                                       text76       004072
__ptext77                                       text77       0040D2
__ptext78                                       text78       003968
__ptext79                                       text79       003F1A
__ptext8                                        text8        001108
__ptext80                                       text80       0039AC
__ptext81                                       text81       004064
__ptext82                                       text82       002DCC
__ptext83                                       text83       003F66
__ptext84                                       text84       0040D6
__ptext85                                       text85       003C78
__ptext86                                       text86       003A64
__ptext87                                       text87       003FC6
__ptext88                                       text88       003F7E
__ptext89                                       text89       003F96
__ptext9                                        text9        00366C
__ptext90                                       text90       003ECA
__ptext91                                       text91       003E3E
__ptext93                                       text93       003D3C
__ptext94                                       text94       0040C4
__ptext95                                       text95       003A28
__ptext96                                       text96       001BC8
__ptext97                                       text97       0039EA
__ptext98                                       text98       003FAE
__ptext99                                       text99       0040EA
__ramtop                                        ramtop       000F00
__size_of_ASLB_ADC                              (abs)        000000
__size_of_ASLB_ADCReferenceVoltage              (abs)        000000
__size_of_ASLB_AnalogMuxReadingSetup            (abs)        000000
__size_of_ASLB_CFCVVaricap                      (abs)        000000
__size_of_ASLB_CTHERM                           (abs)        000000
__size_of_ASLB_ColpittsOscillator               (abs)        000000
__size_of_ASLB_CommonGate                       (abs)        000000
__size_of_ASLB_ContinuityESD                    (abs)        000000
__size_of_ASLB_CurrentLimitDACVoltage           (abs)        000000
__size_of_ASLB_DACReferenceVoltage              (abs)        000000
__size_of_ASLB_DigitalRegulatorVoltage          (abs)        000000
__size_of_ASLB_ExternalReferenceVoltage         (abs)        000000
__size_of_ASLB_HeaterFBSignals                  (abs)        000000
__size_of_ASLB_HeaterFunctionality              (abs)        000000
__size_of_ASLB_InternalTempSensor               (abs)        000000
__size_of_ASLB_MuxOpenCircuit                   (abs)        000000
__size_of_ASLB_MuxReadingVDD                    (abs)        000000
__size_of_ASLB_OscillatorRegulatorVoltage       (abs)        000000
__size_of_ASLB_PierceOscillator                 (abs)        000000
__size_of_ASLB_RDResistor                       (abs)        000000
__size_of_ASLB_SheetResistance                  (abs)        000000
__size_of_ASLB_TempSetDACVoltage                (abs)        000000
__size_of_ASLB_VaricapBiasSteering              (abs)        000000
__size_of_ASLB_VaricapDACVoltage                (abs)        000000
__size_of_ASLB_ZTCReferenceCurrent              (abs)        000000
__size_of_ASLB_cnfg0                            (abs)        000000
__size_of_ASLB_cnfg1                            (abs)        000000
__size_of_ASLB_debug0                           (abs)        000000
__size_of_ASLB_debug1                           (abs)        000000
__size_of_ASLB_debug2                           (abs)        000000
__size_of_ASLB_debug3                           (abs)        000000
__size_of_EUSART1_Initialize                    (abs)        000000
__size_of_EUSART1_Receive_ISR                   (abs)        000000
__size_of_EUSART1_Transmit_ISR                  (abs)        000000
__size_of_EUSART1_Write                         (abs)        000000
__size_of_HX_Initialize                         (abs)        000000
__size_of_I2C1_BusCollisionISR                  (abs)        000000
__size_of_I2C1_FunctionComplete                 (abs)        000000
__size_of_I2C1_ISR                              (abs)        000000
__size_of_I2C1_Initialize                       (abs)        000000
__size_of_I2C1_MasterRead                       (abs)        000000
__size_of_I2C1_MasterReadTRBBuild               (abs)        000000
__size_of_I2C1_MasterTRBInsert                  (abs)        000000
__size_of_I2C1_MasterWrite                      (abs)        000000
__size_of_I2C1_MasterWriteTRBBuild              (abs)        000000
__size_of_I2C1_Stop                             (abs)        000000
__size_of_INTERRUPT_Initialize                  (abs)        000000
__size_of_INTERRUPT_InterruptManager            (abs)        000000
__size_of_OSCILLATOR_Initialize                 (abs)        000000
__size_of_PIN_MANAGER_Initialize                (abs)        000000
__size_of_SYSTEM_Initialize                     (abs)        000000
__size_of_TMR0_DefaultInterruptHandler          (abs)        000000
__size_of_TMR0_ISR                              (abs)        000000
__size_of_TMR0_Initialize                       (abs)        000000
__size_of_TMR0_SetInterruptHandler              (abs)        000000
__size_of_TMR0_StartTimer                       (abs)        000000
__size_of_TMR0_StopTimer                        (abs)        000000
__size_of_TMR0_Write16bitTimer                  (abs)        000000
__size_of___aldiv                               (abs)        000000
__size_of_adjustI2CBaudRate                     (abs)        000000
__size_of_calcBaudRate                          (abs)        000000
__size_of_calcChecksum                          (abs)        000000
__size_of_checkAndSendLatchData                 (abs)        000000
__size_of_cycleBoronPower                       (abs)        000000
__size_of_filterLatchPacketResponses            (abs)        000000
__size_of_findMaxI2CSpeed                       (abs)        000000
__size_of_hxCalcChecksum                        (abs)        000000
__size_of_hxClearArray                          (abs)        000000
__size_of_hxCmdFilter                           (abs)        000000
__size_of_hxFlushInputBuffer                    (abs)        000000
__size_of_hxFlushMainDataBuffer                 (abs)        000000
__size_of_hxFlushOutputBuffer                   (abs)        000000
__size_of_hxHandleTmr0                          (abs)        000000
__size_of_hxHandleTxUART                        (abs)        000000
__size_of_hxISRHandle                           (abs)        000000
__size_of_hxOddParityCalc                       (abs)        000000
__size_of_hxSPPCarbonCheckBusy_test             (abs)        000000
__size_of_hxSPPCarbonProgram_test               (abs)        000000
__size_of_hxSPPCarbonReadReg_test               (abs)        000000
__size_of_hxSPPCarbonRead_test                  (abs)        000000
__size_of_hxSPPCarbonWriteAndVerity_test        (abs)        000000
__size_of_hxSPPCarbonWriteReg_test              (abs)        000000
__size_of_hxSPPCarbonWrite_test                 (abs)        000000
__size_of_hxSetupPacket1                        (abs)        000000
__size_of_hxSetupPacket2                        (abs)        000000
__size_of_hxStartTimer                          (abs)        000000
__size_of_hxStopTimer                           (abs)        000000
__size_of_main                                  (abs)        000000
__size_of_memcpy                                (abs)        000000
__size_of_readI2C                               (abs)        000000
__size_of_resetLATCHData                        (abs)        000000
__size_of_resetSFRData                          (abs)        000000
__size_of_run_ASLBoron                          (abs)        000000
__size_of_run_I2C                               (abs)        000000
__size_of_run_SPPCarbon_test                    (abs)        000000
__size_of_setCommI2C                            (abs)        000000
__size_of_setCommSingleWire                     (abs)        000000
__size_of_setCurrLimitDAC                       (abs)        000000
__size_of_setTempCtrlDAC                        (abs)        000000
__size_of_setupCmdReadbackPkt                   (abs)        000000
__size_of_setupLatchPkt                         (abs)        000000
__size_of_streamBoronComm                       (abs)        000000
__size_of_streamI2C                             (abs)        000000
__size_of_streamSW                              (abs)        000000
__size_of_writeI2C                              (abs)        000000
__size_of_write_ASLBoron_cnfg                   (abs)        000000
__size_of_write_ASLBoron_cstm_cnfg              (abs)        000000
__size_of_write_ASLBoron_debug                  (abs)        000000
__size_of_write_ASLBoron_test                   (abs)        000000
__size_ofi2_TMR0_StopTimer                      (abs)        000000
__size_ofi2_TMR0_Write16bitTimer                (abs)        000000
__size_ofi2_hxClearArray                        (abs)        000000
__size_ofi2_hxFlushInputBuffer                  (abs)        000000
__size_ofi2_hxFlushMainDataBuffer               (abs)        000000
__size_ofi2_hxFlushOutputBuffer                 (abs)        000000
__size_ofi2_hxStopTimer                         (abs)        000000
__smallconst                                    smallconst   000000
_adjustI2CBaudRate                              text56       003EAE
_boronRxPkt                                     bssBANK4     0004D5
_boronRxPktIndex                                bssBANK2     0002FD
_boronTxPkt                                     bssBANK4     0004E5
_boronTxPktIndex                                bssBANK2     0002FE
_calcBaudRate                                   text52       003614
_calcChecksum                                   text68       003D0C
_checkAndSendLatchData                          text21       0000EC
_cycleBoronPower                                text54       003F4E
_eeprom_currAddr                                bssCOMRAM    000028
_eusart1RxCount                                 bssBANK3     0003D7
_eusart1RxHead                                  bssBANK3     0003D9
_eusart1RxTail                                  bssBANK3     0003D8
_eusart1TxBuffer                                bssBANK11    000B00
_eusart1TxBufferRemaining                       nvBANK3      0003FE
_eusart1TxHead                                  bssCOMRAM    00002B
_eusart1TxTail                                  bssCOMRAM    00002A
_filterLatchPacketResponses                     text22       002710
_findMaxI2CSpeed                                text51       002434
_hxCalcChecksum                                 text115      003D6C
_hxClearArray                                   text91       003E3E
_hxCmdFilter                                    text105      001FAA
_hxFlushInputBuffer                             text90       003ECA
_hxFlushMainDataBuffer                          text89       003F96
_hxFlushOutputBuffer                            text88       003F7E
_hxHandleTmr0                                   text95       003A28
_hxHandleTmr0$364                               cstackCOMRAM 000009
_hxHandleTxUART                                 text74       0035B8
_hxISRHandle                                    text102      002A94
_hxOddParityCalc                                text9        00366C
_hxSPPCarbonCheckBusy_test                      text8        001108
_hxSPPCarbonProgram_test                        text7        0022B6
_hxSPPCarbonReadReg_test                        text6        001958
_hxSPPCarbonRead_test                           text5        00384C
_hxSPPCarbonWriteAndVerity_test                 text3        002C38
_hxSPPCarbonWriteReg_test                       text4        0025A6
_hxSPPCarbonWrite_test                          text2        003A9E
_hxSetupPacket1                                 text112      0037B0
_hxSetupPacket2                                 text111      003354
_hxStartTimer                                   text108      004042
_hxStopTimer                                    text75       00401C
_hx_abort                                       bssCOMRAM    000036
_hx_checksum                                    bssCOMRAM    00003D
_hx_debugVar                                    bssCOMRAM    000037
_hx_inData                                      bssBANK11    000B40
_hx_inDataIndex                                 bssCOMRAM    00003E
_hx_mainData                                    bssBANK11    000BC0
_hx_mainDataIndex                               bssCOMRAM    00003F
_hx_outData                                     bssBANK11    000B80
_hx_outDataIndex                                bssCOMRAM    000040
_hx_pcCmd                                       bssCOMRAM    00003C
_hx_pktCmd                                      bssCOMRAM    00003B
_hx_pktState                                    bssCOMRAM    00003A
_hx_rxFullPktFlag                               bssCOMRAM    000039
_hx_rxOverflowFlag                              bssBANK2     0002FF
_hx_startMain                                   bssCOMRAM    000038
_hx_state                                       nvCOMRAM     000045
_hx_txPacketFlag                                dataCOMRAM   000046
_i2c1_object                                    bssBANK2     0002DB
_i2c1_state                                     bssCOMRAM    00002F
_i2c1_tr_queue                                  bssBANK3     0003F6
_i2c1_trb_count                                 bssCOMRAM    00002E
_main                                           text0        003082
_memcpy                                         text67       003894
_p_i2c1_current                                 bssCOMRAM    000024
_p_i2c1_trb_current                             bssCOMRAM    000026
_readI2C                                        text11       003800
_resetLATCHData                                 text50       0029B8
_resetSFRData                                   text49       002F34
_run_ASLBoron                                   text13       0013F6
_run_ASLBoron$1381                              cstackBANK1  0001E9
_run_ASLBoron$1382                              cstackBANK1  0001EB
_run_I2C                                        text10       0009F4
_run_SPPCarbon_test                             text1        0016B8
_setCommI2C                                     text48       0040BE
_setCommSingleWire                              text47       0040B8
_setCurrLimitDAC                                text35       003122
_setTempCtrlDAC                                 text19       003DEE
_setupCmdReadbackPkt                            text44       003C44
_setupLatchPkt                                  text42       002E88
_streamBoronComm                                text61       003CDC
_streamI2C                                      text63       001E18
_streamSW                                       text62       0040CE
_timer0ReloadVal16bit                           nvCOMRAM     000043
_tsld                                           bssBANK6     0006D5
_writeI2C                                       text58       003558
_write_ASLBoron_cnfg                            text71       00342A
_write_ASLBoron_cstm_cnfg                       text70       0040E4
_write_ASLBoron_debug                           text46       00286E
_write_ASLBoron_test                            text14       000DF0
adjustI2CBaudRate@bd                            cstackBANK0  000060
btemp                                           temp         000047
calcBaudRate@bRate                              cstackBANK0  000073
calcBaudRate@bd                                 cstackBANK0  000072
calcChecksum@data                               cstackBANK0  000060
calcChecksum@i                                  cstackBANK0  000063
calcChecksum@size                               cstackBANK0  000062
calcChecksum@temp_checksum                      cstackBANK0  000064
checkAndSendLatchData@adc_mux_pkt               cstackBANK5  000547
checkAndSendLatchData@adc_pkt                   cstackBANK4  00048E
checkAndSendLatchData@analog_pkt                cstackBANK2  00028E
checkAndSendLatchData@bias_pkt                  cstackBANK4  000400
checkAndSendLatchData@clock_select_pkt          cstackBANK10 000A00
checkAndSendLatchData@cmos_pkt                  cstackBANK4  000447
checkAndSendLatchData@heat_dac_pkt              cstackBANK3  000347
checkAndSendLatchData@latchSendCount            cstackBANK0  0000C3
checkAndSendLatchData@noError                   cstackBANK0  0000C1
checkAndSendLatchData@ocxo_divisor_pkt          cstackBANK5  00058E
checkAndSendLatchData@osc0_pkt                  cstackBANK1  0001A2
checkAndSendLatchData@osc1_pkt                  cstackBANK2  000200
checkAndSendLatchData@osc2_pkt                  cstackBANK2  000247
checkAndSendLatchData@oven_pkt                  cstackBANK3  000300
checkAndSendLatchData@readbackPkts              cstackBANK0  0000A9
checkAndSendLatchData@readbackSendCount         cstackBANK0  0000C2
checkAndSendLatchData@readback_adc_mux_pkt      cstackBANK9  000900
checkAndSendLatchData@readback_adc_pkt          cstackBANK8  00088E
checkAndSendLatchData@readback_analog_pkt       cstackBANK6  00068E
checkAndSendLatchData@readback_bias_pkt         cstackBANK8  000800
checkAndSendLatchData@readback_clock_select_pkt cstackBANK9  00098E
checkAndSendLatchData@readback_cmos_pkt         cstackBANK8  000847
checkAndSendLatchData@readback_heat_dac_pkt     cstackBANK7  000747
checkAndSendLatchData@readback_ocxo_divisor_pkt cstackBANK9  000947
checkAndSendLatchData@readback_osc0_pkt         cstackBANK5  000500
checkAndSendLatchData@readback_osc1_pkt         cstackBANK6  000600
checkAndSendLatchData@readback_osc2_pkt         cstackBANK6  000647
checkAndSendLatchData@readback_oven_pkt         cstackBANK7  000700
checkAndSendLatchData@readback_varactor_dac_pkt cstackBANK7  00078E
checkAndSendLatchData@rxBuffer                  cstackBANK0  000072
checkAndSendLatchData@rx_index                  cstackBANK0  000074
checkAndSendLatchData@stream                    cstackBANK0  000079
checkAndSendLatchData@stream_status             cstackBANK0  000078
checkAndSendLatchData@varactor_dac_pkt          cstackBANK3  00038E
end_of_initialization                           cinit        0032DA
filterLatchPacketResponses@count                cstackBANK0  000066
filterLatchPacketResponses@i                    cstackBANK0  00006A
filterLatchPacketResponses@possibleError        cstackBANK0  00006C
filterLatchPacketResponses@readbackPkts         cstackBANK0  000064
filterLatchPacketResponses@rxBuffer             cstackBANK0  000060
filterLatchPacketResponses@rx_index             cstackBANK0  000062
findMaxI2CSpeed@bRate                           cstackBANK2  000207
findMaxI2CSpeed@cmdReadbackPkt                  cstackBANK2  00020A
findMaxI2CSpeed@i                               cstackBANK2  000209
findMaxI2CSpeed@ramAddrHi                       cstackBANK2  000200
findMaxI2CSpeed@ramAddrLo                       cstackBANK2  000201
findMaxI2CSpeed@ramData                         cstackBANK2  000206
findMaxI2CSpeed@ramWrPkt                        cstackBANK2  000252
findMaxI2CSpeed@rxBuffer                        cstackBANK0  000075
findMaxI2CSpeed@rx_index                        cstackBANK2  000251
findMaxI2CSpeed@stream                          cstackBANK2  000202
hxCalcChecksum@data                             cstackCOMRAM 000001
hxCalcChecksum@i                                cstackCOMRAM 000004
hxCalcChecksum@size                             cstackCOMRAM 000003
hxCalcChecksum@temp_checksum                    cstackCOMRAM 000005
hxClearArray@arr                                cstackBANK0  000060
hxClearArray@i                                  cstackBANK0  000063
hxClearArray@size                               cstackBANK0  000062
hxCmdFilter@i                                   cstackCOMRAM 000009
hxHandleTxUART@i                                cstackBANK0  000067
hxISRHandle@currentByteCounter                  bssCOMRAM    000035
hxISRHandle@data                                cstackCOMRAM 000011
hxISRHandle@pktSize                             bssCOMRAM    000032
hxISRHandle@rxHxCmdFlag                         bssCOMRAM    000033
hxISRHandle@rxHxPktFlag                         bssCOMRAM    000031
hxISRHandle@rxPktSizeFlag                       bssCOMRAM    000034
hxOddParityCalc@buff                            cstackBANK0  000060
hxOddParityCalc@i                               cstackBANK0  000063
hxOddParityCalc@j                               cstackBANK0  000064
hxOddParityCalc@parity                          cstackBANK0  000065
hxOddParityCalc@size                            cstackBANK0  000062
hxOddParityCalc@temp                            cstackBANK0  000066
hxSPPCarbonCheckBusy_test@bitVal                cstackBANK0  000077
hxSPPCarbonCheckBusy_test@i                     cstackBANK0  000073
hxSPPCarbonCheckBusy_test@i_940                 cstackBANK0  000075
hxSPPCarbonCheckBusy_test@j                     cstackBANK0  000072
hxSPPCarbonCheckBusy_test@j_939                 cstackBANK0  000074
hxSPPCarbonCheckBusy_test@j_941                 cstackBANK0  000076
hxSPPCarbonCheckBusy_test@numRX                 cstackBANK0  000067
hxSPPCarbonCheckBusy_test@numTX                 cstackBANK0  00006E
hxSPPCarbonCheckBusy_test@oddParityCalc         cstackBANK0  000071
hxSPPCarbonCheckBusy_test@portAVal              cstackBANK0  000078
hxSPPCarbonCheckBusy_test@readbackCommState     cstackBANK0  000079
hxSPPCarbonCheckBusy_test@readbackTimer         cstackBANK0  00006F
hxSPPCarbonCheckBusy_test@rxBuffer              cstackBANK0  00006A
hxSPPCarbonCheckBusy_test@tempByte              cstackBANK0  00007A
hxSPPCarbonCheckBusy_test@txBuffer              cstackBANK0  000068
hxSPPCarbonProgram_test@i                       cstackBANK0  00006E
hxSPPCarbonProgram_test@j                       cstackBANK0  00006D
hxSPPCarbonProgram_test@j_925                   cstackBANK0  00006F
hxSPPCarbonProgram_test@numTX                   cstackBANK0  00006B
hxSPPCarbonProgram_test@oddParityCalc           cstackBANK0  00006C
hxSPPCarbonProgram_test@rxBuffer                cstackBANK0  000069
hxSPPCarbonProgram_test@tempByte                cstackBANK0  000070
hxSPPCarbonProgram_test@txBuffer                cstackBANK0  000067
hxSPPCarbonReadReg_test@bitVal                  cstackBANK0  000076
hxSPPCarbonReadReg_test@i                       cstackBANK0  000072
hxSPPCarbonReadReg_test@i_906                   cstackBANK0  000074
hxSPPCarbonReadReg_test@j                       cstackBANK0  000071
hxSPPCarbonReadReg_test@j_905                   cstackBANK0  000073
hxSPPCarbonReadReg_test@j_907                   cstackBANK0  000075
hxSPPCarbonReadReg_test@numRX                   cstackBANK0  000067
hxSPPCarbonReadReg_test@numTX                   cstackBANK0  00006D
hxSPPCarbonReadReg_test@oddParityCalc           cstackBANK0  000070
hxSPPCarbonReadReg_test@portAVal                cstackBANK0  00006C
hxSPPCarbonReadReg_test@readbackCommState       cstackBANK0  000078
hxSPPCarbonReadReg_test@readbackTimer           cstackBANK0  00006E
hxSPPCarbonReadReg_test@rxBuffer                cstackBANK0  00006A
hxSPPCarbonReadReg_test@tempByte                cstackBANK0  000079
hxSPPCarbonReadReg_test@tempHxState             cstackBANK0  000077
hxSPPCarbonReadReg_test@txBuffer                cstackBANK0  000068
hxSPPCarbonRead_test@numRX                      cstackBANK0  00007A
hxSPPCarbonRead_test@numTX                      cstackBANK0  00007F
hxSPPCarbonRead_test@returnValue                cstackBANK0  000080
hxSPPCarbonRead_test@rxBuffer                   cstackBANK0  00007D
hxSPPCarbonRead_test@txBuffer                   cstackBANK0  00007B
hxSPPCarbonWriteAndVerity_test@i                cstackBANK0  000082
hxSPPCarbonWriteAndVerity_test@numTX            cstackBANK0  000081
hxSPPCarbonWriteAndVerity_test@returnValue      cstackBANK0  000080
hxSPPCarbonWriteAndVerity_test@rxBuffer         cstackBANK0  00007C
hxSPPCarbonWriteAndVerity_test@tempValue        cstackBANK0  000083
hxSPPCarbonWriteAndVerity_test@txBuffer         cstackBANK0  00007A
hxSPPCarbonWriteReg_test@i                      cstackBANK0  00006D
hxSPPCarbonWriteReg_test@j                      cstackBANK0  00006C
hxSPPCarbonWriteReg_test@j_916                  cstackBANK0  00006E
hxSPPCarbonWriteReg_test@numTX                  cstackBANK0  000069
hxSPPCarbonWriteReg_test@oddParityCalc          cstackBANK0  00006B
hxSPPCarbonWriteReg_test@tempByte               cstackBANK0  00006F
hxSPPCarbonWriteReg_test@tempHxState            cstackBANK0  00006A
hxSPPCarbonWriteReg_test@txBuffer               cstackBANK0  000067
hxSPPCarbonWrite_test@numTX                     cstackBANK0  000074
hxSPPCarbonWrite_test@returnValue               cstackBANK0  000075
hxSPPCarbonWrite_test@rxBuffer                  cstackBANK0  000072
hxSPPCarbonWrite_test@txBuffer                  cstackBANK0  000070
hxSetupPacket1@data                             cstackCOMRAM 000006
hxSetupPacket1@pc_cmd                           cstackCOMRAM 000008
hxSetupPacket2@i                                cstackCOMRAM 000008
hxSetupPacket2@pc_cmd                           cstackCOMRAM 000007
hxStartTimer@timerVal                           cstackCOMRAM 000003
i2TMR0_Write16bitTimer@timerVal                 cstackCOMRAM 000001
i2_TMR0_StopTimer                               text104      0040DA
i2_TMR0_Write16bitTimer                         text109      00407E
i2_hxClearArray                                 text114      003E66
i2_hxFlushInputBuffer                           text107      003F34
i2_hxFlushMainDataBuffer                        text106      003FDC
i2_hxFlushOutputBuffer                          text113      003FF2
i2_hxStopTimer                                  text103      004030
i2hxClearArray@arr                              cstackCOMRAM 000001
i2hxClearArray@i                                cstackCOMRAM 000004
i2hxClearArray@size                             cstackCOMRAM 000003
int$flags                                       temp         000047
intlevel0                                       text         000000
intlevel1                                       text         000000
intlevel2                                       text         000000
intlevel3                                       text         000000
memcpy@d                                        cstackBANK0  000067
memcpy@d1                                       cstackBANK0  000060
memcpy@n                                        cstackBANK0  000064
memcpy@s                                        cstackBANK0  000069
memcpy@s1                                       cstackBANK0  000062
memcpy@tmp                                      cstackBANK0  000066
readI2C@numOfRx                                 cstackBANK0  000072
readI2C@rxData                                  cstackBANK0  000070
readI2C@slaveAddr                               cstackBANK0  000073
readI2C@status                                  cstackBANK0  000077
readI2C@timeOut                                 cstackBANK0  000075
run_ASLBoron@calc_checksum                      cstackBANK1  0001F0
run_ASLBoron@checksum                           cstackBANK1  0001EF
run_ASLBoron@cnfg_arr                           cstackBANK12 000C00
run_ASLBoron@cnfg_cnt                           cstackBANK1  0001F4
run_ASLBoron@cnfg_run                           cstackBANK1  0001F2
run_ASLBoron@data_index                         cstackBANK1  0001F6
run_ASLBoron@hx_inData                          cstackBANK0  0000D3
run_ASLBoron@i                                  cstackBANK1  0001F3
run_ASLBoron@mode_run                           cstackBANK1  0001F5
run_ASLBoron@rpt_run                            cstackBANK1  0001ED
run_ASLBoron@size                               cstackBANK0  0000D5
run_ASLBoron@test_run                           cstackBANK1  0001F1
run_I2C@calc_checksum                           cstackBANK2  000207
run_I2C@checksum                                cstackBANK2  000206
run_I2C@data_index                              cstackBANK2  000211
run_I2C@debugArr                                cstackBANK2  000200
run_I2C@hx_inData                               cstackBANK0  000078
run_I2C@i                                       cstackBANK2  00020D
run_I2C@i_2001                                  cstackBANK2  000204
run_I2C@i_2002                                  cstackBANK2  000205
run_I2C@mode                                    cstackBANK2  00020F
run_I2C@numRx                                   cstackBANK2  00020C
run_I2C@numTx                                   cstackBANK2  00020E
run_I2C@rxPkt                                   cstackBANK2  000213
run_I2C@rx_index                                cstackBANK2  000210
run_I2C@size                                    cstackBANK0  00007A
run_I2C@slaveAddr                               cstackBANK2  000202
run_I2C@stream                                  cstackBANK2  000208
run_I2C@txPkt                                   cstackBANK2  00025A
run_SPPCarbon_test@hx_inData                    cstackBANK0  000084
run_SPPCarbon_test@numRxBytes                   cstackBANK0  000089
run_SPPCarbon_test@numTxBytes                   cstackBANK0  00008A
run_SPPCarbon_test@returnValue                  cstackBANK0  000088
run_SPPCarbon_test@size                         cstackBANK0  000086
setCurrLimitDAC@value7bit                       cstackBANK0  000060
setTempCtrlDAC@value12bit                       cstackBANK0  000060
setupCmdReadbackPkt@pkt                         cstackBANK0  000060
setupLatchPkt@latch_data                        cstackBANK0  000067
setupLatchPkt@latch_num                         cstackBANK0  000069
setupLatchPkt@pkt                               cstackBANK0  000065
stackhi                                         (abs)        000E87
stacklo                                         (abs)        000D00
start                                           init         0000E8
start_initialization                            cinit        003254
streamBoronComm@boron_comm_type                 cstackBANK0  000071
streamBoronComm@pktArr                          cstackBANK0  00006E
streamBoronComm@pktSize                         cstackBANK0  000070
streamI2C@i                                     cstackBANK1  0001A1
streamI2C@pktArr                                cstackBANK0  000069
streamI2C@pktSize                               cstackBANK0  00006B
streamI2C@status                                cstackBANK1  0001A0
streamI2C@trBlock                               cstackBANK1  000100
streamSW@pktArr                                 cstackBANK0  000060
streamSW@pktSize                                cstackBANK0  000062
writeI2C@size                                   cstackBANK0  000072
writeI2C@slaveAddr                              cstackBANK0  000073
writeI2C@status                                 cstackBANK0  000077
writeI2C@timeOut                                cstackBANK0  000075
writeI2C@txData                                 cstackBANK0  000070
write_ASLBoron_cnfg@run_cnfg                    cstackBANK0  000064
write_ASLBoron_cnfg@rxBuffer                    cstackBANK0  000062
write_ASLBoron_cstm_cnfg@cnfg_arr               cstackBANK0  000060
write_ASLBoron_cstm_cnfg@cnfg_arr_size          cstackBANK0  000062
write_ASLBoron_cstm_cnfg@rxBuffer               cstackBANK0  000064
write_ASLBoron_debug@run_cnfg                   cstackBANK0  0000C8
write_ASLBoron_debug@run_test                   cstackBANK0  0000CB
write_ASLBoron_debug@rxBuffer                   cstackBANK0  0000C9
write_ASLBoron_test@i                           cstackBANK0  0000CF
write_ASLBoron_test@j                           cstackBANK0  0000D1
write_ASLBoron_test@run_rpt                     cstackBANK0  0000C7
write_ASLBoron_test@run_test                    cstackBANK0  0000CE
write_ASLBoron_test@rxBuffer                    cstackBANK0  0000C9
wtemp6                                          temp         000048


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 57 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  temp            1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:   14
 This function calls:
		_HX_Initialize
		_SYSTEM_Initialize
		_hxHandleTxUART
		_run_ASLBoron
		_run_I2C
		_run_SPPCarbon_test
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _run_SPPCarbon_test *****************
 Defined at:
		line 3 in file "HX_SPP_CARBON.c"
 Parameters:    Size  Location     Type
  hx_inData       2   36[BANK0 ] PTR unsigned char 
		 -> hx_inData(64), 
  size            1   38[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  numTxBytes      1   42[BANK0 ] unsigned char 
  numRxBytes      1   41[BANK0 ] unsigned char 
  returnValue     1   40[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_hxSPPCarbonCheckBusy_test
		_hxSPPCarbonProgram_test
		_hxSPPCarbonRead_test
		_hxSPPCarbonWriteAndVerity_test
		_hxSPPCarbonWriteReg_test
		_hxSPPCarbonWrite_test
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _hxSPPCarbonWrite_test *****************
 Defined at:
		line 146 in file "HX_SPP_CARBON.c"
 Parameters:    Size  Location     Type
  numTX           1    wreg     unsigned char 
  txBuffer        2   16[BANK0 ] PTR unsigned char 
		 -> hx_inData(64), 
  rxBuffer        2   18[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  numTX           1   20[BANK0 ] unsigned char 
  returnValue     1   21[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_hxSPPCarbonWriteReg_test
 This function is called by:
		_run_SPPCarbon_test
 This function uses a non-reentrant model


 *************** function _hxSPPCarbonWriteAndVerity_test *****************
 Defined at:
		line 112 in file "HX_SPP_CARBON.c"
 Parameters:    Size  Location     Type
  numTX           1    wreg     unsigned char 
  txBuffer        2   26[BANK0 ] PTR unsigned char 
		 -> hx_inData(64), 
  rxBuffer        2   28[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  numTX           1   33[BANK0 ] unsigned char 
  i               1   34[BANK0 ] unsigned char 
  tempValue       1   35[BANK0 ] unsigned char 
  returnValue     1   32[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_hxSPPCarbonReadReg_test
		_hxSPPCarbonWriteReg_test
 This function is called by:
		_run_SPPCarbon_test
 This function uses a non-reentrant model


 *************** function _hxSPPCarbonWriteReg_test *****************
 Defined at:
		line 377 in file "HX_SPP_CARBON.c"
 Parameters:    Size  Location     Type
  numTX           1    wreg     unsigned char 
  txBuffer        2    7[BANK0 ] PTR unsigned char 
		 -> hx_inData(64), 
 Auto vars:     Size  Location     Type
  numTX           1    9[BANK0 ] unsigned char 
  j               1   14[BANK0 ] unsigned char 
  i               1   13[BANK0 ] unsigned char 
  j               1   12[BANK0 ] unsigned char 
  tempByte        1   15[BANK0 ] unsigned char 
  oddParityCal    1   11[BANK0 ] unsigned char 
  tempHxState     1   10[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_hxOddParityCalc
 This function is called by:
		_run_SPPCarbon_test
		_hxSPPCarbonWriteAndVerity_test
		_hxSPPCarbonWrite_test
 This function uses a non-reentrant model


 *************** function _hxSPPCarbonRead_test *****************
 Defined at:
		line 161 in file "HX_SPP_CARBON.c"
 Parameters:    Size  Location     Type
  numTX           1    wreg     unsigned char 
  numRX           1   26[BANK0 ] unsigned char 
  txBuffer        2   27[BANK0 ] PTR unsigned char 
		 -> hx_inData(64), 
  rxBuffer        2   29[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  numTX           1   31[BANK0 ] unsigned char 
  returnValue     1   32[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_hxSPPCarbonReadReg_test
 This function is called by:
		_run_SPPCarbon_test
 This function uses a non-reentrant model


 *************** function _hxSPPCarbonReadReg_test *****************
 Defined at:
		line 175 in file "HX_SPP_CARBON.c"
 Parameters:    Size  Location     Type
  numTX           1    wreg     unsigned char 
  numRX           1    7[BANK0 ] unsigned char 
  txBuffer        2    8[BANK0 ] PTR unsigned char 
		 -> hx_inData(64), 
  rxBuffer        2   10[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  numTX           1   13[BANK0 ] unsigned char 
  j               1   21[BANK0 ] unsigned char 
  j               1   19[BANK0 ] unsigned char 
  i               1   20[BANK0 ] unsigned char 
  i               1   18[BANK0 ] unsigned char 
  j               1   17[BANK0 ] unsigned char 
  readbackTime    2   14[BANK0 ] unsigned int 
  tempByte        1   25[BANK0 ] unsigned char 
  readbackComm    1   24[BANK0 ] unsigned char 
  tempHxState     1   23[BANK0 ] unsigned char 
  bitVal          1   22[BANK0 ] unsigned char 
  oddParityCal    1   16[BANK0 ] unsigned char 
  portAVal        1   12[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       19 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_hxOddParityCalc
 This function is called by:
		_hxSPPCarbonWriteAndVerity_test
		_hxSPPCarbonRead_test
 This function uses a non-reentrant model


 *************** function _hxSPPCarbonProgram_test *****************
 Defined at:
		line 483 in file "HX_SPP_CARBON.c"
 Parameters:    Size  Location     Type
  numTX           1    wreg     unsigned char 
  txBuffer        2    7[BANK0 ] PTR unsigned char 
		 -> hx_inData(64), 
  rxBuffer        2    9[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  numTX           1   11[BANK0 ] unsigned char 
  j               1   15[BANK0 ] unsigned char 
  i               1   14[BANK0 ] unsigned char 
  j               1   13[BANK0 ] unsigned char 
  tempByte        1   16[BANK0 ] unsigned char 
  oddParityCal    1   12[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_hxOddParityCalc
 This function is called by:
		_run_SPPCarbon_test
 This function uses a non-reentrant model


 *************** function _hxSPPCarbonCheckBusy_test *****************
 Defined at:
		line 593 in file "HX_SPP_CARBON.c"
 Parameters:    Size  Location     Type
  numTX           1    wreg     unsigned char 
  numRX           1    7[BANK0 ] unsigned char 
  txBuffer        2    8[BANK0 ] PTR unsigned char 
		 -> hx_inData(64), 
  rxBuffer        2   10[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  numTX           1   14[BANK0 ] unsigned char 
  j               1   22[BANK0 ] unsigned char 
  j               1   20[BANK0 ] unsigned char 
  i               1   21[BANK0 ] unsigned char 
  i               1   19[BANK0 ] unsigned char 
  j               1   18[BANK0 ] unsigned char 
  readbackTime    2   15[BANK0 ] unsigned int 
  tempByte        1   26[BANK0 ] unsigned char 
  readbackComm    1   25[BANK0 ] unsigned char 
  portAVal        1   24[BANK0 ] unsigned char 
  bitVal          1   23[BANK0 ] unsigned char 
  oddParityCal    1   17[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       20 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_hxOddParityCalc
 This function is called by:
		_run_SPPCarbon_test
 This function uses a non-reentrant model


 *************** function _hxOddParityCalc *****************
 Defined at:
		line 795 in file "HX_SPP_CARBON.c"
 Parameters:    Size  Location     Type
  buff            2    0[BANK0 ] PTR unsigned char 
		 -> hx_inData(64), 
  size            1    2[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  j               1    4[BANK0 ] unsigned char 
  i               1    3[BANK0 ] unsigned char 
  temp            1    6[BANK0 ] unsigned char 
  parity          1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_hxSPPCarbonReadReg_test
		_hxSPPCarbonWriteReg_test
		_hxSPPCarbonProgram_test
		_hxSPPCarbonCheckBusy_test
 This function uses a non-reentrant model


 *************** function _run_I2C *****************
 Defined at:
		line 14 in file "HX_I2C.c"
 Parameters:    Size  Location     Type
  hx_inData       2   24[BANK0 ] PTR unsigned char 
		 -> hx_inData(64), 
  size            1   26[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  i               1    5[BANK2 ] unsigned char 
  i               1    4[BANK2 ] unsigned char 
  txPkt          71   90[BANK2 ] struct TxRxPacket
  rxPkt          71   19[BANK2 ] struct TxRxPacket
  stream          4    8[BANK2 ] PTR struct TxRxPacket[2]
		 -> run_I2C@rxPkt(71), run_I2C@txPkt(71), checkAndSendLatchData@readback_clock_select_pkt(71), checkAndSendLatchData@clock_select_pkt(71), 
		 -> checkAndSendLatchData@readback_ocxo_divisor_pkt(71), checkAndSendLatchData@ocxo_divisor_pkt(71), checkAndSendLatchData@readback_adc_mux_pkt(71), checkAndSendLatchData@adc_mux_pkt(71), 
		 -> checkAndSendLatchData@readback_adc_pkt(71), checkAndSendLatchData@adc_pkt(71), checkAndSendLatchData@readback_cmos_pkt(71), checkAndSendLatchData@cmos_pkt(71), 
		 -> checkAndSendLatchData@readback_bias_pkt(71), checkAndSendLatchData@bias_pkt(71), checkAndSendLatchData@readback_varactor_dac_pkt(71), checkAndSendLatchData@varactor_dac_pkt(71), 
		 -> checkAndSendLatchData@readback_heat_dac_pkt(71), checkAndSendLatchData@heat_dac_pkt(71), checkAndSendLatchData@readback_oven_pkt(71), checkAndSendLatchData@oven_pkt(71), 
		 -> checkAndSendLatchData@readback_analog_pkt(71), checkAndSendLatchData@analog_pkt(71), checkAndSendLatchData@readback_osc2_pkt(71), checkAndSendLatchData@osc2_pkt(71), 
		 -> checkAndSendLatchData@readback_osc1_pkt(71), checkAndSendLatchData@osc1_pkt(71), checkAndSendLatchData@readback_osc0_pkt(71), checkAndSendLatchData@osc0_pkt(71), 
		 -> findMaxI2CSpeed@cmdReadbackPkt(71), findMaxI2CSpeed@ramWrPkt(71), ASLB_debug1@ramReadbackPkt(71), ASLB_debug1@ramRdPkt(71), 
		 -> ASLB_debug1@cmdReadbackPkt(71), ASLB_debug1@ramWrPkt(71), ASLB_AnalogMuxReadingSetup@ovenWrPkt(71), ASLB_AnalogMuxReadingSetup@cmdReadbackPkt(71), 
		 -> ASLB_HeaterFunctionality@ovenWrPkt(71), ASLB_HeaterFunctionality@cmdReadbackPkt(71), 
  data_index      2   17[BANK2 ] unsigned int 
  slaveAddr       2    2[BANK2 ] unsigned int 
  debugArr        2    0[BANK2 ] PTR unsigned char 
  rx_index        1   16[BANK2 ] unsigned char 
  mode            1   15[BANK2 ] unsigned char 
  numTx           1   14[BANK2 ] unsigned char 
  i               1   13[BANK2 ] unsigned char 
  numRx           1   12[BANK2 ] unsigned char 
  calc_checksu    1    7[BANK2 ] unsigned char 
  checksum        1    6[BANK2 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0     161       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       4       0     161       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:      165 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_calcChecksum
		_readI2C
		_streamI2C
		_writeI2C
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _readI2C *****************
 Defined at:
		line 44 in file "Utils.c"
 Parameters:    Size  Location     Type
  rxData          2   16[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
  numOfRx         1   18[BANK0 ] unsigned char 
  slaveAddr       2   19[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  timeOut         2   21[BANK0 ] unsigned int 
  status          1   23[BANK0 ] enum E11632
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_I2C1_MasterRead
 This function is called by:
		_run_I2C
 This function uses a non-reentrant model


 *************** function _I2C1_MasterRead *****************
 Defined at:
		line 621 in file "mcc_generated_files/i2c1.c"
 Parameters:    Size  Location     Type
  pdata           2    9[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
  length          1   11[BANK0 ] unsigned char 
  address         2   12[BANK0 ] unsigned int 
  pflag           2   14[BANK0 ] PTR enum E11632
		 -> readI2C@status(1), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_I2C1_MasterReadTRBBuild
		_I2C1_MasterTRBInsert
 This function is called by:
		_readI2C
 This function uses a non-reentrant model


 *************** function _run_ASLBoron *****************
 Defined at:
		line 17 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  hx_inData       2  115[BANK0 ] PTR unsigned char 
		 -> hx_inData(64), 
  size            1  117[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  i               1  243[BANK1 ] unsigned char 
  cnfg_arr      256    0[BANK12] unsigned char [256]
  data_index      2  246[BANK1 ] unsigned int 
  rpt_run         2  237[BANK1 ] unsigned char [2]
  mode_run        1  245[BANK1 ] unsigned char 
  cnfg_cnt        1  244[BANK1 ] unsigned char 
  cnfg_run        1  242[BANK1 ] unsigned char 
  test_run        1  241[BANK1 ] unsigned char 
  calc_checksu    1  240[BANK1 ] unsigned char 
  checksum        1  239[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       0     256       0       0
      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       6      15       0       0       0       0       0       0       0       0       0       0     256       0       0
Total ram usage:      277 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   13
 This function calls:
		_calcChecksum
		_write_ASLBoron_cnfg
		_write_ASLBoron_cstm_cnfg
		_write_ASLBoron_debug
		_write_ASLBoron_test
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _write_ASLBoron_test *****************
 Defined at:
		line 105 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  run_test        1    wreg     unsigned char 
  run_rpt         2  103[BANK0 ] PTR unsigned char 
		 -> run_ASLBoron@rpt_run(2), 
  rxBuffer        2  105[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  run_test        1  110[BANK0 ] unsigned char 
  j               2  113[BANK0 ] int 
  i               2  111[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   12
 This function calls:
		_ASLB_ADC
		_ASLB_ADCReferenceVoltage
		_ASLB_AnalogMuxReadingSetup
		_ASLB_CFCVVaricap
		_ASLB_CTHERM
		_ASLB_ColpittsOscillator
		_ASLB_CommonGate
		_ASLB_ContinuityESD
		_ASLB_CurrentLimitDACVoltage
		_ASLB_DACReferenceVoltage
		_ASLB_DigitalRegulatorVoltage
		_ASLB_ExternalReferenceVoltage
		_ASLB_HeaterFBSignals
		_ASLB_HeaterFunctionality
		_ASLB_InternalTempSensor
		_ASLB_MuxOpenCircuit
		_ASLB_MuxReadingVDD
		_ASLB_OscillatorRegulatorVoltage
		_ASLB_PierceOscillator
		_ASLB_RDResistor
		_ASLB_SheetResistance
		_ASLB_TempSetDACVoltage
		_ASLB_VaricapBiasSteering
		_ASLB_VaricapDACVoltage
		_ASLB_ZTCReferenceCurrent
 This function is called by:
		_run_ASLBoron
 This function uses a non-reentrant model


 *************** function _ASLB_ZTCReferenceCurrent *****************
 Defined at:
		line 719 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    2[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  cmdReadbackP   71    5[BANK0 ] struct TxRxPacket
  rx_index        1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0      72       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       74 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_setupCmdReadbackPkt
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _ASLB_VaricapDACVoltage *****************
 Defined at:
		line 611 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    2[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  cmdReadbackP   71    5[BANK0 ] struct TxRxPacket
  rx_index        1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0      72       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       74 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_setupCmdReadbackPkt
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _ASLB_VaricapBiasSteering *****************
 Defined at:
		line 788 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    2[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  cmdReadbackP   71    5[BANK0 ] struct TxRxPacket
  rx_index        1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0      72       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       74 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_setupCmdReadbackPkt
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _ASLB_TempSetDACVoltage *****************
 Defined at:
		line 631 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    2[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  i               2   76[BANK0 ] int 
  cmdReadbackP   71    5[BANK0 ] struct TxRxPacket
  rx_index        1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0      74       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      76       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       76 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_setTempCtrlDAC
		_setupCmdReadbackPkt
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _setTempCtrlDAC *****************
 Defined at:
		line 1145 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  value12bit      2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ASLB_TempSetDACVoltage
 This function uses a non-reentrant model


 *************** function _ASLB_SheetResistance *****************
 Defined at:
		line 347 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2  100[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  rx_index        1  102[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_checkAndSendLatchData
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _checkAndSendLatchData *****************
 Defined at:
		line 1243 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2   18[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
  rx_index        2   20[BANK0 ] PTR unsigned char 
		 -> ASLB_SheetResistance@rx_index(1), 
 Auto vars:     Size  Location     Type
  clock_select   71    0[BANK10] struct TxRxPacket
  readback_clo   71  142[BANK9 ] struct TxRxPacket
  ocxo_divisor   71  142[BANK5 ] struct TxRxPacket
  readback_ocx   71   71[BANK9 ] struct TxRxPacket
  adc_mux_pkt    71   71[BANK5 ] struct TxRxPacket
  readback_adc   71    0[BANK9 ] struct TxRxPacket
  adc_pkt        71  142[BANK4 ] struct TxRxPacket
  readback_adc   71  142[BANK8 ] struct TxRxPacket
  cmos_pkt       71   71[BANK4 ] struct TxRxPacket
  readback_cmo   71   71[BANK8 ] struct TxRxPacket
  bias_pkt       71    0[BANK4 ] struct TxRxPacket
  readback_bia   71    0[BANK8 ] struct TxRxPacket
  varactor_dac   71  142[BANK3 ] struct TxRxPacket
  readback_var   71  142[BANK7 ] struct TxRxPacket
  heat_dac_pkt   71   71[BANK3 ] struct TxRxPacket
  readback_hea   71   71[BANK7 ] struct TxRxPacket
  oven_pkt       71    0[BANK3 ] struct TxRxPacket
  readback_ove   71    0[BANK7 ] struct TxRxPacket
  analog_pkt     71  142[BANK2 ] struct TxRxPacket
  readback_ana   71  142[BANK6 ] struct TxRxPacket
  osc2_pkt       71   71[BANK2 ] struct TxRxPacket
  readback_osc   71   71[BANK6 ] struct TxRxPacket
  osc1_pkt       71    0[BANK2 ] struct TxRxPacket
  readback_osc   71    0[BANK6 ] struct TxRxPacket
  osc0_pkt       71  162[BANK1 ] struct TxRxPacket
  readback_osc   71    0[BANK5 ] struct TxRxPacket
  stream         48   25[BANK0 ] PTR struct TxRxPacket[24
		 -> run_I2C@rxPkt(71), run_I2C@txPkt(71), checkAndSendLatchData@readback_clock_select_pkt(71), checkAndSendLatchData@clock_select_pkt(71), 
		 -> checkAndSendLatchData@readback_ocxo_divisor_pkt(71), checkAndSendLatchData@ocxo_divisor_pkt(71), checkAndSendLatchData@readback_adc_mux_pkt(71), checkAndSendLatchData@adc_mux_pkt(71), 
		 -> checkAndSendLatchData@readback_adc_pkt(71), checkAndSendLatchData@adc_pkt(71), checkAndSendLatchData@readback_cmos_pkt(71), checkAndSendLatchData@cmos_pkt(71), 
		 -> checkAndSendLatchData@readback_bias_pkt(71), checkAndSendLatchData@bias_pkt(71), checkAndSendLatchData@readback_varactor_dac_pkt(71), checkAndSendLatchData@varactor_dac_pkt(71), 
		 -> checkAndSendLatchData@readback_heat_dac_pkt(71), checkAndSendLatchData@heat_dac_pkt(71), checkAndSendLatchData@readback_oven_pkt(71), checkAndSendLatchData@oven_pkt(71), 
		 -> checkAndSendLatchData@readback_analog_pkt(71), checkAndSendLatchData@analog_pkt(71), checkAndSendLatchData@readback_osc2_pkt(71), checkAndSendLatchData@osc2_pkt(71), 
		 -> checkAndSendLatchData@readback_osc1_pkt(71), checkAndSendLatchData@osc1_pkt(71), checkAndSendLatchData@readback_osc0_pkt(71), checkAndSendLatchData@osc0_pkt(71), 
		 -> findMaxI2CSpeed@cmdReadbackPkt(71), findMaxI2CSpeed@ramWrPkt(71), ASLB_debug1@ramReadbackPkt(71), ASLB_debug1@ramRdPkt(71), 
		 -> ASLB_debug1@cmdReadbackPkt(71), ASLB_debug1@ramWrPkt(71), ASLB_AnalogMuxReadingSetup@ovenWrPkt(71), ASLB_AnalogMuxReadingSetup@cmdReadbackPkt(71), 
		 -> ASLB_HeaterFunctionality@ovenWrPkt(71), ASLB_HeaterFunctionality@cmdReadbackPkt(71), 
  readbackPkts   24   73[BANK0 ] PTR struct TxRxPacket[12
		 -> checkAndSendLatchData@readback_clock_select_pkt(71), checkAndSendLatchData@readback_ocxo_divisor_pkt(71), checkAndSendLatchData@readback_adc_mux_pkt(71), checkAndSendLatchData@readback_adc_pkt(71), 
		 -> checkAndSendLatchData@readback_cmos_pkt(71), checkAndSendLatchData@readback_bias_pkt(71), checkAndSendLatchData@readback_varactor_dac_pkt(71), checkAndSendLatchData@readback_heat_dac_pkt(71), 
		 -> checkAndSendLatchData@readback_oven_pkt(71), checkAndSendLatchData@readback_analog_pkt(71), checkAndSendLatchData@readback_osc2_pkt(71), checkAndSendLatchData@readback_osc1_pkt(71), 
		 -> checkAndSendLatchData@readback_osc0_pkt(71), 
  latchSendCou    1   99[BANK0 ] unsigned char 
  readbackSend    1   98[BANK0 ] unsigned char 
  noError         1   97[BANK0 ] unsigned char 
  stream_statu    1   24[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0      76      71     213     213     213     213     213     213     213     213      71       0       0       0       0
      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      82      71     213     213     213     213     213     213     213     213      71       0       0       0       0
Total ram usage:     1928 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_filterLatchPacketResponses
		_setupCmdReadbackPkt
		_setupLatchPkt
		_streamBoronComm
 This function is called by:
		_ASLB_SheetResistance
 This function uses a non-reentrant model


 *************** function _filterLatchPacketResponses *****************
 Defined at:
		line 1453 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    0[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
  rx_index        2    2[BANK0 ] PTR unsigned char 
		 -> ASLB_SheetResistance@rx_index(1), 
  readbackPkts    2    4[BANK0 ] PTR PTR struct TxRxPacke
		 -> checkAndSendLatchData@readbackPkts(24), 
  count           1    6[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  i               2   10[BANK0 ] int 
  possibleErro    1   12[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_checkAndSendLatchData
 This function uses a non-reentrant model


 *************** function _ASLB_RDResistor *****************
 Defined at:
		line 823 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    0[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  rx_index        1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _ASLB_PierceOscillator *****************
 Defined at:
		line 812 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    0[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  rx_index        1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _ASLB_OscillatorRegulatorVoltage *****************
 Defined at:
		line 756 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    2[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  cmdReadbackP   71    5[BANK0 ] struct TxRxPacket
  rx_index        1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0      72       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       74 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_setupCmdReadbackPkt
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _ASLB_MuxReadingVDD *****************
 Defined at:
		line 575 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    2[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  cmdReadbackP   71    5[BANK0 ] struct TxRxPacket
  rx_index        1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0      72       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       74 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_setupCmdReadbackPkt
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _ASLB_MuxOpenCircuit *****************
 Defined at:
		line 738 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    2[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  cmdReadbackP   71    5[BANK0 ] struct TxRxPacket
  rx_index        1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0      72       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       74 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_setupCmdReadbackPkt
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _ASLB_InternalTempSensor *****************
 Defined at:
		line 555 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    2[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  cmdReadbackP   71    5[BANK0 ] struct TxRxPacket
  rx_index        1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0      72       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       74 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_setupCmdReadbackPkt
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _ASLB_HeaterFunctionality *****************
 Defined at:
		line 396 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2   18[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  ovenWrPkt      71  148[BANK2 ] struct TxRxPacket
  cmdReadbackP   71   77[BANK2 ] struct TxRxPacket
  heatDacWrPkt   71    6[BANK2 ] struct TxRxPacket
  trBlock        10    0        struct .[2]
  stream          4    2[BANK2 ] PTR struct TxRxPacket[2]
		 -> run_I2C@rxPkt(71), run_I2C@txPkt(71), checkAndSendLatchData@readback_clock_select_pkt(71), checkAndSendLatchData@clock_select_pkt(71), 
		 -> checkAndSendLatchData@readback_ocxo_divisor_pkt(71), checkAndSendLatchData@ocxo_divisor_pkt(71), checkAndSendLatchData@readback_adc_mux_pkt(71), checkAndSendLatchData@adc_mux_pkt(71), 
		 -> checkAndSendLatchData@readback_adc_pkt(71), checkAndSendLatchData@adc_pkt(71), checkAndSendLatchData@readback_cmos_pkt(71), checkAndSendLatchData@cmos_pkt(71), 
		 -> checkAndSendLatchData@readback_bias_pkt(71), checkAndSendLatchData@bias_pkt(71), checkAndSendLatchData@readback_varactor_dac_pkt(71), checkAndSendLatchData@varactor_dac_pkt(71), 
		 -> checkAndSendLatchData@readback_heat_dac_pkt(71), checkAndSendLatchData@heat_dac_pkt(71), checkAndSendLatchData@readback_oven_pkt(71), checkAndSendLatchData@oven_pkt(71), 
		 -> checkAndSendLatchData@readback_analog_pkt(71), checkAndSendLatchData@analog_pkt(71), checkAndSendLatchData@readback_osc2_pkt(71), checkAndSendLatchData@osc2_pkt(71), 
		 -> checkAndSendLatchData@readback_osc1_pkt(71), checkAndSendLatchData@osc1_pkt(71), checkAndSendLatchData@readback_osc0_pkt(71), checkAndSendLatchData@osc0_pkt(71), 
		 -> findMaxI2CSpeed@cmdReadbackPkt(71), findMaxI2CSpeed@ramWrPkt(71), ASLB_debug1@ramReadbackPkt(71), ASLB_debug1@ramRdPkt(71), 
		 -> ASLB_debug1@cmdReadbackPkt(71), ASLB_debug1@ramWrPkt(71), ASLB_AnalogMuxReadingSetup@ovenWrPkt(71), ASLB_AnalogMuxReadingSetup@cmdReadbackPkt(71), 
		 -> ASLB_HeaterFunctionality@ovenWrPkt(71), ASLB_HeaterFunctionality@cmdReadbackPkt(71), 
  stream_statu    1    1[BANK2 ] unsigned char 
  rx_index        1    0[BANK2 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0     219       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       2       0     219       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:      221 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_setupCmdReadbackPkt
		_setupLatchPkt
		_streamBoronComm
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _ASLB_HeaterFBSignals *****************
 Defined at:
		line 533 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    2[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  cmdReadbackP   71    5[BANK0 ] struct TxRxPacket
  rx_index        1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0      72       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       74 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_setupCmdReadbackPkt
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _ASLB_ExternalReferenceVoltage *****************
 Defined at:
		line 772 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    2[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  cmdReadbackP   71    5[BANK0 ] struct TxRxPacket
  rx_index        1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0      72       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       74 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_setupCmdReadbackPkt
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _ASLB_DigitalRegulatorVoltage *****************
 Defined at:
		line 701 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    2[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  cmdReadbackP   71    5[BANK0 ] struct TxRxPacket
  rx_index        1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0      72       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       74 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_setupCmdReadbackPkt
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _ASLB_DACReferenceVoltage *****************
 Defined at:
		line 593 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    2[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  cmdReadbackP   71    5[BANK0 ] struct TxRxPacket
  rx_index        1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0      72       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       74 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_setupCmdReadbackPkt
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _ASLB_CurrentLimitDACVoltage *****************
 Defined at:
		line 668 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    8[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  i               2   82[BANK0 ] int 
  cmdReadbackP   71   11[BANK0 ] struct TxRxPacket
  rx_index        1   10[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0      74       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      76       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       76 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_setCurrLimitDAC
		_setupCmdReadbackPkt
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _setCurrLimitDAC *****************
 Defined at:
		line 1168 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  value7bit       2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ASLB_CurrentLimitDACVoltage
 This function uses a non-reentrant model


 *************** function _ASLB_ContinuityESD *****************
 Defined at:
		line 342 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    0[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _ASLB_CommonGate *****************
 Defined at:
		line 845 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    0[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  rx_index        1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _ASLB_ColpittsOscillator *****************
 Defined at:
		line 801 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    0[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  rx_index        1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _ASLB_CTHERM *****************
 Defined at:
		line 491 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    2[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  cmdReadbackP   71    5[BANK0 ] struct TxRxPacket
  rx_index        1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0      72       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       74 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_setupCmdReadbackPkt
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _ASLB_CFCVVaricap *****************
 Defined at:
		line 834 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    0[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  rx_index        1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _ASLB_AnalogMuxReadingSetup *****************
 Defined at:
		line 459 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2   18[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  ovenWrPkt      71   77[BANK2 ] struct TxRxPacket
  cmdReadbackP   71    6[BANK2 ] struct TxRxPacket
  stream          4    2[BANK2 ] PTR struct TxRxPacket[2]
		 -> run_I2C@rxPkt(71), run_I2C@txPkt(71), checkAndSendLatchData@readback_clock_select_pkt(71), checkAndSendLatchData@clock_select_pkt(71), 
		 -> checkAndSendLatchData@readback_ocxo_divisor_pkt(71), checkAndSendLatchData@ocxo_divisor_pkt(71), checkAndSendLatchData@readback_adc_mux_pkt(71), checkAndSendLatchData@adc_mux_pkt(71), 
		 -> checkAndSendLatchData@readback_adc_pkt(71), checkAndSendLatchData@adc_pkt(71), checkAndSendLatchData@readback_cmos_pkt(71), checkAndSendLatchData@cmos_pkt(71), 
		 -> checkAndSendLatchData@readback_bias_pkt(71), checkAndSendLatchData@bias_pkt(71), checkAndSendLatchData@readback_varactor_dac_pkt(71), checkAndSendLatchData@varactor_dac_pkt(71), 
		 -> checkAndSendLatchData@readback_heat_dac_pkt(71), checkAndSendLatchData@heat_dac_pkt(71), checkAndSendLatchData@readback_oven_pkt(71), checkAndSendLatchData@oven_pkt(71), 
		 -> checkAndSendLatchData@readback_analog_pkt(71), checkAndSendLatchData@analog_pkt(71), checkAndSendLatchData@readback_osc2_pkt(71), checkAndSendLatchData@osc2_pkt(71), 
		 -> checkAndSendLatchData@readback_osc1_pkt(71), checkAndSendLatchData@osc1_pkt(71), checkAndSendLatchData@readback_osc0_pkt(71), checkAndSendLatchData@osc0_pkt(71), 
		 -> findMaxI2CSpeed@cmdReadbackPkt(71), findMaxI2CSpeed@ramWrPkt(71), ASLB_debug1@ramReadbackPkt(71), ASLB_debug1@ramRdPkt(71), 
		 -> ASLB_debug1@cmdReadbackPkt(71), ASLB_debug1@ramWrPkt(71), ASLB_AnalogMuxReadingSetup@ovenWrPkt(71), ASLB_AnalogMuxReadingSetup@cmdReadbackPkt(71), 
		 -> ASLB_HeaterFunctionality@ovenWrPkt(71), ASLB_HeaterFunctionality@cmdReadbackPkt(71), 
  stream_statu    1    1[BANK2 ] unsigned char 
  rx_index        1    0[BANK2 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0     148       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       2       0     148       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:      150 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_setupCmdReadbackPkt
		_setupLatchPkt
		_streamBoronComm
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _setupLatchPkt *****************
 Defined at:
		line 1187 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  pkt             2    5[BANK0 ] PTR struct TxRxPacket
		 -> checkAndSendLatchData@clock_select_pkt(71), checkAndSendLatchData@ocxo_divisor_pkt(71), checkAndSendLatchData@adc_mux_pkt(71), checkAndSendLatchData@adc_pkt(71), 
		 -> checkAndSendLatchData@cmos_pkt(71), checkAndSendLatchData@bias_pkt(71), checkAndSendLatchData@varactor_dac_pkt(71), checkAndSendLatchData@heat_dac_pkt(71), 
		 -> checkAndSendLatchData@oven_pkt(71), checkAndSendLatchData@analog_pkt(71), checkAndSendLatchData@osc2_pkt(71), checkAndSendLatchData@osc1_pkt(71), 
		 -> checkAndSendLatchData@osc0_pkt(71), ASLB_AnalogMuxReadingSetup@ovenWrPkt(71), ASLB_HeaterFunctionality@heatDacWrPkt(71), ASLB_HeaterFunctionality@ovenWrPkt(71), 
  latch_data      2    7[BANK0 ] unsigned int 
  latch_num       1    9[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_calcChecksum
 This function is called by:
		_ASLB_HeaterFunctionality
		_ASLB_AnalogMuxReadingSetup
		_checkAndSendLatchData
 This function uses a non-reentrant model


 *************** function _ASLB_ADCReferenceVoltage *****************
 Defined at:
		line 512 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    2[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  cmdReadbackP   71    5[BANK0 ] struct TxRxPacket
  rx_index        1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0      72       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       74 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_setupCmdReadbackPkt
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _setupCmdReadbackPkt *****************
 Defined at:
		line 1201 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  pkt             2    0[BANK0 ] PTR struct TxRxPacket
		 -> checkAndSendLatchData@readback_clock_select_pkt(71), checkAndSendLatchData@readback_ocxo_divisor_pkt(71), checkAndSendLatchData@readback_adc_mux_pkt(71), checkAndSendLatchData@readback_adc_pkt(71), 
		 -> checkAndSendLatchData@readback_cmos_pkt(71), checkAndSendLatchData@readback_bias_pkt(71), checkAndSendLatchData@readback_varactor_dac_pkt(71), checkAndSendLatchData@readback_heat_dac_pkt(71), 
		 -> checkAndSendLatchData@readback_oven_pkt(71), checkAndSendLatchData@readback_analog_pkt(71), checkAndSendLatchData@readback_osc2_pkt(71), checkAndSendLatchData@readback_osc1_pkt(71), 
		 -> checkAndSendLatchData@readback_osc0_pkt(71), ASLB_VaricapBiasSteering@cmdReadbackPkt(71), ASLB_ExternalReferenceVoltage@cmdReadbackPkt(71), ASLB_OscillatorRegulatorVoltage@cmdReadbackPkt(71), 
		 -> ASLB_MuxOpenCircuit@cmdReadbackPkt(71), ASLB_ZTCReferenceCurrent@cmdReadbackPkt(71), ASLB_DigitalRegulatorVoltage@cmdReadbackPkt(71), ASLB_CurrentLimitDACVoltage@cmdReadbackPkt(71), 
		 -> ASLB_TempSetDACVoltage@cmdReadbackPkt(71), ASLB_VaricapDACVoltage@cmdReadbackPkt(71), ASLB_DACReferenceVoltage@cmdReadbackPkt(71), ASLB_MuxReadingVDD@cmdReadbackPkt(71), 
		 -> ASLB_InternalTempSensor@cmdReadbackPkt(71), ASLB_HeaterFBSignals@cmdReadbackPkt(71), ASLB_ADCReferenceVoltage@cmdReadbackPkt(71), ASLB_CTHERM@cmdReadbackPkt(71), 
		 -> ASLB_AnalogMuxReadingSetup@cmdReadbackPkt(71), ASLB_HeaterFunctionality@cmdReadbackPkt(71), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ASLB_HeaterFunctionality
		_ASLB_AnalogMuxReadingSetup
		_ASLB_CTHERM
		_ASLB_ADCReferenceVoltage
		_ASLB_HeaterFBSignals
		_ASLB_InternalTempSensor
		_ASLB_MuxReadingVDD
		_ASLB_DACReferenceVoltage
		_ASLB_VaricapDACVoltage
		_ASLB_TempSetDACVoltage
		_ASLB_CurrentLimitDACVoltage
		_ASLB_DigitalRegulatorVoltage
		_ASLB_ZTCReferenceCurrent
		_ASLB_MuxOpenCircuit
		_ASLB_OscillatorRegulatorVoltage
		_ASLB_ExternalReferenceVoltage
		_ASLB_VaricapBiasSteering
		_checkAndSendLatchData
 This function uses a non-reentrant model


 *************** function _ASLB_ADC *****************
 Defined at:
		line 856 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    0[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  rx_index        1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_write_ASLBoron_test
 This function uses a non-reentrant model


 *************** function _write_ASLBoron_debug *****************
 Defined at:
		line 277 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  run_test        1    wreg     unsigned char 
  run_cnfg        1  104[BANK0 ] unsigned char 
  rxBuffer        2  105[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  run_test        1  107[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_ASLB_debug0
		_ASLB_debug1
		_ASLB_debug2
		_ASLB_debug3
		_cycleBoronPower
		_findMaxI2CSpeed
		_resetLATCHData
		_resetSFRData
		_setCommI2C
		_setCommSingleWire
 This function is called by:
		_run_ASLBoron
 This function uses a non-reentrant model


 *************** function _setCommSingleWire *****************
 Defined at:
		line 1010 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_write_ASLBoron_debug
 This function uses a non-reentrant model


 *************** function _setCommI2C *****************
 Defined at:
		line 1015 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_write_ASLBoron_debug
 This function uses a non-reentrant model


 *************** function _resetSFRData *****************
 Defined at:
		line 1481 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_write_ASLBoron_debug
 This function uses a non-reentrant model


 *************** function _resetLATCHData *****************
 Defined at:
		line 1526 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_write_ASLBoron_debug
 This function uses a non-reentrant model


 *************** function _findMaxI2CSpeed *****************
 Defined at:
		line 1020 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2   21[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  i               1    9[BANK2 ] unsigned char 
  ramWrPkt       71   82[BANK2 ] struct TxRxPacket
  cmdReadbackP   71   10[BANK2 ] struct TxRxPacket
  stream          4    2[BANK2 ] PTR struct TxRxPacket[2]
		 -> run_I2C@rxPkt(71), run_I2C@txPkt(71), checkAndSendLatchData@readback_clock_select_pkt(71), checkAndSendLatchData@clock_select_pkt(71), 
		 -> checkAndSendLatchData@readback_ocxo_divisor_pkt(71), checkAndSendLatchData@ocxo_divisor_pkt(71), checkAndSendLatchData@readback_adc_mux_pkt(71), checkAndSendLatchData@adc_mux_pkt(71), 
		 -> checkAndSendLatchData@readback_adc_pkt(71), checkAndSendLatchData@adc_pkt(71), checkAndSendLatchData@readback_cmos_pkt(71), checkAndSendLatchData@cmos_pkt(71), 
		 -> checkAndSendLatchData@readback_bias_pkt(71), checkAndSendLatchData@bias_pkt(71), checkAndSendLatchData@readback_varactor_dac_pkt(71), checkAndSendLatchData@varactor_dac_pkt(71), 
		 -> checkAndSendLatchData@readback_heat_dac_pkt(71), checkAndSendLatchData@heat_dac_pkt(71), checkAndSendLatchData@readback_oven_pkt(71), checkAndSendLatchData@oven_pkt(71), 
		 -> checkAndSendLatchData@readback_analog_pkt(71), checkAndSendLatchData@analog_pkt(71), checkAndSendLatchData@readback_osc2_pkt(71), checkAndSendLatchData@osc2_pkt(71), 
		 -> checkAndSendLatchData@readback_osc1_pkt(71), checkAndSendLatchData@osc1_pkt(71), checkAndSendLatchData@readback_osc0_pkt(71), checkAndSendLatchData@osc0_pkt(71), 
		 -> findMaxI2CSpeed@cmdReadbackPkt(71), findMaxI2CSpeed@ramWrPkt(71), ASLB_debug1@ramReadbackPkt(71), ASLB_debug1@ramRdPkt(71), 
		 -> ASLB_debug1@cmdReadbackPkt(71), ASLB_debug1@ramWrPkt(71), ASLB_AnalogMuxReadingSetup@ovenWrPkt(71), ASLB_AnalogMuxReadingSetup@cmdReadbackPkt(71), 
		 -> ASLB_HeaterFunctionality@ovenWrPkt(71), ASLB_HeaterFunctionality@cmdReadbackPkt(71), 
  bRate           2    7[BANK2 ] unsigned int 
  rx_index        1   81[BANK2 ] unsigned char 
  ramData         1    6[BANK2 ] unsigned char 
  ramAddrLo       1    1[BANK2 ] unsigned char 
  ramAddrHi       1    0[BANK2 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0     153       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       2       0     153       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:      155 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_adjustI2CBaudRate
		_calcBaudRate
		_calcChecksum
		_streamI2C
 This function is called by:
		_write_ASLBoron_debug
 This function uses a non-reentrant model


 *************** function _calcBaudRate *****************
 Defined at:
		line 1088 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  bd              1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  bd              1   18[BANK0 ] unsigned char 
  bRate           2   19[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2   14[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___aldiv
 This function is called by:
		_findMaxI2CSpeed
 This function uses a non-reentrant model


 *************** function ___aldiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\aldiv.c"
 Parameters:    Size  Location     Type
  dividend        4    0[BANK0 ] long 
  divisor         4    4[BANK0 ] long 
 Auto vars:     Size  Location     Type
  quotient        4   10[BANK0 ] long 
  sign            1    9[BANK0 ] unsigned char 
  counter         1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    0[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       8       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_calcBaudRate
 This function uses a non-reentrant model


 *************** function _cycleBoronPower *****************
 Defined at:
		line 1120 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_write_ASLBoron_debug
 This function uses a non-reentrant model


 *************** function _ASLB_debug3 *****************
 Defined at:
		line 989 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  dataByte        1    wreg     unsigned char 
  rxBuffer        2    1[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  dataByte        1    3[BANK0 ] unsigned char 
  rx_index        1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_adjustI2CBaudRate
 This function is called by:
		_write_ASLBoron_debug
 This function uses a non-reentrant model


 *************** function _adjustI2CBaudRate *****************
 Defined at:
		line 1127 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  bd              1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  bd              1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ASLB_debug3
		_findMaxI2CSpeed
 This function uses a non-reentrant model


 *************** function _ASLB_debug2 *****************
 Defined at:
		line 976 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2   24[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  zeros          10   26[BANK0 ] unsigned char [10]
  wr_status       1   37[BANK0 ] unsigned char 
  rx_index        1   36[BANK0 ] unsigned char 
  rd_status       1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_writeI2C
 This function is called by:
		_write_ASLBoron_debug
 This function uses a non-reentrant model


 *************** function _writeI2C *****************
 Defined at:
		line 5 in file "Utils.c"
 Parameters:    Size  Location     Type
  txData          2   16[BANK0 ] PTR unsigned char 
		 -> ASLB_debug2@zeros(10), 
  size            1   18[BANK0 ] unsigned char 
  slaveAddr       2   19[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  timeOut         2   21[BANK0 ] unsigned int 
  status          1   23[BANK0 ] enum E11632
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_I2C1_MasterWrite
 This function is called by:
		_ASLB_debug2
		_run_I2C
 This function uses a non-reentrant model


 *************** function _I2C1_MasterWrite *****************
 Defined at:
		line 600 in file "mcc_generated_files/i2c1.c"
 Parameters:    Size  Location     Type
  pdata           2    9[BANK0 ] PTR unsigned char 
		 -> ASLB_debug2@zeros(10), 
  length          1   11[BANK0 ] unsigned char 
  address         2   12[BANK0 ] unsigned int 
  pflag           2   14[BANK0 ] PTR enum E11632
		 -> writeI2C@status(1), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_I2C1_MasterTRBInsert
		_I2C1_MasterWriteTRBBuild
 This function is called by:
		_writeI2C
 This function uses a non-reentrant model


 *************** function _ASLB_debug1 *****************
 Defined at:
		line 896 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2   18[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  ramWrPkt       71   71[BANK2 ] struct TxRxPacket
  ramRdPkt       71    0[BANK2 ] struct TxRxPacket
  ramReadbackP   71  162[BANK1 ] struct TxRxPacket
  cmdReadbackP   71   33[BANK0 ] struct TxRxPacket
  stream          8   22[BANK0 ] PTR struct TxRxPacket[4]
		 -> run_I2C@rxPkt(71), run_I2C@txPkt(71), checkAndSendLatchData@readback_clock_select_pkt(71), checkAndSendLatchData@clock_select_pkt(71), 
		 -> checkAndSendLatchData@readback_ocxo_divisor_pkt(71), checkAndSendLatchData@ocxo_divisor_pkt(71), checkAndSendLatchData@readback_adc_mux_pkt(71), checkAndSendLatchData@adc_mux_pkt(71), 
		 -> checkAndSendLatchData@readback_adc_pkt(71), checkAndSendLatchData@adc_pkt(71), checkAndSendLatchData@readback_cmos_pkt(71), checkAndSendLatchData@cmos_pkt(71), 
		 -> checkAndSendLatchData@readback_bias_pkt(71), checkAndSendLatchData@bias_pkt(71), checkAndSendLatchData@readback_varactor_dac_pkt(71), checkAndSendLatchData@varactor_dac_pkt(71), 
		 -> checkAndSendLatchData@readback_heat_dac_pkt(71), checkAndSendLatchData@heat_dac_pkt(71), checkAndSendLatchData@readback_oven_pkt(71), checkAndSendLatchData@oven_pkt(71), 
		 -> checkAndSendLatchData@readback_analog_pkt(71), checkAndSendLatchData@analog_pkt(71), checkAndSendLatchData@readback_osc2_pkt(71), checkAndSendLatchData@osc2_pkt(71), 
		 -> checkAndSendLatchData@readback_osc1_pkt(71), checkAndSendLatchData@osc1_pkt(71), checkAndSendLatchData@readback_osc0_pkt(71), checkAndSendLatchData@osc0_pkt(71), 
		 -> findMaxI2CSpeed@cmdReadbackPkt(71), findMaxI2CSpeed@ramWrPkt(71), ASLB_debug1@ramReadbackPkt(71), ASLB_debug1@ramRdPkt(71), 
		 -> ASLB_debug1@cmdReadbackPkt(71), ASLB_debug1@ramWrPkt(71), ASLB_AnalogMuxReadingSetup@ovenWrPkt(71), ASLB_AnalogMuxReadingSetup@cmdReadbackPkt(71), 
		 -> ASLB_HeaterFunctionality@ovenWrPkt(71), ASLB_HeaterFunctionality@cmdReadbackPkt(71), 
  rx_index        1   32[BANK0 ] unsigned char 
  ramAddrLo       1   31[BANK0 ] unsigned char 
  ramAddrHi       1   30[BANK0 ] unsigned char 
  stream_statu    1   21[BANK0 ] unsigned char 
  ramData         1   20[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0      84      71     142       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      86      71     142       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:      299 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_calcChecksum
		_memcpy
		_streamBoronComm
 This function is called by:
		_write_ASLBoron_debug
 This function uses a non-reentrant model


 *************** function _streamBoronComm *****************
 Defined at:
		line 77 in file "Utils.c"
 Parameters:    Size  Location     Type
  boron_comm_t    1    wreg     unsigned char 
  pktArr          2   14[BANK0 ] PTR PTR struct TxRxPacke
		 -> checkAndSendLatchData@stream(48), ASLB_debug1@stream(8), ASLB_AnalogMuxReadingSetup@stream(4), ASLB_HeaterFunctionality@stream(4), 
  pktSize         1   16[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  boron_comm_t    1   17[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_streamI2C
		_streamSW
 This function is called by:
		_ASLB_HeaterFunctionality
		_ASLB_AnalogMuxReadingSetup
		_ASLB_debug1
		_checkAndSendLatchData
 This function uses a non-reentrant model


 *************** function _streamSW *****************
 Defined at:
		line 89 in file "Utils.c"
 Parameters:    Size  Location     Type
  pktArr          2    0[BANK0 ] PTR PTR struct TxRxPacke
		 -> checkAndSendLatchData@stream(48), ASLB_debug1@stream(8), ASLB_AnalogMuxReadingSetup@stream(4), ASLB_HeaterFunctionality@stream(4), 
  pktSize         1    2[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_streamBoronComm
 This function uses a non-reentrant model


 *************** function _streamI2C *****************
 Defined at:
		line 96 in file "Utils.c"
 Parameters:    Size  Location     Type
  pktArr          2    9[BANK0 ] PTR PTR struct TxRxPacke
		 -> run_I2C@stream(4), checkAndSendLatchData@stream(48), findMaxI2CSpeed@stream(4), ASLB_debug1@stream(8), 
		 -> ASLB_AnalogMuxReadingSetup@stream(4), ASLB_HeaterFunctionality@stream(4), 
  pktSize         1   11[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  trBlock       160    0[BANK1 ] struct .[32]
  i               1  161[BANK1 ] unsigned char 
  status          1  160[BANK1 ] enum E11632
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0     162       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       5     162       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:      167 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_I2C1_MasterReadTRBBuild
		_I2C1_MasterTRBInsert
		_I2C1_MasterWriteTRBBuild
 This function is called by:
		_streamBoronComm
		_findMaxI2CSpeed
		_run_I2C
 This function uses a non-reentrant model


 *************** function _I2C1_MasterWriteTRBBuild *****************
 Defined at:
		line 708 in file "mcc_generated_files/i2c1.c"
 Parameters:    Size  Location     Type
  ptrb            2    0[BANK0 ] PTR struct .
		 -> I2C1_MasterWrite@trBlock(5), streamI2C@trBlock(160), 
  pdata           2    2[BANK0 ] PTR unsigned char 
		 -> run_I2C@rxPkt(71), run_I2C@txPkt(71), checkAndSendLatchData@readback_clock_select_pkt(71), checkAndSendLatchData@clock_select_pkt(71), 
		 -> checkAndSendLatchData@readback_ocxo_divisor_pkt(71), checkAndSendLatchData@ocxo_divisor_pkt(71), checkAndSendLatchData@readback_adc_mux_pkt(71), checkAndSendLatchData@adc_mux_pkt(71), 
		 -> checkAndSendLatchData@readback_adc_pkt(71), checkAndSendLatchData@adc_pkt(71), checkAndSendLatchData@readback_cmos_pkt(71), checkAndSendLatchData@cmos_pkt(71), 
		 -> checkAndSendLatchData@readback_bias_pkt(71), checkAndSendLatchData@bias_pkt(71), checkAndSendLatchData@readback_varactor_dac_pkt(71), checkAndSendLatchData@varactor_dac_pkt(71), 
		 -> checkAndSendLatchData@readback_heat_dac_pkt(71), checkAndSendLatchData@heat_dac_pkt(71), checkAndSendLatchData@readback_oven_pkt(71), checkAndSendLatchData@oven_pkt(71), 
		 -> checkAndSendLatchData@readback_analog_pkt(71), checkAndSendLatchData@analog_pkt(71), checkAndSendLatchData@readback_osc2_pkt(71), checkAndSendLatchData@osc2_pkt(71), 
		 -> checkAndSendLatchData@readback_osc1_pkt(71), checkAndSendLatchData@osc1_pkt(71), checkAndSendLatchData@readback_osc0_pkt(71), checkAndSendLatchData@osc0_pkt(71), 
		 -> findMaxI2CSpeed@cmdReadbackPkt(71), findMaxI2CSpeed@ramWrPkt(71), ASLB_debug2@zeros(10), ASLB_debug1@ramReadbackPkt(71), 
		 -> ASLB_debug1@ramRdPkt(71), ASLB_debug1@cmdReadbackPkt(71), ASLB_debug1@ramWrPkt(71), ASLB_AnalogMuxReadingSetup@ovenWrPkt(71), 
		 -> ASLB_AnalogMuxReadingSetup@cmdReadbackPkt(71), ASLB_HeaterFunctionality@ovenWrPkt(71), ASLB_HeaterFunctionality@cmdReadbackPkt(71), 
  length          1    4[BANK0 ] unsigned char 
  address         2    5[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_streamI2C
		_I2C1_MasterWrite
 This function uses a non-reentrant model


 *************** function _I2C1_MasterTRBInsert *****************
 Defined at:
		line 642 in file "mcc_generated_files/i2c1.c"
 Parameters:    Size  Location     Type
  count           1    wreg     unsigned char 
  ptrb_list       2    0[BANK0 ] PTR struct .
		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), streamI2C@trBlock(160), 
  pflag           2    2[BANK0 ] PTR enum E11632
		 -> streamI2C@status(1), readI2C@status(1), writeI2C@status(1), 
 Auto vars:     Size  Location     Type
  count           1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_streamI2C
		_I2C1_MasterWrite
		_I2C1_MasterRead
 This function uses a non-reentrant model


 *************** function _I2C1_MasterReadTRBBuild *****************
 Defined at:
		line 695 in file "mcc_generated_files/i2c1.c"
 Parameters:    Size  Location     Type
  ptrb            2    0[BANK0 ] PTR struct .
		 -> I2C1_MasterRead@trBlock(5), streamI2C@trBlock(160), 
  pdata           2    2[BANK0 ] PTR unsigned char 
		 -> run_I2C@rxPkt(71), run_I2C@txPkt(71), checkAndSendLatchData@readback_clock_select_pkt(71), checkAndSendLatchData@clock_select_pkt(71), 
		 -> checkAndSendLatchData@readback_ocxo_divisor_pkt(71), checkAndSendLatchData@ocxo_divisor_pkt(71), checkAndSendLatchData@readback_adc_mux_pkt(71), checkAndSendLatchData@adc_mux_pkt(71), 
		 -> checkAndSendLatchData@readback_adc_pkt(71), checkAndSendLatchData@adc_pkt(71), checkAndSendLatchData@readback_cmos_pkt(71), checkAndSendLatchData@cmos_pkt(71), 
		 -> checkAndSendLatchData@readback_bias_pkt(71), checkAndSendLatchData@bias_pkt(71), checkAndSendLatchData@readback_varactor_dac_pkt(71), checkAndSendLatchData@varactor_dac_pkt(71), 
		 -> checkAndSendLatchData@readback_heat_dac_pkt(71), checkAndSendLatchData@heat_dac_pkt(71), checkAndSendLatchData@readback_oven_pkt(71), checkAndSendLatchData@oven_pkt(71), 
		 -> checkAndSendLatchData@readback_analog_pkt(71), checkAndSendLatchData@analog_pkt(71), checkAndSendLatchData@readback_osc2_pkt(71), checkAndSendLatchData@osc2_pkt(71), 
		 -> checkAndSendLatchData@readback_osc1_pkt(71), checkAndSendLatchData@osc1_pkt(71), checkAndSendLatchData@readback_osc0_pkt(71), checkAndSendLatchData@osc0_pkt(71), 
		 -> findMaxI2CSpeed@cmdReadbackPkt(71), findMaxI2CSpeed@ramWrPkt(71), ASLB_debug1@ramReadbackPkt(71), ASLB_debug1@ramRdPkt(71), 
		 -> ASLB_debug1@cmdReadbackPkt(71), ASLB_debug1@ramWrPkt(71), ASLB_AnalogMuxReadingSetup@ovenWrPkt(71), ASLB_AnalogMuxReadingSetup@cmdReadbackPkt(71), 
		 -> ASLB_HeaterFunctionality@ovenWrPkt(71), ASLB_HeaterFunctionality@cmdReadbackPkt(71), hx_mainData(61), 
  length          1    4[BANK0 ] unsigned char 
  address         2    5[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_streamI2C
		_I2C1_MasterRead
 This function uses a non-reentrant model


 *************** function _memcpy *****************
 Defined at:
		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memcpy.c"
 Parameters:    Size  Location     Type
  d1              2    0[BANK0 ] PTR void 
		 -> hx_mainData(61), 
  s1              2    2[BANK0 ] PTR const void 
		 -> ramReadbackPkt.data(64), cmdReadbackPkt.data(64), ASLB_debug1@ramReadbackPkt(71), ASLB_debug1@cmdReadbackPkt(71), 
  n               2    4[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  s               2    9[BANK0 ] PTR const unsigned char 
		 -> ramReadbackPkt.data(64), cmdReadbackPkt.data(64), ASLB_debug1@ramReadbackPkt(71), ASLB_debug1@cmdReadbackPkt(71), 
  d               2    7[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
  tmp             1    6[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] PTR void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       6       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ASLB_debug1
 This function uses a non-reentrant model


 *************** function _calcChecksum *****************
 Defined at:
		line 180 in file "Utils.c"
 Parameters:    Size  Location     Type
  data            2    0[BANK0 ] PTR unsigned char 
		 -> run_I2C@txPkt(71), checkAndSendLatchData@clock_select_pkt(71), checkAndSendLatchData@ocxo_divisor_pkt(71), checkAndSendLatchData@adc_mux_pkt(71), 
		 -> checkAndSendLatchData@adc_pkt(71), checkAndSendLatchData@cmos_pkt(71), checkAndSendLatchData@bias_pkt(71), checkAndSendLatchData@varactor_dac_pkt(71), 
		 -> checkAndSendLatchData@heat_dac_pkt(71), checkAndSendLatchData@oven_pkt(71), checkAndSendLatchData@analog_pkt(71), checkAndSendLatchData@osc2_pkt(71), 
		 -> checkAndSendLatchData@osc1_pkt(71), checkAndSendLatchData@osc0_pkt(71), findMaxI2CSpeed@ramWrPkt(71), ASLB_debug1@ramRdPkt(71), 
		 -> ASLB_debug1@ramWrPkt(71), ASLB_AnalogMuxReadingSetup@ovenWrPkt(71), ASLB_HeaterFunctionality@heatDacWrPkt(71), ASLB_HeaterFunctionality@ovenWrPkt(71), 
		 -> hx_inData(64), 
  size            1    2[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  i               1    3[BANK0 ] unsigned char 
  temp_checksu    1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_run_ASLBoron
		_ASLB_debug1
		_findMaxI2CSpeed
		_setupLatchPkt
		_run_I2C
		_setupLrgWrPkt
 This function uses a non-reentrant model


 *************** function _ASLB_debug0 *****************
 Defined at:
		line 884 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    0[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  rx_index        1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_write_ASLBoron_debug
 This function uses a non-reentrant model


 *************** function _write_ASLBoron_cstm_cnfg *****************
 Defined at:
		line 272 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  cnfg_arr        2    0[BANK0 ] PTR unsigned char 
		 -> run_ASLBoron@cnfg_arr(256), 
  cnfg_arr_siz    2    2[BANK0 ] unsigned int 
  rxBuffer        2    4[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       6       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_run_ASLBoron
 This function uses a non-reentrant model


 *************** function _write_ASLBoron_cnfg *****************
 Defined at:
		line 251 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  run_cnfg        1    wreg     unsigned char 
  rxBuffer        2    2[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
  run_cnfg        1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_ASLB_cnfg0
		_ASLB_cnfg1
 This function is called by:
		_run_ASLBoron
 This function uses a non-reentrant model


 *************** function _ASLB_cnfg1 *****************
 Defined at:
		line 879 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    0[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_write_ASLBoron_cnfg
 This function uses a non-reentrant model


 *************** function _ASLB_cnfg0 *****************
 Defined at:
		line 874 in file "HX_ASL_BORON.c"
 Parameters:    Size  Location     Type
  rxBuffer        2    0[BANK0 ] PTR unsigned char 
		 -> hx_mainData(61), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_write_ASLBoron_cnfg
 This function uses a non-reentrant model


 *************** function _hxHandleTxUART *****************
 Defined at:
		line 229 in file "HX_CommInterface.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2    7[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_EUSART1_Write
		_hxFlushOutputBuffer
		_hxStopTimer
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _hxStopTimer *****************
 Defined at:
		line 270 in file "HX_CommInterface.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_TMR0_StopTimer
		_TMR0_Write16bitTimer
 This function is called by:
		_hxHandleTxUART
 This function uses a non-reentrant model


 *************** function _TMR0_Write16bitTimer *****************
 Defined at:
		line 119 in file "mcc_generated_files/tmr0.c"
 Parameters:    Size  Location     Type
  timerVal        2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_hxStopTimer
 This function uses a non-reentrant model


 *************** function _TMR0_StopTimer *****************
 Defined at:
		line 100 in file "mcc_generated_files/tmr0.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_hxStopTimer
 This function uses a non-reentrant model


 *************** function _EUSART1_Write *****************
 Defined at:
		line 144 in file "mcc_generated_files/eusart1.c"
 Parameters:    Size  Location     Type
  txData          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  txData          1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_hxHandleTxUART
 This function uses a non-reentrant model


 *************** function _SYSTEM_Initialize *****************
 Defined at:
		line 115 in file "mcc_generated_files/mcc.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_EUSART1_Initialize
		_I2C1_Initialize
		_INTERRUPT_Initialize
		_OSCILLATOR_Initialize
		_PIN_MANAGER_Initialize
		_TMR0_Initialize
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _TMR0_Initialize *****************
 Defined at:
		line 65 in file "mcc_generated_files/tmr0.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_TMR0_SetInterruptHandler
 This function is called by:
		_SYSTEM_Initialize
 This function uses a non-reentrant model


 *************** function _TMR0_SetInterruptHandler *****************
 Defined at:
		line 150 in file "mcc_generated_files/tmr0.c"
 Parameters:    Size  Location     Type
  InterruptHan    3    0[BANK0 ] PTR void 
		 -> TMR0_DefaultInterruptHandler(1), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_TMR0_Initialize
 This function uses a non-reentrant model


 *************** function _PIN_MANAGER_Initialize *****************
 Defined at:
		line 51 in file "mcc_generated_files/pin_manager.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  state           1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_SYSTEM_Initialize
 This function uses a non-reentrant model


 *************** function _OSCILLATOR_Initialize *****************
 Defined at:
		line 126 in file "mcc_generated_files/mcc.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_SYSTEM_Initialize
 This function uses a non-reentrant model


 *************** function _INTERRUPT_Initialize *****************
 Defined at:
		line 51 in file "mcc_generated_files/interrupt_manager.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_SYSTEM_Initialize
 This function uses a non-reentrant model


 *************** function _I2C1_Initialize *****************
 Defined at:
		line 198 in file "mcc_generated_files/i2c1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_SYSTEM_Initialize
 This function uses a non-reentrant model


 *************** function _EUSART1_Initialize *****************
 Defined at:
		line 76 in file "mcc_generated_files/eusart1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_SYSTEM_Initialize
 This function uses a non-reentrant model


 *************** function _HX_Initialize *****************
 Defined at:
		line 18 in file "HX_CommInterface.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_hxFlushInputBuffer
		_hxFlushMainDataBuffer
		_hxFlushOutputBuffer
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _hxFlushOutputBuffer *****************
 Defined at:
		line 283 in file "HX_CommInterface.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_hxClearArray
 This function is called by:
		_HX_Initialize
		_hxHandleTxUART
 This function uses a non-reentrant model


 *************** function _hxFlushMainDataBuffer *****************
 Defined at:
		line 289 in file "HX_CommInterface.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_hxClearArray
 This function is called by:
		_HX_Initialize
 This function uses a non-reentrant model


 *************** function _hxFlushInputBuffer *****************
 Defined at:
		line 276 in file "HX_CommInterface.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_hxClearArray
 This function is called by:
		_HX_Initialize
 This function uses a non-reentrant model


 *************** function _hxClearArray *****************
 Defined at:
		line 306 in file "HX_CommInterface.c"
 Parameters:    Size  Location     Type
  arr             2    0[BANK0 ] PTR unsigned char 
		 -> hx_outData(64), hx_mainData(61), hx_inData(64), 
  size            1    2[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  i               1    3[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_hxFlushInputBuffer
		_hxFlushOutputBuffer
		_hxFlushMainDataBuffer
 This function uses a non-reentrant model


 *************** function _INTERRUPT_InterruptManager *****************
 Defined at:
		line 57 in file "mcc_generated_files/interrupt_manager.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       18 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_EUSART1_Receive_ISR
		_EUSART1_Transmit_ISR
		_I2C1_BusCollisionISR
		_I2C1_ISR
		_TMR0_ISR
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _TMR0_ISR *****************
 Defined at:
		line 133 in file "mcc_generated_files/tmr0.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Absolute function
		_TMR0_DefaultInterruptHandler
 This function is called by:
		_INTERRUPT_InterruptManager
 This function uses a non-reentrant model


 *************** function _TMR0_DefaultInterruptHandler *****************
 Defined at:
		line 154 in file "mcc_generated_files/tmr0.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_hxHandleTmr0
 This function is called by:
		_TMR0_Initialize
		_TMR0_ISR
 This function uses a non-reentrant model


 *************** function _hxHandleTmr0 *****************
 Defined at:
		line 248 in file "HX_CommInterface.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_hxSetupPacket1
		i2_hxFlushInputBuffer
		i2_hxFlushOutputBuffer
 This function is called by:
		_TMR0_DefaultInterruptHandler
 This function uses a non-reentrant model


 *************** function _I2C1_ISR *****************
 Defined at:
		line 235 in file "mcc_generated_files/i2c1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_I2C1_FunctionComplete
		_I2C1_Stop
 This function is called by:
		_INTERRUPT_InterruptManager
 This function uses a non-reentrant model


 *************** function _I2C1_Stop *****************
 Defined at:
		line 583 in file "mcc_generated_files/i2c1.c"
 Parameters:    Size  Location     Type
  completion_c    1    wreg     enum E11632
 Auto vars:     Size  Location     Type
  completion_c    1    2[COMRAM] enum E11632
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_I2C1_ISR
 This function uses a non-reentrant model


 *************** function _I2C1_FunctionComplete *****************
 Defined at:
		line 565 in file "mcc_generated_files/i2c1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_I2C1_ISR
 This function uses a non-reentrant model


 *************** function _I2C1_BusCollisionISR *****************
 Defined at:
		line 729 in file "mcc_generated_files/i2c1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_INTERRUPT_InterruptManager
 This function uses a non-reentrant model


 *************** function _EUSART1_Transmit_ISR *****************
 Defined at:
		line 170 in file "mcc_generated_files/eusart1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_INTERRUPT_InterruptManager
 This function uses a non-reentrant model


 *************** function _EUSART1_Receive_ISR *****************
 Defined at:
		line 190 in file "mcc_generated_files/eusart1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_hxISRHandle
 This function is called by:
		_INTERRUPT_InterruptManager
 This function uses a non-reentrant model


 *************** function _hxISRHandle *****************
 Defined at:
		line 28 in file "HX_CommInterface.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_hxCmdFilter
		_hxStartTimer
		i2_hxFlushInputBuffer
		i2_hxStopTimer
 This function is called by:
		_EUSART1_Receive_ISR
 This function uses a non-reentrant model


 *************** function i2_hxStopTimer *****************
 Defined at:
		line 270 in file "HX_CommInterface.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2_TMR0_StopTimer
		i2_TMR0_Write16bitTimer
 This function is called by:
		_hxISRHandle
 This function uses a non-reentrant model


 *************** function i2_TMR0_StopTimer *****************
 Defined at:
		line 100 in file "mcc_generated_files/tmr0.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i2_hxStopTimer
 This function uses a non-reentrant model


 *************** function _hxCmdFilter *****************
 Defined at:
		line 105 in file "HX_CommInterface.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    8[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_hxSetupPacket1
		_hxSetupPacket2
		_hxStartTimer
		i2_hxFlushInputBuffer
		i2_hxFlushMainDataBuffer
		i2_hxFlushOutputBuffer
 This function is called by:
		_hxISRHandle
 This function uses a non-reentrant model


 *************** function i2_hxFlushMainDataBuffer *****************
 Defined at:
		line 289 in file "HX_CommInterface.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2_hxClearArray
 This function is called by:
		_hxCmdFilter
 This function uses a non-reentrant model


 *************** function i2_hxFlushInputBuffer *****************
 Defined at:
		line 276 in file "HX_CommInterface.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2_hxClearArray
 This function is called by:
		_hxISRHandle
		_hxCmdFilter
		_hxHandleTmr0
 This function uses a non-reentrant model


 *************** function _hxStartTimer *****************
 Defined at:
		line 264 in file "HX_CommInterface.c"
 Parameters:    Size  Location     Type
  timerVal        2    2[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_TMR0_StartTimer
		i2_TMR0_Write16bitTimer
 This function is called by:
		_hxISRHandle
		_hxCmdFilter
 This function uses a non-reentrant model


 *************** function i2_TMR0_Write16bitTimer *****************
 Defined at:
		line 119 in file "mcc_generated_files/tmr0.c"
 Parameters:    Size  Location     Type
  timerVal        2    0[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_hxStartTimer
		i2_hxStopTimer
 This function uses a non-reentrant model


 *************** function _TMR0_StartTimer *****************
 Defined at:
		line 94 in file "mcc_generated_files/tmr0.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_hxStartTimer
 This function uses a non-reentrant model


 *************** function _hxSetupPacket2 *****************
 Defined at:
		line 216 in file "HX_CommInterface.c"
 Parameters:    Size  Location     Type
  pc_cmd          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  pc_cmd          1    6[COMRAM] unsigned char 
  i               1    7[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_hxCalcChecksum
 This function is called by:
		_hxCmdFilter
 This function uses a non-reentrant model


 *************** function _hxSetupPacket1 *****************
 Defined at:
		line 207 in file "HX_CommInterface.c"
 Parameters:    Size  Location     Type
  pc_cmd          1    wreg     unsigned char 
  data            1    5[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  pc_cmd          1    7[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_hxCalcChecksum
		i2_hxFlushOutputBuffer
 This function is called by:
		_hxCmdFilter
		_hxHandleTmr0
 This function uses a non-reentrant model


 *************** function i2_hxFlushOutputBuffer *****************
 Defined at:
		line 283 in file "HX_CommInterface.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2_hxClearArray
 This function is called by:
		_hxCmdFilter
		_hxSetupPacket1
		_hxHandleTmr0
 This function uses a non-reentrant model


 *************** function i2_hxClearArray *****************
 Defined at:
		line 306 in file "HX_CommInterface.c"
 Parameters:    Size  Location     Type
  arr             2    0[COMRAM] PTR unsigned char 
		 -> hx_outData(64), hx_mainData(61), hx_inData(64), 
  size            1    2[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  hxClearArray    1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i2_hxFlushInputBuffer
		i2_hxFlushOutputBuffer
		i2_hxFlushMainDataBuffer
 This function uses a non-reentrant model


 *************** function _hxCalcChecksum *****************
 Defined at:
		line 295 in file "HX_CommInterface.c"
 Parameters:    Size  Location     Type
  data            2    0[COMRAM] PTR unsigned char 
		 -> hx_outData(64), 
  size            1    2[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  i               1    3[COMRAM] unsigned char 
  temp_checksu    1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14
      Params:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_hxSetupPacket1
		_hxSetupPacket2
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
mcc_generated_files/interrupt_manager.c
		_INTERRUPT_Initialize		CODE           	40D6	0000	5
		_INTERRUPT_InterruptManager		CODE           	0008	0000	225

mcc_generated_files/interrupt_manager.c estimated size: 230

mcc_generated_files/tmr0.c
		_TMR0_SetInterruptHandler		CODE           	4064	0000	15
		_TMR0_StopTimer		CODE           	40D2	0000	5
		_TMR0_DefaultInterruptHandler		CODE           	40C4	0000	7
		_TMR0_StartTimer		CODE           	40DE	0000	5
		_TMR0_Write16bitTimer		CODE           	4072	0000	13
		_TMR0_ISR      		CODE           	3D3C	0000	49
		_TMR0_Initialize		CODE           	39AC	0000	63

mcc_generated_files/tmr0.c estimated size: 157

mcc_generated_files/i2c1.c
		_I2C1_BusCollisionISR		CODE           	40EA	0000	3
		_I2C1_MasterRead		CODE           	3710	0000	81
		_I2C1_FunctionComplete		CODE           	3FAE	0000	25
		_I2C1_MasterWriteTRBBuild		CODE           	3922	0000	71
		_I2C1_ISR      		CODE           	1BC8	0000	593
		_I2C1_MasterWrite		CODE           	3760	0000	81
		_I2C1_Initialize		CODE           	3C78	0000	51
		_I2C1_Stop     		CODE           	39EA	0000	63
		_I2C1_MasterReadTRBBuild		CODE           	36BE	0000	83
		_I2C1_MasterTRBInsert		CODE           	2FDE	0000	165

mcc_generated_files/i2c1.c estimated size: 1216

HX_CommInterface.c
		_hxCalcChecksum		CODE           	3D6C	0000	47
		_hxHandleTxUART		CODE           	35B8	0000	93
		_HX_Initialize 		CODE           	3FC6	0000	23
		_hxStartTimer  		CODE           	4042	0000	19
		_hxClearArray  		CODE           	3E3E	0000	41
		_hxFlushMainDataBuffer		CODE           	3F96	0000	25
		_hxSetupPacket1		CODE           	37B0	0000	81
		_hxSetupPacket2		CODE           	3354	0000	109
		_hxFlushOutputBuffer		CODE           	3F7E	0000	25
		_hxCmdFilter   		CODE           	1FAA	0000	397
		_hxISRHandle   		CODE           	2A94	0000	215
		_hxStopTimer   		CODE           	401C	0000	21
		_hxHandleTmr0  		CODE           	3A28	0000	61
		_hxFlushInputBuffer		CODE           	3ECA	0000	29

HX_CommInterface.c estimated size: 1186

HX_SPP_CARBON.c
		_hxSPPCarbonProgram_test		CODE           	22B6	0000	383
		_hxSPPCarbonRead_test		CODE           	384C	0000	73
		_hxSPPCarbonCheckBusy_test		CODE           	1108	0000	751
		_hxSPPCarbonWriteReg_test		CODE           	25A6	0000	363
		_run_SPPCarbon_test		CODE           	16B8	0000	673
		_hxSPPCarbonWrite_test		CODE           	3A9E	0000	57
		_hxOddParityCalc		CODE           	366C	0000	83
		_hxSPPCarbonWriteAndVerity_test		CODE           	2C38	0000	203
		_hxSPPCarbonReadReg_test		CODE           	1958	0000	625

HX_SPP_CARBON.c estimated size: 3211

mcc_generated_files/pin_manager.c
		_PIN_MANAGER_Initialize		CODE           	2DCC	0000	189

mcc_generated_files/pin_manager.c estimated size: 189

C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memcpy.c
		_memcpy        		CODE           	3894	0000	73

C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memcpy.c estimated size: 73

shared
		i2_TMR0_StopTimer		CODE           	40DA	0000	5
		i2_hxStopTimer 		CODE           	4030	0000	19
		i2_hxFlushMainDataBuffer		CODE           	3FDC	0000	23
		i2_hxFlushOutputBuffer		CODE           	3FF2	0000	23
		i2_TMR0_Write16bitTimer		CODE           	407E	0000	11
		__initialization		CODE           	3254	0000	135
		i2_hxFlushInputBuffer		CODE           	3F34	0000	27
		i2_hxClearArray		CODE           	3E66	0000	39

shared estimated size: 282

mcc_generated_files/eusart1.c
		_EUSART1_Initialize		CODE           	3A64	0000	59
		_EUSART1_Write 		CODE           	3968	0000	69
		_EUSART1_Receive_ISR		CODE           	4054	0000	17
		_EUSART1_Transmit_ISR		CODE           	3CAA	0000	51

mcc_generated_files/eusart1.c estimated size: 196

mcc_generated_files/mcc.c
		_OSCILLATOR_Initialize		CODE           	3F66	0000	25
		_SYSTEM_Initialize		CODE           	3F1A	0000	27

mcc_generated_files/mcc.c estimated size: 52

C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\aldiv.c
		___aldiv       		CODE           	2B6A	0000	207

C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\aldiv.c estimated size: 207

Utils.c
		_readI2C       		CODE           	3800	0000	77
		_writeI2C      		CODE           	3558	0000	97
		_calcChecksum  		CODE           	3D0C	0000	49
		_streamBoronComm		CODE           	3CDC	0000	49
		_streamSW      		CODE           	40CE	0000	5
		_streamI2C     		CODE           	1E18	0000	403

Utils.c estimated size: 680

HX_ASL_BORON.c
		_ASLB_MuxReadingVDD		CODE           	3D9A	0000	43
		_ASLB_DigitalRegulatorVoltage		CODE           	3BDC	0000	53
		_setCommSingleWire		CODE           	40B8	0000	7
		_ASLB_CurrentLimitDACVoltage		CODE           	33C0	0000	107
		_setupCmdReadbackPkt		CODE           	3C44	0000	53
		_ASLB_ZTCReferenceCurrent		CODE           	3B0C	0000	53
		_ASLB_VaricapBiasSteering		CODE           	4008	0000	21
		_ASLB_PierceOscillator		CODE           	4090	0000	9
		_checkAndSendLatchData		CODE           	00EC	0000	2313
		_resetLATCHData		CODE           	29B8	0000	221
		_ASLB_CFCVVaricap		CODE           	40A8	0000	9
		_write_ASLBoron_debug		CODE           	286E	0000	331
		_ASLB_DACReferenceVoltage		CODE           	3C10	0000	53
		_ASLB_ADCReferenceVoltage		CODE           	3DC4	0000	43
		_ASLB_OscillatorRegulatorVoltage		CODE           	3EE6	0000	27
		_ASLB_VaricapDACVoltage		CODE           	3B40	0000	53
		_cycleBoronPower		CODE           	3F4E	0000	25
		_ASLB_ColpittsOscillator		CODE           	40A0	0000	9
		_ASLB_HeaterFunctionality		CODE           	2D02	0000	203
		_ASLB_TempSetDACVoltage		CODE           	3494	0000	101
		_setCurrLimitDAC		CODE           	3122	0000	159
		_filterLatchPacketResponses		CODE           	2710	0000	351
		_ASLB_MuxOpenCircuit		CODE           	3B74	0000	53
		_ASLB_RDResistor		CODE           	4088	0000	9
		_findMaxI2CSpeed		CODE           	2434	0000	371
		_ASLB_SheetResistance		CODE           	31C0	0000	149
		_ASLB_cnfg0    		CODE           	40E8	0000	3
		_ASLB_cnfg1    		CODE           	40E6	0000	3
		_ASLB_ContinuityESD		CODE           	40E2	0000	3
		_ASLB_ExternalReferenceVoltage		CODE           	3F00	0000	27
		_calcBaudRate  		CODE           	3614	0000	89
		_ASLB_CTHERM   		CODE           	3E16	0000	41
		_ASLB_debug0   		CODE           	3E8C	0000	35
		_ASLB_debug1   		CODE           	2136	0000	385
		_ASLB_debug2   		CODE           	3AD6	0000	55
		_ASLB_debug3   		CODE           	34F8	0000	97
		_write_ASLBoron_cstm_cnfg		CODE           	40E4	0000	3
		_write_ASLBoron_test		CODE           	0DF0	0000	793
		_run_ASLBoron  		CODE           	13F6	0000	707
		_setTempCtrlDAC		CODE           	3DEE	0000	41
		_ASLB_CommonGate		CODE           	4098	0000	9
		_setupLatchPkt 		CODE           	2E88	0000	173
		_setCommI2C    		CODE           	40BE	0000	7
		_resetSFRData  		CODE           	2F34	0000	171
		_ASLB_AnalogMuxReadingSetup		CODE           	32E4	0000	113
		_ASLB_InternalTempSensor		CODE           	3BA8	0000	53
		_ASLB_HeaterFBSignals		CODE           	38DC	0000	71
		_write_ASLBoron_cnfg		CODE           	342A	0000	107
		_ASLB_ADC      		CODE           	40B0	0000	9
		_adjustI2CBaudRate		CODE           	3EAE	0000	29

HX_ASL_BORON.c estimated size: 7850

main.c
		_main          		CODE           	3082	0000	161

main.c estimated size: 161

HX_I2C.c
		_run_I2C       		CODE           	09F4	0000	1021

HX_I2C.c estimated size: 1021

