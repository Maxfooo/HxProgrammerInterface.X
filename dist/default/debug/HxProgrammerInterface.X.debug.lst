

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Oct 19 09:38:31 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    90                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    91  0000                     
    92                           ; Version 1.41
    93                           ; Generated 25/01/2017 GMT
    94                           ; 
    95                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    96                           ; All rights reserved.
    97                           ; 
    98                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    99                           ; 
   100                           ; Redistribution and use in source and binary forms, with or without modification, are
   101                           ; permitted provided that the following conditions are met:
   102                           ; 
   103                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   104                           ;        conditions and the following disclaimer.
   105                           ; 
   106                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   107                           ;        of conditions and the following disclaimer in the documentation and/or other
   108                           ;        materials provided with the distribution.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC18F47K40 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126  0000                     
   127                           	psect	idataCOMRAM
   128  002A60                     __pidataCOMRAM:
   129                           	opt stack 0
   130                           
   131                           ;initializer for _hx_txPacketFlag
   132  002A60  01                 	db	1
   133                           
   134                           	psect	nvCOMRAM
   135  00003C                     __pnvCOMRAM:
   136                           	opt stack 0
   137  00003C                     _timer0ReloadVal16bit:
   138                           	opt stack 0
   139  00003C                     	ds	2
   140  00003E                     _hx_state:
   141                           	opt stack 0
   142  00003E                     	ds	1
   143                           
   144                           	psect	nvBANK0
   145  0000FC                     __pnvBANK0:
   146                           	opt stack 0
   147  0000FC                     _TMR0_InterruptHandler:
   148                           	opt stack 0
   149  0000FC                     	ds	3
   150  0000FF                     _eusart1TxBufferRemaining:
   151                           	opt stack 0
   152  0000FF                     	ds	1
   153  0000                     _SSP1DATPPSbits	set	3768
   154  0000                     _SSP1CLKPPSbits	set	3767
   155  0000                     _RX1PPSbits	set	3765
   156  0000                     _RC2PPS	set	3833
   157  0000                     _RC1PPS	set	3832
   158  0000                     _RB1PPS	set	3824
   159  0000                     _PPSLOCKbits	set	3744
   160  0000                     _PPSLOCK	set	3744
   161  0000                     _OSCTUNE	set	3805
   162  0000                     _OSCFRQ	set	3806
   163  0000                     _OSCEN	set	3804
   164  0000                     _OSCCON3	set	3802
   165  0000                     _OSCCON1	set	3800
   166  0000                     _PIR0bits	set	3786
   167  0000                     _PIE0bits	set	3778
   168  0000                     _PIE3bits	set	3781
   169  0000                     _PIR3bits	set	3789
   170  0000                     _PIR7bits	set	3793
   171  0000                     _ODCOND	set	3876
   172  0000                     _ODCONC	set	3871
   173  0000                     _ODCONB	set	3863
   174  0000                     _ODCONA	set	3855
   175  0000                     _ODCONE	set	3884
   176  0000                     _WPUC	set	3872
   177  0000                     _WPUA	set	3856
   178  0000                     _WPUB	set	3864
   179  0000                     _WPUE	set	3885
   180  0000                     _WPUD	set	3877
   181  0000                     _ANSELA	set	3857
   182  0000                     _ANSELE	set	3886
   183  0000                     _ANSELD	set	3878
   184  0000                     _ANSELB	set	3865
   185  0000                     _ANSELC	set	3873
   186  0000                     _T0CON0bits	set	4053
   187  0000                     _TMR0L	set	4051
   188  0000                     _TMR0H	set	4052
   189  0000                     _T0CON1	set	4054
   190  0000                     _T0CON0	set	4053
   191  0000                     _TRISD	set	3979
   192  0000                     _TRISC	set	3978
   193  0000                     _TRISB	set	3977
   194  0000                     _TRISA	set	3976
   195  0000                     _TRISE	set	3980
   196  0000                     _LATC	set	3973
   197  0000                     _LATB	set	3972
   198  0000                     _LATD	set	3974
   199  0000                     _LATE	set	3975
   200  0000                     _RC1REG	set	3993
   201  0000                     _RC1STAbits	set	3997
   202  0000                     _TX1REG	set	3994
   203  0000                     _SP1BRGH	set	3996
   204  0000                     _SP1BRGL	set	3995
   205  0000                     _TX1STA	set	3998
   206  0000                     _RC1STA	set	3997
   207  0000                     _BAUD1CON	set	3999
   208  0000                     _SSP1BUF	set	3986
   209  0000                     _SSP1CON2bits	set	3991
   210  0000                     _SSP1CON1bits	set	3990
   211  0000                     _SSP1ADD	set	3987
   212  0000                     _SSP1CON3	set	3992
   213  0000                     _SSP1CON1	set	3990
   214  0000                     _SSP1STAT	set	3989
   215  0000                     _PORTA	set	3981
   216  0000                     _LATAbits	set	3971
   217  0000                     _PORTAbits	set	3981
   218  0000                     _LATA	set	3971
   219  0000                     _NVMCON2	set	3970
   220  0000                     _NVMCON1bits	set	3969
   221  0000                     _NVMDAT	set	3968
   222  0000                     _NVMADRH	set	3967
   223  0000                     _NVMADRL	set	3966
   224  0000                     _INTCONbits	set	4082
   225  0000                     _GIE	set	32663
   226                           
   227                           ; #config settings
   228  0000                     
   229                           	psect	cinit
   230  00268A                     __pcinit:
   231                           	opt stack 0
   232  00268A                     start_initialization:
   233                           	opt stack 0
   234  00268A                     __initialization:
   235                           	opt stack 0
   236                           
   237                           ; Initialize objects allocated to COMRAM (1 bytes)
   238                           ; load TBLPTR registers with __pidataCOMRAM
   239  00268A  0E60               	movlw	low __pidataCOMRAM
   240  00268C  6EF6               	movwf	tblptrl,c
   241  00268E  0E2A               	movlw	high __pidataCOMRAM
   242  002690  6EF7               	movwf	tblptrh,c
   243  002692  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   244  002694  6EF8               	movwf	tblptru,c
   245  002696  0009               	tblrd		*+	;fetch initializer
   246  002698  CFF5 F03F          	movff	tablat,__pdataCOMRAM
   247                           
   248                           ; Clear objects allocated to BANK2 (224 bytes)
   249  00269C  EE02  F000         	lfsr	0,__pbssBANK2
   250  0026A0  0EE0               	movlw	224
   251  0026A2                     clear_0:
   252  0026A2  6AEE               	clrf	postinc0,c
   253  0026A4  06E8               	decf	wreg,f,c
   254  0026A6  E1FD               	bnz	clear_0
   255                           
   256                           ; Clear objects allocated to BANK0 (94 bytes)
   257  0026A8  EE00  F060         	lfsr	0,__pbssBANK0
   258  0026AC  0E5E               	movlw	94
   259  0026AE                     clear_1:
   260  0026AE  6AEE               	clrf	postinc0,c
   261  0026B0  06E8               	decf	wreg,f,c
   262  0026B2  E1FD               	bnz	clear_1
   263                           
   264                           ; Clear objects allocated to COMRAM (27 bytes)
   265  0026B4  EE00  F021         	lfsr	0,__pbssCOMRAM
   266  0026B8  0E1B               	movlw	27
   267  0026BA                     clear_2:
   268  0026BA  6AEE               	clrf	postinc0,c
   269  0026BC  06E8               	decf	wreg,f,c
   270  0026BE  E1FD               	bnz	clear_2
   271  0026C0                     end_of_initialization:
   272                           	opt stack 0
   273  0026C0                     __end_of__initialization:
   274                           	opt stack 0
   275  0026C0  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   276  0026C2  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   277  0026C4  0100               	movlb	0
   278  0026C6  EF97  F00F         	goto	_main	;jump to C main() function
   279                           tblptru	equ	0xFF8
   280                           tblptrh	equ	0xFF7
   281                           tblptrl	equ	0xFF6
   282                           tablat	equ	0xFF5
   283                           postinc0	equ	0xFEE
   284                           wreg	equ	0xFE8
   285                           
   286                           	psect	bssCOMRAM
   287  000021                     __pbssCOMRAM:
   288                           	opt stack 0
   289  000021                     _p_i2c1_current:
   290                           	opt stack 0
   291  000021                     	ds	2
   292  000023                     _p_i2c1_trb_current:
   293                           	opt stack 0
   294  000023                     	ds	2
   295  000025                     _eeprom_currAddr:
   296                           	opt stack 0
   297  000025                     	ds	2
   298  000027                     _eusart1TxTail:
   299                           	opt stack 0
   300  000027                     	ds	1
   301  000028                     _eusart1TxHead:
   302                           	opt stack 0
   303  000028                     	ds	1
   304  000029                     I2C1_ISR@i2c_10bit_address_restart:
   305                           	opt stack 0
   306  000029                     	ds	1
   307  00002A                     I2C1_ISR@i2c_bytes_left:
   308                           	opt stack 0
   309  00002A                     	ds	1
   310  00002B                     _i2c1_trb_count:
   311                           	opt stack 0
   312  00002B                     	ds	1
   313  00002C                     _i2c1_state:
   314                           	opt stack 0
   315  00002C                     	ds	1
   316  00002D                     hxISRHandle@rxHxPktFlag:
   317                           	opt stack 0
   318  00002D                     	ds	1
   319  00002E                     hxISRHandle@pktSize:
   320                           	opt stack 0
   321  00002E                     	ds	1
   322  00002F                     hxISRHandle@rxHxCmdFlag:
   323                           	opt stack 0
   324  00002F                     	ds	1
   325  000030                     hxISRHandle@rxPktSizeFlag:
   326                           	opt stack 0
   327  000030                     	ds	1
   328  000031                     hxISRHandle@currentByteCounter:
   329                           	opt stack 0
   330  000031                     	ds	1
   331  000032                     _hx_debugVar:
   332                           	opt stack 0
   333  000032                     	ds	1
   334  000033                     _hx_rxFullPktFlag:
   335                           	opt stack 0
   336  000033                     	ds	1
   337  000034                     _hx_pktState:
   338                           	opt stack 0
   339  000034                     	ds	1
   340  000035                     _hx_pcCmd:
   341                           	opt stack 0
   342  000035                     	ds	1
   343  000036                     _hx_checksum:
   344                           	opt stack 0
   345  000036                     	ds	1
   346  000037                     _hx_inDataIndex:
   347                           	opt stack 0
   348  000037                     	ds	1
   349  000038                     _hx_mainDataIndex:
   350                           	opt stack 0
   351  000038                     	ds	1
   352  000039                     _hx_outDataIndex:
   353                           	opt stack 0
   354  000039                     	ds	1
   355  00003A                     I2C1_ISR@i2c_address:
   356                           	opt stack 0
   357  00003A                     	ds	2
   358                           tblptru	equ	0xFF8
   359                           tblptrh	equ	0xFF7
   360                           tblptrl	equ	0xFF6
   361                           tablat	equ	0xFF5
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           
   365                           	psect	dataCOMRAM
   366  00003F                     __pdataCOMRAM:
   367                           	opt stack 0
   368  00003F                     _hx_txPacketFlag:
   369                           	opt stack 0
   370  00003F                     	ds	1
   371                           tblptru	equ	0xFF8
   372                           tblptrh	equ	0xFF7
   373                           tblptrl	equ	0xFF6
   374                           tablat	equ	0xFF5
   375                           postinc0	equ	0xFEE
   376                           wreg	equ	0xFE8
   377                           
   378                           	psect	bssBANK0
   379  000060                     __pbssBANK0:
   380                           	opt stack 0
   381  000060                     _i2c1_object:
   382                           	opt stack 0
   383  000060                     	ds	7
   384  000067                     I2C1_ISR@pi2c_buf_ptr:
   385                           	opt stack 0
   386  000067                     	ds	2
   387  000069                     _eusart1RxCount:
   388                           	opt stack 0
   389  000069                     	ds	1
   390  00006A                     _eusart1RxTail:
   391                           	opt stack 0
   392  00006A                     	ds	1
   393  00006B                     _eusart1RxHead:
   394                           	opt stack 0
   395  00006B                     	ds	1
   396  00006C                     _boronRxPktIndex:
   397                           	opt stack 0
   398  00006C                     	ds	1
   399  00006D                     _boronTxPktIndex:
   400                           	opt stack 0
   401  00006D                     	ds	1
   402  00006E                     _hx_abort:
   403                           	opt stack 0
   404  00006E                     	ds	1
   405  00006F                     _hx_rxOverflowFlag:
   406                           	opt stack 0
   407  00006F                     	ds	1
   408  000070                     _hx_startMain:
   409                           	opt stack 0
   410  000070                     	ds	1
   411  000071                     _hx_pktCmd:
   412                           	opt stack 0
   413  000071                     	ds	1
   414  000072                     _hx_mainData:
   415                           	opt stack 0
   416  000072                     	ds	61
   417  0000AF                     I2C1_MasterRead@trBlock:
   418                           	opt stack 0
   419  0000AF                     	ds	5
   420  0000B4                     I2C1_MasterWrite@trBlock:
   421                           	opt stack 0
   422  0000B4                     	ds	5
   423  0000B9                     _i2c1_tr_queue:
   424                           	opt stack 0
   425  0000B9                     	ds	5
   426                           tblptru	equ	0xFF8
   427                           tblptrh	equ	0xFF7
   428                           tblptrl	equ	0xFF6
   429                           tablat	equ	0xFF5
   430                           postinc0	equ	0xFEE
   431                           wreg	equ	0xFE8
   432                           
   433                           	psect	bssBANK2
   434  000200                     __pbssBANK2:
   435                           	opt stack 0
   436  000200                     _eusart1TxBuffer:
   437                           	opt stack 0
   438  000200                     	ds	64
   439  000240                     _boronRxPkt:
   440                           	opt stack 0
   441  000240                     	ds	16
   442  000250                     _boronTxPkt:
   443                           	opt stack 0
   444  000250                     	ds	16
   445  000260                     _hx_inData:
   446                           	opt stack 0
   447  000260                     	ds	64
   448  0002A0                     _hx_outData:
   449                           	opt stack 0
   450  0002A0                     	ds	64
   451                           tblptru	equ	0xFF8
   452                           tblptrh	equ	0xFF7
   453                           tblptrl	equ	0xFF6
   454                           tablat	equ	0xFF5
   455                           postinc0	equ	0xFEE
   456                           wreg	equ	0xFE8
   457                           
   458                           	psect	cstackBANK3
   459  000300                     __pcstackBANK3:
   460                           	opt stack 0
   461  000300                     run_ASLBoron@cnfg_arr:
   462                           	opt stack 0
   463                           
   464                           ; 256 bytes @ 0x0
   465  000300                     	ds	256
   466                           tblptru	equ	0xFF8
   467                           tblptrh	equ	0xFF7
   468                           tblptrl	equ	0xFF6
   469                           tablat	equ	0xFF5
   470                           postinc0	equ	0xFEE
   471                           wreg	equ	0xFE8
   472                           
   473                           	psect	cstackBANK1
   474  000100                     __pcstackBANK1:
   475                           	opt stack 0
   476  000100                     ??_run_ASLBoron:
   477  000100                     run_I2C@tx_arr:
   478                           	opt stack 0
   479                           
   480                           ; 256 bytes @ 0x0
   481  000100                     	ds	3
   482  000103                     _run_ASLBoron$863:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x3
   486  000103                     	ds	2
   487  000105                     _run_ASLBoron$864:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x5
   491  000105                     	ds	2
   492  000107                     run_ASLBoron@rpt_run:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x7
   496  000107                     	ds	2
   497  000109                     run_ASLBoron@test_run:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x9
   501  000109                     	ds	1
   502  00010A                     run_ASLBoron@cnfg_run:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0xA
   506  00010A                     	ds	1
   507  00010B                     run_ASLBoron@checksum:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0xB
   511  00010B                     	ds	1
   512  00010C                     run_ASLBoron@calc_checksum:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0xC
   516  00010C                     	ds	1
   517  00010D                     run_ASLBoron@i:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0xD
   521  00010D                     	ds	1
   522  00010E                     run_ASLBoron@cnfg_cnt:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0xE
   526  00010E                     	ds	1
   527  00010F                     run_ASLBoron@mode_run:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0xF
   531  00010F                     	ds	1
   532  000110                     run_ASLBoron@data_index:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x10
   536  000110                     	ds	240
   537                           tblptru	equ	0xFF8
   538                           tblptrh	equ	0xFF7
   539                           tblptrl	equ	0xFF6
   540                           tablat	equ	0xFF5
   541                           postinc0	equ	0xFEE
   542                           wreg	equ	0xFE8
   543                           
   544                           	psect	cstackBANK0
   545  0000BE                     __pcstackBANK0:
   546                           	opt stack 0
   547  0000BE                     hxClearArray@arr:
   548                           	opt stack 0
   549  0000BE                     calcChecksum@data:
   550                           	opt stack 0
   551  0000BE                     hxOddParityCalc@buff:
   552                           	opt stack 0
   553  0000BE                     write_ASLBoron_cstm_cnfg@cnfg_arr:
   554                           	opt stack 0
   555  0000BE                     ASLB_test0@rxBuffer:
   556                           	opt stack 0
   557  0000BE                     ASLB_cnfg0@rxBuffer:
   558                           	opt stack 0
   559  0000BE                     ASLB_cnfg1@rxBuffer:
   560                           	opt stack 0
   561  0000BE                     I2C1_MasterTRBInsert@ptrb_list:
   562                           	opt stack 0
   563  0000BE                     I2C1_MasterReadTRBBuild@ptrb:
   564                           	opt stack 0
   565  0000BE                     I2C1_MasterWriteTRBBuild@ptrb:
   566                           	opt stack 0
   567  0000BE                     TMR0_Write16bitTimer@timerVal:
   568                           	opt stack 0
   569  0000BE                     TMR0_SetInterruptHandler@InterruptHandler:
   570                           	opt stack 0
   571                           
   572                           ; 3 bytes @ 0x0
   573  0000BE                     	ds	2
   574  0000C0                     hxClearArray@size:
   575                           	opt stack 0
   576  0000C0                     calcChecksum@size:
   577                           	opt stack 0
   578  0000C0                     hxOddParityCalc@size:
   579                           	opt stack 0
   580  0000C0                     write_ASLBoron_cnfg@rxBuffer:
   581                           	opt stack 0
   582  0000C0                     write_ASLBoron_cstm_cnfg@cnfg_arr_size:
   583                           	opt stack 0
   584  0000C0                     I2C1_MasterTRBInsert@pflag:
   585                           	opt stack 0
   586  0000C0                     I2C1_MasterReadTRBBuild@pdata:
   587                           	opt stack 0
   588  0000C0                     I2C1_MasterWriteTRBBuild@pdata:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x2
   592  0000C0                     	ds	1
   593  0000C1                     ??_TMR0_Initialize:
   594  0000C1                     ??_hxHandleTxUART:
   595  0000C1                     calcChecksum@i:
   596                           	opt stack 0
   597  0000C1                     hxOddParityCalc@i:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x3
   601  0000C1                     	ds	1
   602  0000C2                     calcChecksum@temp_checksum:
   603                           	opt stack 0
   604  0000C2                     hxOddParityCalc@j:
   605                           	opt stack 0
   606  0000C2                     I2C1_MasterTRBInsert@count:
   607                           	opt stack 0
   608  0000C2                     I2C1_MasterReadTRBBuild@length:
   609                           	opt stack 0
   610  0000C2                     I2C1_MasterWriteTRBBuild@length:
   611                           	opt stack 0
   612  0000C2                     write_ASLBoron_cstm_cnfg@rxBuffer:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x4
   616  0000C2                     	ds	1
   617  0000C3                     hxOddParityCalc@parity:
   618                           	opt stack 0
   619  0000C3                     I2C1_MasterReadTRBBuild@address:
   620                           	opt stack 0
   621  0000C3                     I2C1_MasterWriteTRBBuild@address:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x5
   625  0000C3                     	ds	1
   626  0000C4                     hxOddParityCalc@temp:
   627                           	opt stack 0
   628  0000C4                     hxHandleTxUART@i:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x6
   632  0000C4                     	ds	1
   633  0000C5                     ??_I2C1_MasterWriteTRBBuild:
   634  0000C5                     ??_I2C1_MasterReadTRBBuild:
   635  0000C5                     hxSPPCarbonReadReg_test@numRX:
   636                           	opt stack 0
   637  0000C5                     hxSPPCarbonCheckBusy_test@numRX:
   638                           	opt stack 0
   639  0000C5                     hxSPPCarbonWriteReg_test@txBuffer:
   640                           	opt stack 0
   641  0000C5                     hxSPPCarbonProgram_test@txBuffer:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x7
   645  0000C5                     	ds	1
   646  0000C6                     hxSPPCarbonReadReg_test@txBuffer:
   647                           	opt stack 0
   648  0000C6                     hxSPPCarbonCheckBusy_test@txBuffer:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0x8
   652  0000C6                     	ds	1
   653  0000C7                     hxSPPCarbonWriteReg_test@numTX:
   654                           	opt stack 0
   655  0000C7                     hxSPPCarbonProgram_test@rxBuffer:
   656                           	opt stack 0
   657  0000C7                     I2C1_MasterWrite@pdata:
   658                           	opt stack 0
   659  0000C7                     I2C1_MasterRead@pdata:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x9
   663  0000C7                     	ds	1
   664  0000C8                     hxSPPCarbonWriteReg_test@tempHxState:
   665                           	opt stack 0
   666  0000C8                     hxSPPCarbonReadReg_test@rxBuffer:
   667                           	opt stack 0
   668  0000C8                     hxSPPCarbonCheckBusy_test@rxBuffer:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0xA
   672  0000C8                     	ds	1
   673  0000C9                     hxSPPCarbonWriteReg_test@oddParityCalc:
   674                           	opt stack 0
   675  0000C9                     hxSPPCarbonProgram_test@numTX:
   676                           	opt stack 0
   677  0000C9                     I2C1_MasterWrite@length:
   678                           	opt stack 0
   679  0000C9                     I2C1_MasterRead@length:
   680                           	opt stack 0
   681                           
   682                           ; 1 bytes @ 0xB
   683  0000C9                     	ds	1
   684  0000CA                     ??_hxSPPCarbonCheckBusy_test:
   685  0000CA                     hxSPPCarbonReadReg_test@portAVal:
   686                           	opt stack 0
   687  0000CA                     hxSPPCarbonWriteReg_test@j:
   688                           	opt stack 0
   689  0000CA                     hxSPPCarbonProgram_test@oddParityCalc:
   690                           	opt stack 0
   691  0000CA                     I2C1_MasterWrite@address:
   692                           	opt stack 0
   693  0000CA                     I2C1_MasterRead@address:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0xC
   697  0000CA                     	ds	1
   698  0000CB                     hxSPPCarbonReadReg_test@numTX:
   699                           	opt stack 0
   700  0000CB                     hxSPPCarbonWriteReg_test@i:
   701                           	opt stack 0
   702  0000CB                     hxSPPCarbonProgram_test@j:
   703                           	opt stack 0
   704                           
   705                           ; 1 bytes @ 0xD
   706  0000CB                     	ds	1
   707  0000CC                     hxSPPCarbonWriteReg_test@j_746:
   708                           	opt stack 0
   709  0000CC                     hxSPPCarbonProgram_test@i:
   710                           	opt stack 0
   711  0000CC                     hxSPPCarbonCheckBusy_test@numTX:
   712                           	opt stack 0
   713  0000CC                     hxSPPCarbonReadReg_test@readbackTimer:
   714                           	opt stack 0
   715  0000CC                     I2C1_MasterWrite@pflag:
   716                           	opt stack 0
   717  0000CC                     I2C1_MasterRead@pflag:
   718                           	opt stack 0
   719                           
   720                           ; 2 bytes @ 0xE
   721  0000CC                     	ds	1
   722  0000CD                     hxSPPCarbonWriteReg_test@tempByte:
   723                           	opt stack 0
   724  0000CD                     hxSPPCarbonProgram_test@j_755:
   725                           	opt stack 0
   726  0000CD                     hxSPPCarbonCheckBusy_test@readbackTimer:
   727                           	opt stack 0
   728                           
   729                           ; 2 bytes @ 0xF
   730  0000CD                     	ds	1
   731  0000CE                     hxSPPCarbonReadReg_test@oddParityCalc:
   732                           	opt stack 0
   733  0000CE                     hxSPPCarbonProgram_test@tempByte:
   734                           	opt stack 0
   735  0000CE                     writeI2C@txData:
   736                           	opt stack 0
   737  0000CE                     readI2C@rxData:
   738                           	opt stack 0
   739  0000CE                     hxSPPCarbonWrite_test@txBuffer:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x10
   743  0000CE                     	ds	1
   744  0000CF                     hxSPPCarbonReadReg_test@j:
   745                           	opt stack 0
   746  0000CF                     hxSPPCarbonCheckBusy_test@oddParityCalc:
   747                           	opt stack 0
   748                           
   749                           ; 1 bytes @ 0x11
   750  0000CF                     	ds	1
   751  0000D0                     writeI2C@size:
   752                           	opt stack 0
   753  0000D0                     readI2C@numOfRx:
   754                           	opt stack 0
   755  0000D0                     hxSPPCarbonReadReg_test@i:
   756                           	opt stack 0
   757  0000D0                     hxSPPCarbonCheckBusy_test@j:
   758                           	opt stack 0
   759  0000D0                     hxSPPCarbonWrite_test@rxBuffer:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x12
   763  0000D0                     	ds	1
   764  0000D1                     hxSPPCarbonReadReg_test@j_735:
   765                           	opt stack 0
   766  0000D1                     hxSPPCarbonCheckBusy_test@i:
   767                           	opt stack 0
   768  0000D1                     writeI2C@slaveAddr:
   769                           	opt stack 0
   770  0000D1                     readI2C@slaveAddr:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0x13
   774  0000D1                     	ds	1
   775  0000D2                     hxSPPCarbonWrite_test@numTX:
   776                           	opt stack 0
   777  0000D2                     hxSPPCarbonReadReg_test@i_736:
   778                           	opt stack 0
   779  0000D2                     hxSPPCarbonCheckBusy_test@j_769:
   780                           	opt stack 0
   781                           
   782                           ; 1 bytes @ 0x14
   783  0000D2                     	ds	1
   784  0000D3                     hxSPPCarbonWrite_test@returnValue:
   785                           	opt stack 0
   786  0000D3                     hxSPPCarbonReadReg_test@j_737:
   787                           	opt stack 0
   788  0000D3                     hxSPPCarbonCheckBusy_test@i_770:
   789                           	opt stack 0
   790  0000D3                     writeI2C@timeOut:
   791                           	opt stack 0
   792  0000D3                     readI2C@timeOut:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x15
   796  0000D3                     	ds	1
   797  0000D4                     hxSPPCarbonReadReg_test@bitVal:
   798                           	opt stack 0
   799  0000D4                     hxSPPCarbonCheckBusy_test@j_771:
   800                           	opt stack 0
   801                           
   802                           ; 1 bytes @ 0x16
   803  0000D4                     	ds	1
   804  0000D5                     writeI2C@status:
   805                           	opt stack 0
   806  0000D5                     readI2C@status:
   807                           	opt stack 0
   808  0000D5                     hxSPPCarbonReadReg_test@tempHxState:
   809                           	opt stack 0
   810  0000D5                     hxSPPCarbonCheckBusy_test@bitVal:
   811                           	opt stack 0
   812                           
   813                           ; 1 bytes @ 0x17
   814  0000D5                     	ds	1
   815  0000D6                     hxSPPCarbonReadReg_test@readbackCommState:
   816                           	opt stack 0
   817  0000D6                     hxSPPCarbonCheckBusy_test@portAVal:
   818                           	opt stack 0
   819  0000D6                     ASLB_test1@rxBuffer:
   820                           	opt stack 0
   821  0000D6                     ARDUINO_test_debug@rxBuffer:
   822                           	opt stack 0
   823  0000D6                     run_I2C@hx_inData:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0x18
   827  0000D6                     	ds	1
   828  0000D7                     hxSPPCarbonReadReg_test@tempByte:
   829                           	opt stack 0
   830  0000D7                     hxSPPCarbonCheckBusy_test@readbackCommState:
   831                           	opt stack 0
   832                           
   833                           ; 1 bytes @ 0x19
   834  0000D7                     	ds	1
   835  0000D8                     ??_ARDUINO_test_debug:
   836  0000D8                     hxSPPCarbonRead_test@numRX:
   837                           	opt stack 0
   838  0000D8                     hxSPPCarbonCheckBusy_test@tempByte:
   839                           	opt stack 0
   840  0000D8                     run_I2C@size:
   841                           	opt stack 0
   842  0000D8                     hxSPPCarbonWriteAndVerity_test@txBuffer:
   843                           	opt stack 0
   844  0000D8                     ASLB_test1@ramReadback:
   845                           	opt stack 0
   846                           
   847                           ; 4 bytes @ 0x1A
   848  0000D8                     	ds	1
   849  0000D9                     ??_run_I2C:
   850  0000D9                     hxSPPCarbonRead_test@txBuffer:
   851                           	opt stack 0
   852                           
   853                           ; 2 bytes @ 0x1B
   854  0000D9                     	ds	1
   855  0000DA                     hxSPPCarbonWriteAndVerity_test@rxBuffer:
   856                           	opt stack 0
   857  0000DA                     ARDUINO_test_debug@ardDebugVal:
   858                           	opt stack 0
   859                           
   860                           ; 2 bytes @ 0x1C
   861  0000DA                     	ds	1
   862  0000DB                     hxSPPCarbonRead_test@rxBuffer:
   863                           	opt stack 0
   864                           
   865                           ; 2 bytes @ 0x1D
   866  0000DB                     	ds	1
   867  0000DC                     ASLB_test1@ramData:
   868                           	opt stack 0
   869  0000DC                     run_I2C@debugArr:
   870                           	opt stack 0
   871                           
   872                           ; 2 bytes @ 0x1E
   873  0000DC                     	ds	1
   874  0000DD                     hxSPPCarbonRead_test@numTX:
   875                           	opt stack 0
   876  0000DD                     ASLB_test1@ramWrMsg:
   877                           	opt stack 0
   878                           
   879                           ; 6 bytes @ 0x1F
   880  0000DD                     	ds	1
   881  0000DE                     hxSPPCarbonWriteAndVerity_test@returnValue:
   882                           	opt stack 0
   883  0000DE                     hxSPPCarbonRead_test@returnValue:
   884                           	opt stack 0
   885  0000DE                     run_I2C@i:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x20
   889  0000DE                     	ds	1
   890  0000DF                     hxSPPCarbonWriteAndVerity_test@numTX:
   891                           	opt stack 0
   892                           
   893                           ; 1 bytes @ 0x21
   894  0000DF                     	ds	1
   895  0000E0                     hxSPPCarbonWriteAndVerity_test@i:
   896                           	opt stack 0
   897  0000E0                     run_I2C@checksum:
   898                           	opt stack 0
   899                           
   900                           ; 1 bytes @ 0x22
   901  0000E0                     	ds	1
   902  0000E1                     hxSPPCarbonWriteAndVerity_test@tempValue:
   903                           	opt stack 0
   904  0000E1                     run_I2C@calc_checksum:
   905                           	opt stack 0
   906                           
   907                           ; 1 bytes @ 0x23
   908  0000E1                     	ds	1
   909  0000E2                     run_SPPCarbon_test@hx_inData:
   910                           	opt stack 0
   911  0000E2                     run_I2C@slaveAddr:
   912                           	opt stack 0
   913                           
   914                           ; 2 bytes @ 0x24
   915  0000E2                     	ds	1
   916  0000E3                     ASLB_test1@ramRdMsg:
   917                           	opt stack 0
   918                           
   919                           ; 5 bytes @ 0x25
   920  0000E3                     	ds	1
   921  0000E4                     run_SPPCarbon_test@size:
   922                           	opt stack 0
   923  0000E4                     run_I2C@numTx:
   924                           	opt stack 0
   925                           
   926                           ; 1 bytes @ 0x26
   927  0000E4                     	ds	1
   928  0000E5                     run_SPPCarbon_test@returnValue:
   929                           	opt stack 0
   930  0000E5                     run_I2C@numRx:
   931                           	opt stack 0
   932                           
   933                           ; 1 bytes @ 0x27
   934  0000E5                     	ds	1
   935  0000E6                     run_SPPCarbon_test@numRxBytes:
   936                           	opt stack 0
   937  0000E6                     run_I2C@mode:
   938                           	opt stack 0
   939                           
   940                           ; 1 bytes @ 0x28
   941  0000E6                     	ds	1
   942  0000E7                     run_SPPCarbon_test@numTxBytes:
   943                           	opt stack 0
   944  0000E7                     run_I2C@data_index:
   945                           	opt stack 0
   946                           
   947                           ; 2 bytes @ 0x29
   948  0000E7                     	ds	1
   949  0000E8                     ASLB_test1@ramAddrHigh:
   950                           	opt stack 0
   951                           
   952                           ; 1 bytes @ 0x2A
   953  0000E8                     	ds	1
   954  0000E9                     ASLB_test1@ramAddrLow:
   955                           	opt stack 0
   956                           
   957                           ; 1 bytes @ 0x2B
   958  0000E9                     	ds	1
   959  0000EA                     ASLB_test1@wr_status:
   960                           	opt stack 0
   961                           
   962                           ; 1 bytes @ 0x2C
   963  0000EA                     	ds	1
   964  0000EB                     ASLB_test1@rd_status:
   965                           	opt stack 0
   966                           
   967                           ; 1 bytes @ 0x2D
   968  0000EB                     	ds	1
   969  0000EC                     ASLB_test1@rx_index:
   970                           	opt stack 0
   971                           
   972                           ; 1 bytes @ 0x2E
   973  0000EC                     	ds	1
   974  0000ED                     write_ASLBoron_test@run_rpt:
   975                           	opt stack 0
   976                           
   977                           ; 2 bytes @ 0x2F
   978  0000ED                     	ds	2
   979  0000EF                     write_ASLBoron_test@rxBuffer:
   980                           	opt stack 0
   981                           
   982                           ; 2 bytes @ 0x31
   983  0000EF                     	ds	2
   984  0000F1                     ??_write_ASLBoron_test:
   985                           
   986                           ; 1 bytes @ 0x33
   987  0000F1                     	ds	3
   988  0000F4                     write_ASLBoron_test@run_test:
   989                           	opt stack 0
   990                           
   991                           ; 1 bytes @ 0x36
   992  0000F4                     	ds	1
   993  0000F5                     write_ASLBoron_test@i:
   994                           	opt stack 0
   995                           
   996                           ; 2 bytes @ 0x37
   997  0000F5                     	ds	2
   998  0000F7                     write_ASLBoron_test@j:
   999                           	opt stack 0
  1000                           
  1001                           ; 2 bytes @ 0x39
  1002  0000F7                     	ds	2
  1003  0000F9                     run_ASLBoron@hx_inData:
  1004                           	opt stack 0
  1005                           
  1006                           ; 2 bytes @ 0x3B
  1007  0000F9                     	ds	2
  1008  0000FB                     run_ASLBoron@size:
  1009                           	opt stack 0
  1010                           
  1011                           ; 1 bytes @ 0x3D
  1012  0000FB                     	ds	1
  1013                           tblptru	equ	0xFF8
  1014                           tblptrh	equ	0xFF7
  1015                           tblptrl	equ	0xFF6
  1016                           tablat	equ	0xFF5
  1017                           postinc0	equ	0xFEE
  1018                           wreg	equ	0xFE8
  1019                           
  1020                           	psect	cstackCOMRAM
  1021  000001                     __pcstackCOMRAM:
  1022                           	opt stack 0
  1023  000001                     ??_I2C1_Stop:
  1024  000001                     hxCalcChecksum@data:
  1025                           	opt stack 0
  1026  000001                     i2hxClearArray@arr:
  1027                           	opt stack 0
  1028  000001                     i2TMR0_Write16bitTimer@timerVal:
  1029                           	opt stack 0
  1030                           
  1031                           ; 2 bytes @ 0x0
  1032  000001                     	ds	2
  1033  000003                     hxCalcChecksum@size:
  1034                           	opt stack 0
  1035  000003                     I2C1_Stop@completion_code:
  1036                           	opt stack 0
  1037  000003                     i2hxClearArray@size:
  1038                           	opt stack 0
  1039  000003                     hxStartTimer@timerVal:
  1040                           	opt stack 0
  1041                           
  1042                           ; 2 bytes @ 0x2
  1043  000003                     	ds	1
  1044  000004                     ??_I2C1_ISR:
  1045  000004                     hxCalcChecksum@i:
  1046                           	opt stack 0
  1047  000004                     i2hxClearArray@i:
  1048                           	opt stack 0
  1049                           
  1050                           ; 1 bytes @ 0x3
  1051  000004                     	ds	1
  1052  000005                     hxCalcChecksum@temp_checksum:
  1053                           	opt stack 0
  1054                           
  1055                           ; 1 bytes @ 0x4
  1056  000005                     	ds	1
  1057  000006                     ??_hxSetupPacket2:
  1058  000006                     hxSetupPacket1@data:
  1059                           	opt stack 0
  1060                           
  1061                           ; 1 bytes @ 0x5
  1062  000006                     	ds	1
  1063  000007                     ??_hxSetupPacket1:
  1064  000007                     hxSetupPacket2@pc_cmd:
  1065                           	opt stack 0
  1066                           
  1067                           ; 1 bytes @ 0x6
  1068  000007                     	ds	1
  1069  000008                     hxSetupPacket1@pc_cmd:
  1070                           	opt stack 0
  1071  000008                     hxSetupPacket2@i:
  1072                           	opt stack 0
  1073                           
  1074                           ; 1 bytes @ 0x7
  1075  000008                     	ds	1
  1076  000009                     hxCmdFilter@i:
  1077                           	opt stack 0
  1078  000009                     _hxHandleTmr0$263:
  1079                           	opt stack 0
  1080                           
  1081                           ; 2 bytes @ 0x8
  1082  000009                     	ds	1
  1083  00000A                     ??_hxISRHandle:
  1084                           
  1085                           ; 1 bytes @ 0x9
  1086  00000A                     	ds	1
  1087  00000B                     
  1088                           ; 1 bytes @ 0xA
  1089  00000B                     	ds	6
  1090  000011                     hxISRHandle@data:
  1091                           	opt stack 0
  1092                           
  1093                           ; 1 bytes @ 0x10
  1094  000011                     	ds	1
  1095  000012                     ??_INTERRUPT_InterruptManager:
  1096                           
  1097                           ; 1 bytes @ 0x11
  1098  000012                     	ds	14
  1099  000020                     ??_run_SPPCarbon_test:
  1100  000020                     hxClearArray@i:
  1101                           	opt stack 0
  1102  000020                     write_ASLBoron_cnfg@run_cnfg:
  1103                           	opt stack 0
  1104  000020                     write_ASLBoron_cstm_cnfg@rx_index:
  1105                           	opt stack 0
  1106  000020                     ASLB_test0@rx_index:
  1107                           	opt stack 0
  1108  000020                     EUSART1_Write@txData:
  1109                           	opt stack 0
  1110  000020                     PIN_MANAGER_Initialize@state:
  1111                           	opt stack 0
  1112                           
  1113                           ; 1 bytes @ 0x1F
  1114  000020                     	ds	1
  1115  000021                     tblptru	equ	0xFF8
  1116                           tblptrh	equ	0xFF7
  1117                           tblptrl	equ	0xFF6
  1118                           tablat	equ	0xFF5
  1119                           postinc0	equ	0xFEE
  1120                           wreg	equ	0xFE8
  1121                           
  1122                           ; 1 bytes @ 0x20
  1123 ;;
  1124 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1125 ;;
  1126 ;; *************** function _main *****************
  1127 ;; Defined at:
  1128 ;;		line 57 in file "main.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;		None
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;  temp            1    0        unsigned char 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1146 ;;Total ram usage:        0 bytes
  1147 ;; Hardware stack levels required when called:   13
  1148 ;; This function calls:
  1149 ;;		_HX_Initialize
  1150 ;;		_SYSTEM_Initialize
  1151 ;;		_hxHandleTxUART
  1152 ;;		_run_ASLBoron
  1153 ;;		_run_I2C
  1154 ;;		_run_SPPCarbon_test
  1155 ;; This function is called by:
  1156 ;;		Startup code after reset
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text0
  1161  001F2E                     __ptext0:
  1162                           	opt stack 0
  1163  001F2E                     _main:
  1164                           	opt stack 18
  1165                           
  1166                           ;main.c: 59: uint8_t temp;
  1167                           ;main.c: 61: SYSTEM_Initialize();
  1168                           
  1169                           ;incstack = 0
  1170  001F2E  ECB2  F014         	call	_SYSTEM_Initialize	;wreg free
  1171                           
  1172                           ;main.c: 80: (INTCONbits.GIE = 1);
  1173  001F32  8EF2               	bsf	intcon,7,c	;volatile
  1174                           
  1175                           ;main.c: 83: (INTCONbits.PEIE = 1);
  1176  001F34  8CF2               	bsf	intcon,6,c	;volatile
  1177                           
  1178                           ;main.c: 91: HX_Initialize();
  1179  001F36  ECCB  F014         	call	_HX_Initialize	;wreg free
  1180                           
  1181                           ;main.c: 93: LATA = 0x03;
  1182  001F3A  0E03               	movlw	3
  1183  001F3C  6E83               	movwf	3971,c	;volatile
  1184  001F3E                     l8609:
  1185                           
  1186                           ;main.c: 95: {
  1187                           ;main.c: 96: hxHandleTxUART();
  1188  001F3E  EC61  F011         	call	_hxHandleTxUART	;wreg free
  1189                           
  1190                           ;main.c: 97: if (hx_txPacketFlag == 0 && hx_startMain == 1 && hx_abort == 0)
  1191  001F42  503F               	movf	_hx_txPacketFlag,w,c
  1192  001F44  A4D8               	btfss	status,2,c
  1193  001F46  D047               	goto	l1501
  1194  001F48  0100               	movlb	0	; () banked
  1195  001F4A  0570               	decf	_hx_startMain& (0+255),w,b
  1196  001F4C  A4D8               	btfss	status,2,c
  1197  001F4E  D043               	goto	l1501
  1198                           
  1199                           ; BSR set to: 0
  1200  001F50  0100               	movlb	0	; () banked
  1201  001F52  516E               	movf	_hx_abort& (0+255),w,b
  1202  001F54  B4D8               	btfsc	status,2,c
  1203  001F56  D022               	goto	l8627
  1204  001F58  D03E               	goto	l1501
  1205  001F5A                     l8619:
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;main.c: 114: run_I2C(hx_inData, hx_inDataIndex);
  1209  001F5A  0E60               	movlw	low _hx_inData
  1210  001F5C  0100               	movlb	0	; () banked
  1211  001F5E  6FD6               	movwf	run_I2C@hx_inData& (0+255),b
  1212  001F60  0E02               	movlw	high _hx_inData
  1213  001F62  0100               	movlb	0	; () banked
  1214  001F64  6FD7               	movwf	(run_I2C@hx_inData+1)& (0+255),b
  1215  001F66  C037  F0D8         	movff	_hx_inDataIndex,run_I2C@size
  1216  001F6A  ECB2  F006         	call	_run_I2C	;wreg free
  1217                           
  1218                           ;main.c: 123: break;
  1219                           
  1220                           ;main.c: 121: case 0x30:
  1221                           
  1222                           ;main.c: 119: break;
  1223                           
  1224                           ;main.c: 117: case 0x20:
  1225                           
  1226                           ;main.c: 115: break;
  1227  001F6E  D030               	goto	l8629
  1228  001F70                     l8621:
  1229                           
  1230                           ;main.c: 127: run_ASLBoron(hx_inData, hx_inDataIndex);
  1231  001F70  0E60               	movlw	low _hx_inData
  1232  001F72  0100               	movlb	0	; () banked
  1233  001F74  6FF9               	movwf	run_ASLBoron@hx_inData& (0+255),b
  1234  001F76  0E02               	movlw	high _hx_inData
  1235  001F78  0100               	movlb	0	; () banked
  1236  001F7A  6FFA               	movwf	(run_ASLBoron@hx_inData+1)& (0+255),b
  1237  001F7C  C037  F0FB         	movff	_hx_inDataIndex,run_ASLBoron@size
  1238  001F80  EC2C  F008         	call	_run_ASLBoron	;wreg free
  1239                           
  1240                           ;main.c: 128: break;
  1241  001F84  D025               	goto	l8629
  1242  001F86                     l8623:
  1243                           
  1244                           ;main.c: 132: run_SPPCarbon_test(hx_inData, hx_inDataIndex);
  1245  001F86  0E60               	movlw	low _hx_inData
  1246  001F88  0100               	movlb	0	; () banked
  1247  001F8A  6FE2               	movwf	run_SPPCarbon_test@hx_inData& (0+255),b
  1248  001F8C  0E02               	movlw	high _hx_inData
  1249  001F8E  0100               	movlb	0	; () banked
  1250  001F90  6FE3               	movwf	(run_SPPCarbon_test@hx_inData+1)& (0+255),b
  1251  001F92  C037  F0E4         	movff	_hx_inDataIndex,run_SPPCarbon_test@size
  1252  001F96  EC37  F005         	call	_run_SPPCarbon_test	;wreg free
  1253                           
  1254                           ;main.c: 137: }
  1255                           
  1256                           ;main.c: 136: break;
  1257                           
  1258                           ;main.c: 135: default:
  1259                           
  1260                           ;main.c: 133: break;
  1261  001F9A  D01A               	goto	l8629
  1262  001F9C                     l8627:
  1263  001F9C  0100               	movlb	0	; () banked
  1264  001F9E  5171               	movf	_hx_pktCmd& (0+255),w,b
  1265                           
  1266                           ; Switch size 1, requested type "space"
  1267                           ; Number of cases is 8, Range of values is 0 to 240
  1268                           ; switch strategies available:
  1269                           ; Name         Instructions Cycles
  1270                           ; simple_byte           25    13 (average)
  1271                           ;	Chosen strategy is simple_byte
  1272  001FA0  0A00               	xorlw	0	; case 0
  1273  001FA2  B4D8               	btfsc	status,2,c
  1274  001FA4  D015               	goto	l8629
  1275  001FA6  0A01               	xorlw	1	; case 1
  1276  001FA8  B4D8               	btfsc	status,2,c
  1277  001FAA  D012               	goto	l8629
  1278  001FAC  0A03               	xorlw	3	; case 2
  1279  001FAE  B4D8               	btfsc	status,2,c
  1280  001FB0  D00F               	goto	l8629
  1281  001FB2  0A12               	xorlw	18	; case 16
  1282  001FB4  B4D8               	btfsc	status,2,c
  1283  001FB6  D7D1               	goto	l8619
  1284  001FB8  0A30               	xorlw	48	; case 32
  1285  001FBA  B4D8               	btfsc	status,2,c
  1286  001FBC  D009               	goto	l8629
  1287  001FBE  0A10               	xorlw	16	; case 48
  1288  001FC0  B4D8               	btfsc	status,2,c
  1289  001FC2  D006               	goto	l8629
  1290  001FC4  0A01               	xorlw	1	; case 49
  1291  001FC6  B4D8               	btfsc	status,2,c
  1292  001FC8  D7D3               	goto	l8621
  1293  001FCA  0AC1               	xorlw	193	; case 240
  1294  001FCC  B4D8               	btfsc	status,2,c
  1295  001FCE  D7DB               	goto	l8623
  1296  001FD0                     l8629:
  1297                           
  1298                           ;main.c: 140: hx_startMain = 0;
  1299  001FD0  0E00               	movlw	0
  1300  001FD2  0100               	movlb	0	; () banked
  1301  001FD4  6F70               	movwf	_hx_startMain& (0+255),b
  1302  001FD6                     l1501:
  1303                           
  1304                           ;main.c: 141: }
  1305                           ;main.c: 142: hx_abort = 0;
  1306  001FD6  0E00               	movlw	0
  1307  001FD8  0100               	movlb	0	; () banked
  1308  001FDA  6F6E               	movwf	_hx_abort& (0+255),b
  1309                           
  1310                           ; BSR set to: 0
  1311  001FDC  D7B0               	goto	l8609
  1312  001FDE                     __end_of_main:
  1313                           	opt stack 0
  1314                           tblptru	equ	0xFF8
  1315                           tblptrh	equ	0xFF7
  1316                           tblptrl	equ	0xFF6
  1317                           tablat	equ	0xFF5
  1318                           intcon	equ	0xFF2
  1319                           postinc0	equ	0xFEE
  1320                           wreg	equ	0xFE8
  1321                           status	equ	0xFD8
  1322                           
  1323 ;; *************** function _run_SPPCarbon_test *****************
  1324 ;; Defined at:
  1325 ;;		line 3 in file "HX_SPP_CARBON.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  hx_inData       2   36[BANK0 ] PTR unsigned char 
  1328 ;;		 -> hx_inData(64), 
  1329 ;;  size            1   38[BANK0 ] unsigned char 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  numTxBytes      1   41[BANK0 ] unsigned char 
  1332 ;;  numRxBytes      1   40[BANK0 ] unsigned char 
  1333 ;;  returnValue     1   39[BANK0 ] unsigned char 
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1343 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1344 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1345 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1346 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1347 ;;Total ram usage:        7 bytes
  1348 ;; Hardware stack levels used:    1
  1349 ;; Hardware stack levels required when called:   10
  1350 ;; This function calls:
  1351 ;;		_hxSPPCarbonCheckBusy_test
  1352 ;;		_hxSPPCarbonProgram_test
  1353 ;;		_hxSPPCarbonRead_test
  1354 ;;		_hxSPPCarbonWriteAndVerity_test
  1355 ;;		_hxSPPCarbonWriteReg_test
  1356 ;;		_hxSPPCarbonWrite_test
  1357 ;; This function is called by:
  1358 ;;		_main
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text1
  1363  000A6E                     __ptext1:
  1364                           	opt stack 0
  1365  000A6E                     _run_SPPCarbon_test:
  1366                           	opt stack 20
  1367                           
  1368                           ;HX_SPP_CARBON.c: 5: uint8_t numTxBytes;
  1369                           ;HX_SPP_CARBON.c: 6: uint8_t numRxBytes;
  1370                           ;HX_SPP_CARBON.c: 7: uint8_t returnValue;
  1371                           ;HX_SPP_CARBON.c: 9: (INTCONbits.GIE = 0);
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;incstack = 0
  1375  000A6E  9EF2               	bcf	intcon,7,c	;volatile
  1376                           
  1377                           ;HX_SPP_CARBON.c: 10: if (size != 3)
  1378  000A70  0E03               	movlw	3
  1379  000A72  0100               	movlb	0	; () banked
  1380  000A74  19E4               	xorwf	run_SPPCarbon_test@size& (0+255),w,b
  1381  000A76  B4D8               	btfsc	status,2,c
  1382  000A78  D002               	goto	l8105
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;HX_SPP_CARBON.c: 11: {
  1386                           ;HX_SPP_CARBON.c: 12: hx_state = 0x21;
  1387  000A7A  0E21               	movlw	33
  1388  000A7C  D0C2               	goto	L1
  1389  000A7E                     l8105:
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;HX_SPP_CARBON.c: 14: else if((hx_inData[0] & 0xF0) == 0x00)
  1393  000A7E  C0E2  FFD9         	movff	run_SPPCarbon_test@hx_inData,fsr2l
  1394  000A82  C0E3  FFDA         	movff	run_SPPCarbon_test@hx_inData+1,fsr2h
  1395  000A86  50DF               	movf	indf2,w,c
  1396  000A88  6E20               	movwf	??_run_SPPCarbon_test& (0+255),c
  1397  000A8A  0EF0               	movlw	240
  1398  000A8C  1620               	andwf	??_run_SPPCarbon_test,f,c
  1399  000A8E  A4D8               	btfss	status,2,c
  1400  000A90  D014               	goto	l8111
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;HX_SPP_CARBON.c: 15: {
  1404                           ;HX_SPP_CARBON.c: 16: numTxBytes = 3;
  1405  000A92  0E03               	movlw	3
  1406  000A94  0100               	movlb	0	; () banked
  1407  000A96  6FE7               	movwf	run_SPPCarbon_test@numTxBytes& (0+255),b
  1408                           
  1409                           ;HX_SPP_CARBON.c: 17: hx_mainDataIndex = 1;
  1410  000A98  0E01               	movlw	1
  1411  000A9A  6E38               	movwf	_hx_mainDataIndex,c
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;HX_SPP_CARBON.c: 19: hxSPPCarbonWrite_test(numTxBytes, &hx_inData[0], hx_mainData);
  1415  000A9C  C0E2  F0CE         	movff	run_SPPCarbon_test@hx_inData,hxSPPCarbonWrite_test@txBuffer
  1416  000AA0  C0E3  F0CF         	movff	run_SPPCarbon_test@hx_inData+1,hxSPPCarbonWrite_test@txBuffer+1
  1417  000AA4  0E72               	movlw	low _hx_mainData
  1418  000AA6  0100               	movlb	0	; () banked
  1419  000AA8  6FD0               	movwf	hxSPPCarbonWrite_test@rxBuffer& (0+255),b
  1420  000AAA  0E00               	movlw	high _hx_mainData
  1421  000AAC  0100               	movlb	0	; () banked
  1422  000AAE  6FD1               	movwf	(hxSPPCarbonWrite_test@rxBuffer+1)& (0+255),b
  1423  000AB0  0100               	movlb	0	; () banked
  1424  000AB2  51E7               	movf	run_SPPCarbon_test@numTxBytes& (0+255),w,b
  1425  000AB4  ECC4  F013         	call	_hxSPPCarbonWrite_test
  1426                           
  1427                           ;HX_SPP_CARBON.c: 20: }
  1428  000AB8  D153               	goto	l8193
  1429  000ABA                     l8111:
  1430                           
  1431                           ;HX_SPP_CARBON.c: 21: else if((hx_inData[0] & 0xF0) == 0x10)
  1432  000ABA  C0E2  FFD9         	movff	run_SPPCarbon_test@hx_inData,fsr2l
  1433  000ABE  C0E3  FFDA         	movff	run_SPPCarbon_test@hx_inData+1,fsr2h
  1434  000AC2  50DF               	movf	indf2,w,c
  1435  000AC4  0BF0               	andlw	240
  1436  000AC6  0A10               	xorlw	16
  1437  000AC8  A4D8               	btfss	status,2,c
  1438  000ACA  D01A               	goto	l8119
  1439                           
  1440                           ;HX_SPP_CARBON.c: 22: {
  1441                           ;HX_SPP_CARBON.c: 23: numTxBytes = 3;
  1442  000ACC  0E03               	movlw	3
  1443  000ACE  0100               	movlb	0	; () banked
  1444  000AD0  6FE7               	movwf	run_SPPCarbon_test@numTxBytes& (0+255),b
  1445                           
  1446                           ;HX_SPP_CARBON.c: 24: numRxBytes = 2;
  1447  000AD2  0E02               	movlw	2
  1448  000AD4  0100               	movlb	0	; () banked
  1449  000AD6  6FE6               	movwf	run_SPPCarbon_test@numRxBytes& (0+255),b
  1450                           
  1451                           ; BSR set to: 0
  1452                           ;HX_SPP_CARBON.c: 25: hx_mainDataIndex = numRxBytes+1;
  1453  000AD8  0100               	movlb	0	; () banked
  1454  000ADA  29E6               	incf	run_SPPCarbon_test@numRxBytes& (0+255),w,b
  1455  000ADC  6E38               	movwf	_hx_mainDataIndex,c
  1456                           
  1457                           ; BSR set to: 0
  1458                           ;HX_SPP_CARBON.c: 26: hxSPPCarbonRead_test(numTxBytes, numRxBytes, &hx_inData[0], hx_mai
      +                          nData);
  1459  000ADE  C0E6  F0D8         	movff	run_SPPCarbon_test@numRxBytes,hxSPPCarbonRead_test@numRX
  1460  000AE2  C0E2  F0D9         	movff	run_SPPCarbon_test@hx_inData,hxSPPCarbonRead_test@txBuffer
  1461  000AE6  C0E3  F0DA         	movff	run_SPPCarbon_test@hx_inData+1,hxSPPCarbonRead_test@txBuffer+1
  1462  000AEA  0E72               	movlw	low _hx_mainData
  1463  000AEC  0100               	movlb	0	; () banked
  1464  000AEE  6FDB               	movwf	hxSPPCarbonRead_test@rxBuffer& (0+255),b
  1465  000AF0  0E00               	movlw	high _hx_mainData
  1466  000AF2  0100               	movlb	0	; () banked
  1467  000AF4  6FDC               	movwf	(hxSPPCarbonRead_test@rxBuffer+1)& (0+255),b
  1468  000AF6  0100               	movlb	0	; () banked
  1469  000AF8  51E7               	movf	run_SPPCarbon_test@numTxBytes& (0+255),w,b
  1470  000AFA  EC43  F012         	call	_hxSPPCarbonRead_test
  1471                           
  1472                           ;HX_SPP_CARBON.c: 27: }
  1473  000AFE  D130               	goto	l8193
  1474  000B00                     l8119:
  1475                           
  1476                           ;HX_SPP_CARBON.c: 28: else if((hx_inData[0] & 0xF0) == 0x20)
  1477  000B00  C0E2  FFD9         	movff	run_SPPCarbon_test@hx_inData,fsr2l
  1478  000B04  C0E3  FFDA         	movff	run_SPPCarbon_test@hx_inData+1,fsr2h
  1479  000B08  50DF               	movf	indf2,w,c
  1480  000B0A  0BF0               	andlw	240
  1481  000B0C  0A20               	xorlw	32
  1482  000B0E  A4D8               	btfss	status,2,c
  1483  000B10  D014               	goto	l8125
  1484                           
  1485                           ;HX_SPP_CARBON.c: 29: {
  1486                           ;HX_SPP_CARBON.c: 30: numTxBytes = 3;
  1487  000B12  0E03               	movlw	3
  1488  000B14  0100               	movlb	0	; () banked
  1489  000B16  6FE7               	movwf	run_SPPCarbon_test@numTxBytes& (0+255),b
  1490                           
  1491                           ;HX_SPP_CARBON.c: 31: hx_mainDataIndex = 1;
  1492  000B18  0E01               	movlw	1
  1493  000B1A  6E38               	movwf	_hx_mainDataIndex,c
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;HX_SPP_CARBON.c: 32: hxSPPCarbonProgram_test(numTxBytes, &hx_inData[0], hx_mainData);
  1497  000B1C  C0E2  F0C5         	movff	run_SPPCarbon_test@hx_inData,hxSPPCarbonProgram_test@txBuffer
  1498  000B20  C0E3  F0C6         	movff	run_SPPCarbon_test@hx_inData+1,hxSPPCarbonProgram_test@txBuffer+1
  1499  000B24  0E72               	movlw	low _hx_mainData
  1500  000B26  0100               	movlb	0	; () banked
  1501  000B28  6FC7               	movwf	hxSPPCarbonProgram_test@rxBuffer& (0+255),b
  1502  000B2A  0E00               	movlw	high _hx_mainData
  1503  000B2C  0100               	movlb	0	; () banked
  1504  000B2E  6FC8               	movwf	(hxSPPCarbonProgram_test@rxBuffer+1)& (0+255),b
  1505  000B30  0100               	movlb	0	; () banked
  1506  000B32  51E7               	movf	run_SPPCarbon_test@numTxBytes& (0+255),w,b
  1507  000B34  ECDB  F00A         	call	_hxSPPCarbonProgram_test
  1508                           
  1509                           ;HX_SPP_CARBON.c: 33: }
  1510  000B38  D113               	goto	l8193
  1511  000B3A                     l8125:
  1512                           
  1513                           ;HX_SPP_CARBON.c: 34: else if((hx_inData[0] & 0xF0) == 0x30)
  1514  000B3A  C0E2  FFD9         	movff	run_SPPCarbon_test@hx_inData,fsr2l
  1515  000B3E  C0E3  FFDA         	movff	run_SPPCarbon_test@hx_inData+1,fsr2h
  1516  000B42  50DF               	movf	indf2,w,c
  1517  000B44  0BF0               	andlw	240
  1518  000B46  0A30               	xorlw	48
  1519  000B48  A4D8               	btfss	status,2,c
  1520  000B4A  D01A               	goto	l8133
  1521                           
  1522                           ;HX_SPP_CARBON.c: 35: {
  1523                           ;HX_SPP_CARBON.c: 36: numTxBytes = 3;
  1524  000B4C  0E03               	movlw	3
  1525  000B4E  0100               	movlb	0	; () banked
  1526  000B50  6FE7               	movwf	run_SPPCarbon_test@numTxBytes& (0+255),b
  1527                           
  1528                           ;HX_SPP_CARBON.c: 37: numRxBytes = 2;
  1529  000B52  0E02               	movlw	2
  1530  000B54  0100               	movlb	0	; () banked
  1531  000B56  6FE6               	movwf	run_SPPCarbon_test@numRxBytes& (0+255),b
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;HX_SPP_CARBON.c: 38: hx_mainDataIndex = numRxBytes+1;
  1535  000B58  0100               	movlb	0	; () banked
  1536  000B5A  29E6               	incf	run_SPPCarbon_test@numRxBytes& (0+255),w,b
  1537  000B5C  6E38               	movwf	_hx_mainDataIndex,c
  1538                           
  1539                           ; BSR set to: 0
  1540                           ;HX_SPP_CARBON.c: 39: hxSPPCarbonRead_test(numTxBytes, numRxBytes, &hx_inData[0], hx_mai
      +                          nData);
  1541  000B5E  C0E6  F0D8         	movff	run_SPPCarbon_test@numRxBytes,hxSPPCarbonRead_test@numRX
  1542  000B62  C0E2  F0D9         	movff	run_SPPCarbon_test@hx_inData,hxSPPCarbonRead_test@txBuffer
  1543  000B66  C0E3  F0DA         	movff	run_SPPCarbon_test@hx_inData+1,hxSPPCarbonRead_test@txBuffer+1
  1544  000B6A  0E72               	movlw	low _hx_mainData
  1545  000B6C  0100               	movlb	0	; () banked
  1546  000B6E  6FDB               	movwf	hxSPPCarbonRead_test@rxBuffer& (0+255),b
  1547  000B70  0E00               	movlw	high _hx_mainData
  1548  000B72  0100               	movlb	0	; () banked
  1549  000B74  6FDC               	movwf	(hxSPPCarbonRead_test@rxBuffer+1)& (0+255),b
  1550  000B76  0100               	movlb	0	; () banked
  1551  000B78  51E7               	movf	run_SPPCarbon_test@numTxBytes& (0+255),w,b
  1552  000B7A  EC43  F012         	call	_hxSPPCarbonRead_test
  1553                           
  1554                           ;HX_SPP_CARBON.c: 40: }
  1555  000B7E  D0F0               	goto	l8193
  1556  000B80                     l8133:
  1557                           
  1558                           ;HX_SPP_CARBON.c: 41: else if((hx_inData[0] & 0xF0) == 0x40)
  1559  000B80  C0E2  FFD9         	movff	run_SPPCarbon_test@hx_inData,fsr2l
  1560  000B84  C0E3  FFDA         	movff	run_SPPCarbon_test@hx_inData+1,fsr2h
  1561  000B88  50DF               	movf	indf2,w,c
  1562  000B8A  0BF0               	andlw	240
  1563  000B8C  0A40               	xorlw	64
  1564  000B8E  A4D8               	btfss	status,2,c
  1565  000B90  D01A               	goto	l8141
  1566                           
  1567                           ;HX_SPP_CARBON.c: 42: {
  1568                           ;HX_SPP_CARBON.c: 43: numTxBytes = 3;
  1569  000B92  0E03               	movlw	3
  1570  000B94  0100               	movlb	0	; () banked
  1571  000B96  6FE7               	movwf	run_SPPCarbon_test@numTxBytes& (0+255),b
  1572                           
  1573                           ;HX_SPP_CARBON.c: 44: numRxBytes = 2;
  1574  000B98  0E02               	movlw	2
  1575  000B9A  0100               	movlb	0	; () banked
  1576  000B9C  6FE6               	movwf	run_SPPCarbon_test@numRxBytes& (0+255),b
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;HX_SPP_CARBON.c: 45: hx_mainDataIndex = numRxBytes+1;
  1580  000B9E  0100               	movlb	0	; () banked
  1581  000BA0  29E6               	incf	run_SPPCarbon_test@numRxBytes& (0+255),w,b
  1582  000BA2  6E38               	movwf	_hx_mainDataIndex,c
  1583                           
  1584                           ; BSR set to: 0
  1585                           ;HX_SPP_CARBON.c: 46: hxSPPCarbonRead_test(numTxBytes, numRxBytes, &hx_inData[0], hx_mai
      +                          nData);
  1586  000BA4  C0E6  F0D8         	movff	run_SPPCarbon_test@numRxBytes,hxSPPCarbonRead_test@numRX
  1587  000BA8  C0E2  F0D9         	movff	run_SPPCarbon_test@hx_inData,hxSPPCarbonRead_test@txBuffer
  1588  000BAC  C0E3  F0DA         	movff	run_SPPCarbon_test@hx_inData+1,hxSPPCarbonRead_test@txBuffer+1
  1589  000BB0  0E72               	movlw	low _hx_mainData
  1590  000BB2  0100               	movlb	0	; () banked
  1591  000BB4  6FDB               	movwf	hxSPPCarbonRead_test@rxBuffer& (0+255),b
  1592  000BB6  0E00               	movlw	high _hx_mainData
  1593  000BB8  0100               	movlb	0	; () banked
  1594  000BBA  6FDC               	movwf	(hxSPPCarbonRead_test@rxBuffer+1)& (0+255),b
  1595  000BBC  0100               	movlb	0	; () banked
  1596  000BBE  51E7               	movf	run_SPPCarbon_test@numTxBytes& (0+255),w,b
  1597  000BC0  EC43  F012         	call	_hxSPPCarbonRead_test
  1598                           
  1599                           ;HX_SPP_CARBON.c: 47: }
  1600  000BC4  D0CD               	goto	l8193
  1601  000BC6                     l8141:
  1602                           
  1603                           ;HX_SPP_CARBON.c: 48: else if((hx_inData[0] & 0xF0) == 0x50)
  1604  000BC6  C0E2  FFD9         	movff	run_SPPCarbon_test@hx_inData,fsr2l
  1605  000BCA  C0E3  FFDA         	movff	run_SPPCarbon_test@hx_inData+1,fsr2h
  1606  000BCE  50DF               	movf	indf2,w,c
  1607  000BD0  0BF0               	andlw	240
  1608  000BD2  0A50               	xorlw	80
  1609  000BD4  A4D8               	btfss	status,2,c
  1610  000BD6  D01D               	goto	l8153
  1611                           
  1612                           ;HX_SPP_CARBON.c: 49: {
  1613                           ;HX_SPP_CARBON.c: 50: numTxBytes = 3;
  1614  000BD8  0E03               	movlw	3
  1615  000BDA  0100               	movlb	0	; () banked
  1616  000BDC  6FE7               	movwf	run_SPPCarbon_test@numTxBytes& (0+255),b
  1617                           
  1618                           ;HX_SPP_CARBON.c: 51: hx_mainDataIndex = 1;
  1619  000BDE  0E01               	movlw	1
  1620  000BE0  6E38               	movwf	_hx_mainDataIndex,c
  1621                           
  1622                           ; BSR set to: 0
  1623                           ;HX_SPP_CARBON.c: 52: returnValue = hxSPPCarbonWriteReg_test(numTxBytes, &hx_inData[0]);
  1624  000BE2  C0E2  F0C5         	movff	run_SPPCarbon_test@hx_inData,hxSPPCarbonWriteReg_test@txBuffer
  1625  000BE6  C0E3  F0C6         	movff	run_SPPCarbon_test@hx_inData+1,hxSPPCarbonWriteReg_test@txBuffer+1
  1626  000BEA  0100               	movlb	0	; () banked
  1627  000BEC  51E7               	movf	run_SPPCarbon_test@numTxBytes& (0+255),w,b
  1628  000BEE  ECB8  F00B         	call	_hxSPPCarbonWriteReg_test
  1629  000BF2  0100               	movlb	0	; () banked
  1630  000BF4  6FE5               	movwf	run_SPPCarbon_test@returnValue& (0+255),b
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;HX_SPP_CARBON.c: 53: if (returnValue != 0x10)
  1634  000BF6  0E10               	movlw	16
  1635  000BF8  0100               	movlb	0	; () banked
  1636  000BFA  19E5               	xorwf	run_SPPCarbon_test@returnValue& (0+255),w,b
  1637  000BFC  B4D8               	btfsc	status,2,c
  1638  000BFE  D003               	goto	l8151
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;HX_SPP_CARBON.c: 54: {
  1642                           ;HX_SPP_CARBON.c: 55: hx_state = 0x41;
  1643  000C00  0E41               	movlw	65
  1644  000C02                     L1:
  1645  000C02  6E3E               	movwf	_hx_state,c
  1646                           
  1647                           ;HX_SPP_CARBON.c: 56: }
  1648  000C04  D0AD               	goto	l8193
  1649  000C06                     l8151:
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;HX_SPP_CARBON.c: 57: else
  1653                           ;HX_SPP_CARBON.c: 58: {
  1654                           ;HX_SPP_CARBON.c: 59: hx_state = 0x10;
  1655  000C06  0E10               	movlw	16
  1656  000C08  6E3E               	movwf	_hx_state,c
  1657                           
  1658                           ;HX_SPP_CARBON.c: 60: hx_mainData[0] = 0x10;
  1659  000C0A  0E10               	movlw	16
  1660  000C0C  0100               	movlb	0	; () banked
  1661  000C0E  6F72               	movwf	_hx_mainData& (0+255),b
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;HX_SPP_CARBON.c: 61: }
  1665                           ;HX_SPP_CARBON.c: 62: }
  1666  000C10  D0A7               	goto	l8193
  1667  000C12                     l8153:
  1668                           
  1669                           ;HX_SPP_CARBON.c: 63: else if((hx_inData[0] & 0xF0) == 0x60)
  1670  000C12  C0E2  FFD9         	movff	run_SPPCarbon_test@hx_inData,fsr2l
  1671  000C16  C0E3  FFDA         	movff	run_SPPCarbon_test@hx_inData+1,fsr2h
  1672  000C1A  50DF               	movf	indf2,w,c
  1673  000C1C  0BF0               	andlw	240
  1674  000C1E  0A60               	xorlw	96
  1675  000C20  A4D8               	btfss	status,2,c
  1676  000C22  D01A               	goto	l8161
  1677                           
  1678                           ;HX_SPP_CARBON.c: 64: {
  1679                           ;HX_SPP_CARBON.c: 65: numTxBytes = 3;
  1680  000C24  0E03               	movlw	3
  1681  000C26  0100               	movlb	0	; () banked
  1682  000C28  6FE7               	movwf	run_SPPCarbon_test@numTxBytes& (0+255),b
  1683                           
  1684                           ;HX_SPP_CARBON.c: 66: numRxBytes = 2;
  1685  000C2A  0E02               	movlw	2
  1686  000C2C  0100               	movlb	0	; () banked
  1687  000C2E  6FE6               	movwf	run_SPPCarbon_test@numRxBytes& (0+255),b
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;HX_SPP_CARBON.c: 67: hx_mainDataIndex = numRxBytes+1;
  1691  000C30  0100               	movlb	0	; () banked
  1692  000C32  29E6               	incf	run_SPPCarbon_test@numRxBytes& (0+255),w,b
  1693  000C34  6E38               	movwf	_hx_mainDataIndex,c
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;HX_SPP_CARBON.c: 68: hxSPPCarbonCheckBusy_test(numTxBytes, numRxBytes, &hx_inData[0], h
      +                          x_mainData);
  1697  000C36  C0E6  F0C5         	movff	run_SPPCarbon_test@numRxBytes,hxSPPCarbonCheckBusy_test@numRX
  1698  000C3A  C0E2  F0C6         	movff	run_SPPCarbon_test@hx_inData,hxSPPCarbonCheckBusy_test@txBuffer
  1699  000C3E  C0E3  F0C7         	movff	run_SPPCarbon_test@hx_inData+1,hxSPPCarbonCheckBusy_test@txBuffer+1
  1700  000C42  0E72               	movlw	low _hx_mainData
  1701  000C44  0100               	movlb	0	; () banked
  1702  000C46  6FC8               	movwf	hxSPPCarbonCheckBusy_test@rxBuffer& (0+255),b
  1703  000C48  0E00               	movlw	high _hx_mainData
  1704  000C4A  0100               	movlb	0	; () banked
  1705  000C4C  6FC9               	movwf	(hxSPPCarbonCheckBusy_test@rxBuffer+1)& (0+255),b
  1706  000C4E  0100               	movlb	0	; () banked
  1707  000C50  51E7               	movf	run_SPPCarbon_test@numTxBytes& (0+255),w,b
  1708  000C52  EC74  F000         	call	_hxSPPCarbonCheckBusy_test
  1709                           
  1710                           ;HX_SPP_CARBON.c: 69: }
  1711  000C56  D084               	goto	l8193
  1712  000C58                     l8161:
  1713                           
  1714                           ;HX_SPP_CARBON.c: 72: else if ( (hx_inData[0] & 0xF0) == 0x70)
  1715  000C58  C0E2  FFD9         	movff	run_SPPCarbon_test@hx_inData,fsr2l
  1716  000C5C  C0E3  FFDA         	movff	run_SPPCarbon_test@hx_inData+1,fsr2h
  1717  000C60  50DF               	movf	indf2,w,c
  1718  000C62  0BF0               	andlw	240
  1719  000C64  0A70               	xorlw	112
  1720  000C66  A4D8               	btfss	status,2,c
  1721  000C68  D01A               	goto	l8171
  1722                           
  1723                           ;HX_SPP_CARBON.c: 73: {
  1724                           ;HX_SPP_CARBON.c: 74: numTxBytes = 2;
  1725  000C6A  0E02               	movlw	2
  1726  000C6C  0100               	movlb	0	; () banked
  1727  000C6E  6FE7               	movwf	run_SPPCarbon_test@numTxBytes& (0+255),b
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;HX_SPP_CARBON.c: 76: hx_inData[0] = 0xF0 & 0x00;
  1731  000C70  C0E2  FFD9         	movff	run_SPPCarbon_test@hx_inData,fsr2l
  1732  000C74  C0E3  FFDA         	movff	run_SPPCarbon_test@hx_inData+1,fsr2h
  1733  000C78  0E00               	movlw	0
  1734  000C7A  6EDF               	movwf	indf2,c
  1735                           
  1736                           ; BSR set to: 0
  1737                           ;HX_SPP_CARBON.c: 77: hx_mainDataIndex = 1;
  1738  000C7C  0E01               	movlw	1
  1739  000C7E  6E38               	movwf	_hx_mainDataIndex,c
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;HX_SPP_CARBON.c: 78: hxSPPCarbonWriteAndVerity_test(numTxBytes, &hx_inData[0], hx_mainD
      +                          ata);
  1743  000C80  C0E2  F0D8         	movff	run_SPPCarbon_test@hx_inData,hxSPPCarbonWriteAndVerity_test@txBuffer
  1744  000C84  C0E3  F0D9         	movff	run_SPPCarbon_test@hx_inData+1,hxSPPCarbonWriteAndVerity_test@txBuffer+1
  1745  000C88  0E72               	movlw	low _hx_mainData
  1746  000C8A  0100               	movlb	0	; () banked
  1747  000C8C  6FDA               	movwf	hxSPPCarbonWriteAndVerity_test@rxBuffer& (0+255),b
  1748  000C8E  0E00               	movlw	high _hx_mainData
  1749  000C90  0100               	movlb	0	; () banked
  1750  000C92  6FDB               	movwf	(hxSPPCarbonWriteAndVerity_test@rxBuffer+1)& (0+255),b
  1751  000C94  0100               	movlb	0	; () banked
  1752  000C96  51E7               	movf	run_SPPCarbon_test@numTxBytes& (0+255),w,b
  1753  000C98  ECDD  F00D         	call	_hxSPPCarbonWriteAndVerity_test
  1754                           
  1755                           ;HX_SPP_CARBON.c: 79: }
  1756  000C9C  D061               	goto	l8193
  1757  000C9E                     l8171:
  1758                           
  1759                           ;HX_SPP_CARBON.c: 80: else if ( (hx_inData[0] & 0xF0) == 0x80)
  1760  000C9E  C0E2  FFD9         	movff	run_SPPCarbon_test@hx_inData,fsr2l
  1761  000CA2  C0E3  FFDA         	movff	run_SPPCarbon_test@hx_inData+1,fsr2h
  1762  000CA6  50DF               	movf	indf2,w,c
  1763  000CA8  0BF0               	andlw	240
  1764  000CAA  0A80               	xorlw	128
  1765  000CAC  A4D8               	btfss	status,2,c
  1766  000CAE  D020               	goto	l8181
  1767                           
  1768                           ;HX_SPP_CARBON.c: 81: {
  1769                           ;HX_SPP_CARBON.c: 82: numTxBytes = 3;
  1770  000CB0  0E03               	movlw	3
  1771  000CB2  0100               	movlb	0	; () banked
  1772  000CB4  6FE7               	movwf	run_SPPCarbon_test@numTxBytes& (0+255),b
  1773                           
  1774                           ;HX_SPP_CARBON.c: 83: numRxBytes = 1;
  1775  000CB6  0E01               	movlw	1
  1776  000CB8  0100               	movlb	0	; () banked
  1777  000CBA  6FE6               	movwf	run_SPPCarbon_test@numRxBytes& (0+255),b
  1778                           
  1779                           ; BSR set to: 0
  1780                           ;HX_SPP_CARBON.c: 84: hx_inData[0] = 0xF0 & 0x10;
  1781  000CBC  C0E2  FFD9         	movff	run_SPPCarbon_test@hx_inData,fsr2l
  1782  000CC0  C0E3  FFDA         	movff	run_SPPCarbon_test@hx_inData+1,fsr2h
  1783  000CC4  0E10               	movlw	16
  1784  000CC6  6EDF               	movwf	indf2,c
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;HX_SPP_CARBON.c: 85: hx_mainDataIndex = numRxBytes+1;
  1788  000CC8  0100               	movlb	0	; () banked
  1789  000CCA  29E6               	incf	run_SPPCarbon_test@numRxBytes& (0+255),w,b
  1790  000CCC  6E38               	movwf	_hx_mainDataIndex,c
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;HX_SPP_CARBON.c: 86: hxSPPCarbonRead_test(numTxBytes, numRxBytes, &hx_inData[0], hx_mai
      +                          nData);
  1794  000CCE  C0E6  F0D8         	movff	run_SPPCarbon_test@numRxBytes,hxSPPCarbonRead_test@numRX
  1795  000CD2  C0E2  F0D9         	movff	run_SPPCarbon_test@hx_inData,hxSPPCarbonRead_test@txBuffer
  1796  000CD6  C0E3  F0DA         	movff	run_SPPCarbon_test@hx_inData+1,hxSPPCarbonRead_test@txBuffer+1
  1797  000CDA  0E72               	movlw	low _hx_mainData
  1798  000CDC  0100               	movlb	0	; () banked
  1799  000CDE  6FDB               	movwf	hxSPPCarbonRead_test@rxBuffer& (0+255),b
  1800  000CE0  0E00               	movlw	high _hx_mainData
  1801  000CE2  0100               	movlb	0	; () banked
  1802  000CE4  6FDC               	movwf	(hxSPPCarbonRead_test@rxBuffer+1)& (0+255),b
  1803  000CE6  0100               	movlb	0	; () banked
  1804  000CE8  51E7               	movf	run_SPPCarbon_test@numTxBytes& (0+255),w,b
  1805  000CEA  EC43  F012         	call	_hxSPPCarbonRead_test
  1806                           
  1807                           ;HX_SPP_CARBON.c: 87: }
  1808  000CEE  D038               	goto	l8193
  1809  000CF0                     l8181:
  1810                           
  1811                           ;HX_SPP_CARBON.c: 88: else if ( (hx_inData[0] & 0xF0) == 0x90)
  1812  000CF0  C0E2  FFD9         	movff	run_SPPCarbon_test@hx_inData,fsr2l
  1813  000CF4  C0E3  FFDA         	movff	run_SPPCarbon_test@hx_inData+1,fsr2h
  1814  000CF8  50DF               	movf	indf2,w,c
  1815  000CFA  0BF0               	andlw	240
  1816  000CFC  0A90               	xorlw	144
  1817  000CFE  A4D8               	btfss	status,2,c
  1818  000D00  D01A               	goto	l8189
  1819                           
  1820                           ;HX_SPP_CARBON.c: 89: {
  1821                           ;HX_SPP_CARBON.c: 90: numTxBytes = 3;
  1822  000D02  0E03               	movlw	3
  1823  000D04  0100               	movlb	0	; () banked
  1824  000D06  6FE7               	movwf	run_SPPCarbon_test@numTxBytes& (0+255),b
  1825                           
  1826                           ;HX_SPP_CARBON.c: 91: hx_mainDataIndex = 1;
  1827  000D08  0E01               	movlw	1
  1828  000D0A  6E38               	movwf	_hx_mainDataIndex,c
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;HX_SPP_CARBON.c: 92: hx_inData[0] = 0xF0 & 0x00;
  1832  000D0C  C0E2  FFD9         	movff	run_SPPCarbon_test@hx_inData,fsr2l
  1833  000D10  C0E3  FFDA         	movff	run_SPPCarbon_test@hx_inData+1,fsr2h
  1834  000D14  0E00               	movlw	0
  1835  000D16  6EDF               	movwf	indf2,c
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;HX_SPP_CARBON.c: 93: hxSPPCarbonWriteAndVerity_test(numTxBytes, &hx_inData[0], hx_mainD
      +                          ata);
  1839  000D18  C0E2  F0D8         	movff	run_SPPCarbon_test@hx_inData,hxSPPCarbonWriteAndVerity_test@txBuffer
  1840  000D1C  C0E3  F0D9         	movff	run_SPPCarbon_test@hx_inData+1,hxSPPCarbonWriteAndVerity_test@txBuffer+1
  1841  000D20  0E72               	movlw	low _hx_mainData
  1842  000D22  0100               	movlb	0	; () banked
  1843  000D24  6FDA               	movwf	hxSPPCarbonWriteAndVerity_test@rxBuffer& (0+255),b
  1844  000D26  0E00               	movlw	high _hx_mainData
  1845  000D28  0100               	movlb	0	; () banked
  1846  000D2A  6FDB               	movwf	(hxSPPCarbonWriteAndVerity_test@rxBuffer+1)& (0+255),b
  1847  000D2C  0100               	movlb	0	; () banked
  1848  000D2E  51E7               	movf	run_SPPCarbon_test@numTxBytes& (0+255),w,b
  1849  000D30  ECDD  F00D         	call	_hxSPPCarbonWriteAndVerity_test
  1850                           
  1851                           ;HX_SPP_CARBON.c: 95: }
  1852  000D34  D015               	goto	l8193
  1853  000D36                     l8189:
  1854                           
  1855                           ;HX_SPP_CARBON.c: 97: else
  1856                           ;HX_SPP_CARBON.c: 98: {
  1857                           ;HX_SPP_CARBON.c: 99: hx_state = 0x21;
  1858  000D36  0E21               	movlw	33
  1859  000D38  6E3E               	movwf	_hx_state,c
  1860                           
  1861                           ;HX_SPP_CARBON.c: 103: numTxBytes = 3;
  1862  000D3A  0E03               	movlw	3
  1863  000D3C  0100               	movlb	0	; () banked
  1864  000D3E  6FE7               	movwf	run_SPPCarbon_test@numTxBytes& (0+255),b
  1865                           
  1866                           ;HX_SPP_CARBON.c: 104: hx_mainDataIndex = 1;
  1867  000D40  0E01               	movlw	1
  1868  000D42  6E38               	movwf	_hx_mainDataIndex,c
  1869                           
  1870                           ; BSR set to: 0
  1871                           ;HX_SPP_CARBON.c: 105: hxSPPCarbonWriteAndVerity_test(numTxBytes, &hx_inData[0], hx_main
      +                          Data);
  1872  000D44  C0E2  F0D8         	movff	run_SPPCarbon_test@hx_inData,hxSPPCarbonWriteAndVerity_test@txBuffer
  1873  000D48  C0E3  F0D9         	movff	run_SPPCarbon_test@hx_inData+1,hxSPPCarbonWriteAndVerity_test@txBuffer+1
  1874  000D4C  0E72               	movlw	low _hx_mainData
  1875  000D4E  0100               	movlb	0	; () banked
  1876  000D50  6FDA               	movwf	hxSPPCarbonWriteAndVerity_test@rxBuffer& (0+255),b
  1877  000D52  0E00               	movlw	high _hx_mainData
  1878  000D54  0100               	movlb	0	; () banked
  1879  000D56  6FDB               	movwf	(hxSPPCarbonWriteAndVerity_test@rxBuffer+1)& (0+255),b
  1880  000D58  0100               	movlb	0	; () banked
  1881  000D5A  51E7               	movf	run_SPPCarbon_test@numTxBytes& (0+255),w,b
  1882  000D5C  ECDD  F00D         	call	_hxSPPCarbonWriteAndVerity_test
  1883  000D60                     l8193:
  1884                           
  1885                           ;HX_SPP_CARBON.c: 107: }
  1886                           ;HX_SPP_CARBON.c: 108: (INTCONbits.GIE = 1);
  1887  000D60  8EF2               	bsf	intcon,7,c	;volatile
  1888  000D62  0012               	return		;funcret
  1889  000D64                     __end_of_run_SPPCarbon_test:
  1890                           	opt stack 0
  1891                           tblptru	equ	0xFF8
  1892                           tblptrh	equ	0xFF7
  1893                           tblptrl	equ	0xFF6
  1894                           tablat	equ	0xFF5
  1895                           intcon	equ	0xFF2
  1896                           postinc0	equ	0xFEE
  1897                           wreg	equ	0xFE8
  1898                           indf2	equ	0xFDF
  1899                           fsr2h	equ	0xFDA
  1900                           fsr2l	equ	0xFD9
  1901                           status	equ	0xFD8
  1902                           
  1903 ;; *************** function _hxSPPCarbonWrite_test *****************
  1904 ;; Defined at:
  1905 ;;		line 146 in file "HX_SPP_CARBON.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  numTX           1    wreg     unsigned char 
  1908 ;;  txBuffer        2   16[BANK0 ] PTR unsigned char 
  1909 ;;		 -> hx_inData(64), 
  1910 ;;  rxBuffer        2   18[BANK0 ] PTR unsigned char 
  1911 ;;		 -> hx_mainData(61), 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  numTX           1   20[BANK0 ] unsigned char 
  1914 ;;  returnValue     1   21[BANK0 ] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1924 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1925 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1927 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1928 ;;Total ram usage:        6 bytes
  1929 ;; Hardware stack levels used:    1
  1930 ;; Hardware stack levels required when called:    9
  1931 ;; This function calls:
  1932 ;;		_hxSPPCarbonWriteReg_test
  1933 ;; This function is called by:
  1934 ;;		_run_SPPCarbon_test
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text2
  1939  002788                     __ptext2:
  1940                           	opt stack 0
  1941  002788                     _hxSPPCarbonWrite_test:
  1942                           	opt stack 20
  1943                           
  1944                           ;incstack = 0
  1945                           ;hxSPPCarbonWrite_test@numTX stored from wreg
  1946  002788  0100               	movlb	0	; () banked
  1947  00278A  6FD2               	movwf	hxSPPCarbonWrite_test@numTX& (0+255),b
  1948                           
  1949                           ;HX_SPP_CARBON.c: 148: uint8_t returnValue;
  1950                           ;HX_SPP_CARBON.c: 149: returnValue = hxSPPCarbonWriteReg_test(numTX, txBuffer);
  1951  00278C  C0CE  F0C5         	movff	hxSPPCarbonWrite_test@txBuffer,hxSPPCarbonWriteReg_test@txBuffer
  1952  002790  C0CF  F0C6         	movff	hxSPPCarbonWrite_test@txBuffer+1,hxSPPCarbonWriteReg_test@txBuffer+1
  1953  002794  0100               	movlb	0	; () banked
  1954  002796  51D2               	movf	hxSPPCarbonWrite_test@numTX& (0+255),w,b
  1955  002798  ECB8  F00B         	call	_hxSPPCarbonWriteReg_test
  1956  00279C  0100               	movlb	0	; () banked
  1957  00279E  6FD3               	movwf	hxSPPCarbonWrite_test@returnValue& (0+255),b
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;HX_SPP_CARBON.c: 150: if (returnValue != 0x10)
  1961  0027A0  0E10               	movlw	16
  1962  0027A2  0100               	movlb	0	; () banked
  1963  0027A4  19D3               	xorwf	hxSPPCarbonWrite_test@returnValue& (0+255),w,b
  1964  0027A6  B4D8               	btfsc	status,2,c
  1965  0027A8  D003               	goto	l7601
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;HX_SPP_CARBON.c: 151: {
  1969                           ;HX_SPP_CARBON.c: 152: hx_state = 0x41;
  1970  0027AA  0E41               	movlw	65
  1971  0027AC  6E3E               	movwf	_hx_state,c
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;HX_SPP_CARBON.c: 153: return;
  1975  0027AE  0012               	return	
  1976  0027B0                     l7601:
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;HX_SPP_CARBON.c: 154: }
  1980                           ;HX_SPP_CARBON.c: 156: rxBuffer[0] = 0x10;
  1981  0027B0  C0D0  FFD9         	movff	hxSPPCarbonWrite_test@rxBuffer,fsr2l
  1982  0027B4  C0D1  FFDA         	movff	hxSPPCarbonWrite_test@rxBuffer+1,fsr2h
  1983  0027B8  0E10               	movlw	16
  1984  0027BA  6EDF               	movwf	indf2,c
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;HX_SPP_CARBON.c: 157: hx_state = 0x10;
  1988  0027BC  0E10               	movlw	16
  1989  0027BE  6E3E               	movwf	_hx_state,c
  1990                           
  1991                           ; BSR set to: 0
  1992  0027C0  0012               	return		;funcret
  1993  0027C2                     __end_of_hxSPPCarbonWrite_test:
  1994                           	opt stack 0
  1995                           tblptru	equ	0xFF8
  1996                           tblptrh	equ	0xFF7
  1997                           tblptrl	equ	0xFF6
  1998                           tablat	equ	0xFF5
  1999                           intcon	equ	0xFF2
  2000                           postinc0	equ	0xFEE
  2001                           wreg	equ	0xFE8
  2002                           indf2	equ	0xFDF
  2003                           fsr2h	equ	0xFDA
  2004                           fsr2l	equ	0xFD9
  2005                           status	equ	0xFD8
  2006                           
  2007 ;; *************** function _hxSPPCarbonWriteAndVerity_test *****************
  2008 ;; Defined at:
  2009 ;;		line 112 in file "HX_SPP_CARBON.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  numTX           1    wreg     unsigned char 
  2012 ;;  txBuffer        2   26[BANK0 ] PTR unsigned char 
  2013 ;;		 -> hx_inData(64), 
  2014 ;;  rxBuffer        2   28[BANK0 ] PTR unsigned char 
  2015 ;;		 -> hx_mainData(61), 
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;  numTX           1   33[BANK0 ] unsigned char 
  2018 ;;  i               1   34[BANK0 ] unsigned char 
  2019 ;;  tempValue       1   35[BANK0 ] unsigned char 
  2020 ;;  returnValue     1   32[BANK0 ] unsigned char 
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2030 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2031 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2032 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2033 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2034 ;;Total ram usage:       10 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:    9
  2037 ;; This function calls:
  2038 ;;		_hxSPPCarbonReadReg_test
  2039 ;;		_hxSPPCarbonWriteReg_test
  2040 ;; This function is called by:
  2041 ;;		_run_SPPCarbon_test
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text3
  2046  001BBA                     __ptext3:
  2047                           	opt stack 0
  2048  001BBA                     _hxSPPCarbonWriteAndVerity_test:
  2049                           	opt stack 20
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;incstack = 0
  2053                           ;hxSPPCarbonWriteAndVerity_test@numTX stored from wreg
  2054  001BBA  0100               	movlb	0	; () banked
  2055  001BBC  6FDF               	movwf	hxSPPCarbonWriteAndVerity_test@numTX& (0+255),b
  2056                           
  2057                           ;HX_SPP_CARBON.c: 114: uint8_t returnValue;
  2058                           ;HX_SPP_CARBON.c: 115: uint8_t tempValue;
  2059                           ;HX_SPP_CARBON.c: 116: returnValue = hxSPPCarbonWriteReg_test(numTX, txBuffer);
  2060  001BBE  C0D8  F0C5         	movff	hxSPPCarbonWriteAndVerity_test@txBuffer,hxSPPCarbonWriteReg_test@txBuffer
  2061  001BC2  C0D9  F0C6         	movff	hxSPPCarbonWriteAndVerity_test@txBuffer+1,hxSPPCarbonWriteReg_test@txBuffer+1
  2062  001BC6  0100               	movlb	0	; () banked
  2063  001BC8  51DF               	movf	hxSPPCarbonWriteAndVerity_test@numTX& (0+255),w,b
  2064  001BCA  ECB8  F00B         	call	_hxSPPCarbonWriteReg_test
  2065  001BCE  0100               	movlb	0	; () banked
  2066  001BD0  6FDE               	movwf	hxSPPCarbonWriteAndVerity_test@returnValue& (0+255),b
  2067                           
  2068                           ; BSR set to: 0
  2069                           ;HX_SPP_CARBON.c: 117: if (returnValue != 0x10)
  2070  001BD2  0E10               	movlw	16
  2071  001BD4  0100               	movlb	0	; () banked
  2072  001BD6  19DE               	xorwf	hxSPPCarbonWriteAndVerity_test@returnValue& (0+255),w,b
  2073  001BD8  B4D8               	btfsc	status,2,c
  2074  001BDA  D003               	goto	l7947
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;HX_SPP_CARBON.c: 118: {
  2078                           ;HX_SPP_CARBON.c: 119: hx_state = 0x41;
  2079  001BDC  0E41               	movlw	65
  2080  001BDE  6E3E               	movwf	_hx_state,c
  2081                           
  2082                           ; BSR set to: 0
  2083                           ;HX_SPP_CARBON.c: 120: return;
  2084  001BE0  0012               	return	
  2085  001BE2                     l7947:
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;HX_SPP_CARBON.c: 121: }
  2089                           ;HX_SPP_CARBON.c: 123: tempValue = txBuffer[0];
  2090  001BE2  C0D8  FFD9         	movff	hxSPPCarbonWriteAndVerity_test@txBuffer,fsr2l
  2091  001BE6  C0D9  FFDA         	movff	hxSPPCarbonWriteAndVerity_test@txBuffer+1,fsr2h
  2092  001BEA  50DF               	movf	indf2,w,c
  2093  001BEC  0100               	movlb	0	; () banked
  2094  001BEE  6FE1               	movwf	hxSPPCarbonWriteAndVerity_test@tempValue& (0+255),b
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;HX_SPP_CARBON.c: 124: tempValue = tempValue & 0x0F;
  2098  001BF0  0100               	movlb	0	; () banked
  2099  001BF2  51E1               	movf	hxSPPCarbonWriteAndVerity_test@tempValue& (0+255),w,b
  2100  001BF4  0B0F               	andlw	15
  2101  001BF6  0100               	movlb	0	; () banked
  2102  001BF8  6FE1               	movwf	hxSPPCarbonWriteAndVerity_test@tempValue& (0+255),b
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;HX_SPP_CARBON.c: 125: tempValue = tempValue | 0x10;
  2106  001BFA  0100               	movlb	0	; () banked
  2107  001BFC  51E1               	movf	hxSPPCarbonWriteAndVerity_test@tempValue& (0+255),w,b
  2108  001BFE  0910               	iorlw	16
  2109  001C00  0100               	movlb	0	; () banked
  2110  001C02  6FE1               	movwf	hxSPPCarbonWriteAndVerity_test@tempValue& (0+255),b
  2111                           
  2112                           ; BSR set to: 0
  2113                           ;HX_SPP_CARBON.c: 126: txBuffer[0] = tempValue;
  2114  001C04  C0D8  FFD9         	movff	hxSPPCarbonWriteAndVerity_test@txBuffer,fsr2l
  2115  001C08  C0D9  FFDA         	movff	hxSPPCarbonWriteAndVerity_test@txBuffer+1,fsr2h
  2116  001C0C  C0E1  FFDF         	movff	hxSPPCarbonWriteAndVerity_test@tempValue,indf2
  2117                           
  2118                           ; BSR set to: 0
  2119                           ;HX_SPP_CARBON.c: 127: returnValue = hxSPPCarbonReadReg_test(numTX, 2, txBuffer, &rxBuff
      +                          er[1]);
  2120  001C10  0E02               	movlw	2
  2121  001C12  0100               	movlb	0	; () banked
  2122  001C14  6FC5               	movwf	hxSPPCarbonReadReg_test@numRX& (0+255),b
  2123  001C16  C0D8  F0C6         	movff	hxSPPCarbonWriteAndVerity_test@txBuffer,hxSPPCarbonReadReg_test@txBuffer
  2124  001C1A  C0D9  F0C7         	movff	hxSPPCarbonWriteAndVerity_test@txBuffer+1,hxSPPCarbonReadReg_test@txBuffer+1
  2125  001C1E  0E01               	movlw	1
  2126  001C20  0100               	movlb	0	; () banked
  2127  001C22  25DA               	addwf	hxSPPCarbonWriteAndVerity_test@rxBuffer& (0+255),w,b
  2128  001C24  0100               	movlb	0	; () banked
  2129  001C26  6FC8               	movwf	hxSPPCarbonReadReg_test@rxBuffer& (0+255),b
  2130  001C28  0E00               	movlw	0
  2131  001C2A  0100               	movlb	0	; () banked
  2132  001C2C  21DB               	addwfc	(hxSPPCarbonWriteAndVerity_test@rxBuffer+1)& (0+255),w,b
  2133  001C2E  0100               	movlb	0	; () banked
  2134  001C30  6FC9               	movwf	(hxSPPCarbonReadReg_test@rxBuffer+1)& (0+255),b
  2135  001C32  0100               	movlb	0	; () banked
  2136  001C34  51DF               	movf	hxSPPCarbonWriteAndVerity_test@numTX& (0+255),w,b
  2137  001C36  ECBB  F003         	call	_hxSPPCarbonReadReg_test
  2138  001C3A  0100               	movlb	0	; () banked
  2139  001C3C  6FDE               	movwf	hxSPPCarbonWriteAndVerity_test@returnValue& (0+255),b
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;HX_SPP_CARBON.c: 128: if (returnValue != 0x10)
  2143  001C3E  0E10               	movlw	16
  2144  001C40  0100               	movlb	0	; () banked
  2145  001C42  19DE               	xorwf	hxSPPCarbonWriteAndVerity_test@returnValue& (0+255),w,b
  2146  001C44  B4D8               	btfsc	status,2,c
  2147  001C46  D003               	goto	l7963
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;HX_SPP_CARBON.c: 129: {
  2151                           ;HX_SPP_CARBON.c: 130: hx_state = 0x41;
  2152  001C48  0E41               	movlw	65
  2153  001C4A  6E3E               	movwf	_hx_state,c
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;HX_SPP_CARBON.c: 131: return;
  2157  001C4C  0012               	return	
  2158  001C4E                     l7963:
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;HX_SPP_CARBON.c: 132: }
  2162                           ;HX_SPP_CARBON.c: 133: for (uint8_t i = 1; i < numTX; i++)
  2163  001C4E  0E01               	movlw	1
  2164  001C50  0100               	movlb	0	; () banked
  2165  001C52  6FE0               	movwf	hxSPPCarbonWriteAndVerity_test@i& (0+255),b
  2166  001C54  D01F               	goto	l7973
  2167  001C56                     l7965:
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;HX_SPP_CARBON.c: 134: {
  2171                           ;HX_SPP_CARBON.c: 135: if(rxBuffer[i] != txBuffer[i])
  2172  001C56  0100               	movlb	0	; () banked
  2173  001C58  51E0               	movf	hxSPPCarbonWriteAndVerity_test@i& (0+255),w,b
  2174  001C5A  0D01               	mullw	1
  2175  001C5C  50F3               	movf	prodl,w,c
  2176  001C5E  0100               	movlb	0	; () banked
  2177  001C60  25D8               	addwf	hxSPPCarbonWriteAndVerity_test@txBuffer& (0+255),w,b
  2178  001C62  6ED9               	movwf	fsr2l,c
  2179  001C64  50F4               	movf	prodh,w,c
  2180  001C66  0100               	movlb	0	; () banked
  2181  001C68  21D9               	addwfc	(hxSPPCarbonWriteAndVerity_test@txBuffer+1)& (0+255),w,b
  2182  001C6A  6EDA               	movwf	fsr2h,c
  2183  001C6C  0100               	movlb	0	; () banked
  2184  001C6E  51E0               	movf	hxSPPCarbonWriteAndVerity_test@i& (0+255),w,b
  2185  001C70  0D01               	mullw	1
  2186  001C72  50F3               	movf	prodl,w,c
  2187  001C74  0100               	movlb	0	; () banked
  2188  001C76  25DA               	addwf	hxSPPCarbonWriteAndVerity_test@rxBuffer& (0+255),w,b
  2189  001C78  6EE1               	movwf	fsr1l,c
  2190  001C7A  50F4               	movf	prodh,w,c
  2191  001C7C  0100               	movlb	0	; () banked
  2192  001C7E  21DB               	addwfc	(hxSPPCarbonWriteAndVerity_test@rxBuffer+1)& (0+255),w,b
  2193  001C80  6EE2               	movwf	fsr1h,c
  2194  001C82  50DE               	movf	postinc2,w,c
  2195  001C84  18E6               	xorwf	postinc1,w,c
  2196  001C86  B4D8               	btfsc	status,2,c
  2197  001C88  D003               	goto	l7971
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;HX_SPP_CARBON.c: 136: {
  2201                           ;HX_SPP_CARBON.c: 137: hx_state = 0x41;
  2202  001C8A  0E41               	movlw	65
  2203  001C8C  6E3E               	movwf	_hx_state,c
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;HX_SPP_CARBON.c: 138: return;
  2207  001C8E  0012               	return	
  2208  001C90                     l7971:
  2209                           
  2210                           ; BSR set to: 0
  2211  001C90  0100               	movlb	0	; () banked
  2212  001C92  2BE0               	incf	hxSPPCarbonWriteAndVerity_test@i& (0+255),f,b
  2213  001C94                     l7973:
  2214                           
  2215                           ; BSR set to: 0
  2216  001C94  0100               	movlb	0	; () banked
  2217  001C96  51DF               	movf	hxSPPCarbonWriteAndVerity_test@numTX& (0+255),w,b
  2218  001C98  0100               	movlb	0	; () banked
  2219  001C9A  5DE0               	subwf	hxSPPCarbonWriteAndVerity_test@i& (0+255),w,b
  2220  001C9C  A0D8               	btfss	status,0,c
  2221  001C9E  D7DB               	goto	l7965
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;HX_SPP_CARBON.c: 139: }
  2225                           ;HX_SPP_CARBON.c: 140: }
  2226                           ;HX_SPP_CARBON.c: 141: rxBuffer[0] = 0x10;
  2227                           
  2228                           ; BSR set to: 0
  2229  001CA0  C0DA  FFD9         	movff	hxSPPCarbonWriteAndVerity_test@rxBuffer,fsr2l
  2230  001CA4  C0DB  FFDA         	movff	hxSPPCarbonWriteAndVerity_test@rxBuffer+1,fsr2h
  2231  001CA8  0E10               	movlw	16
  2232  001CAA  6EDF               	movwf	indf2,c
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;HX_SPP_CARBON.c: 142: hx_state = 0x10;
  2236  001CAC  0E10               	movlw	16
  2237  001CAE  6E3E               	movwf	_hx_state,c
  2238                           
  2239                           ; BSR set to: 0
  2240  001CB0  0012               	return		;funcret
  2241  001CB2                     __end_of_hxSPPCarbonWriteAndVerity_test:
  2242                           	opt stack 0
  2243                           tblptru	equ	0xFF8
  2244                           tblptrh	equ	0xFF7
  2245                           tblptrl	equ	0xFF6
  2246                           tablat	equ	0xFF5
  2247                           prodh	equ	0xFF4
  2248                           prodl	equ	0xFF3
  2249                           intcon	equ	0xFF2
  2250                           postinc0	equ	0xFEE
  2251                           wreg	equ	0xFE8
  2252                           postinc1	equ	0xFE6
  2253                           fsr1h	equ	0xFE2
  2254                           fsr1l	equ	0xFE1
  2255                           indf2	equ	0xFDF
  2256                           postinc2	equ	0xFDE
  2257                           fsr2h	equ	0xFDA
  2258                           fsr2l	equ	0xFD9
  2259                           status	equ	0xFD8
  2260                           
  2261 ;; *************** function _hxSPPCarbonWriteReg_test *****************
  2262 ;; Defined at:
  2263 ;;		line 377 in file "HX_SPP_CARBON.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;  numTX           1    wreg     unsigned char 
  2266 ;;  txBuffer        2    7[BANK0 ] PTR unsigned char 
  2267 ;;		 -> hx_inData(64), 
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;  numTX           1    9[BANK0 ] unsigned char 
  2270 ;;  j               1   14[BANK0 ] unsigned char 
  2271 ;;  i               1   13[BANK0 ] unsigned char 
  2272 ;;  j               1   12[BANK0 ] unsigned char 
  2273 ;;  tempByte        1   15[BANK0 ] unsigned char 
  2274 ;;  oddParityCal    1   11[BANK0 ] unsigned char 
  2275 ;;  tempHxState     1   10[BANK0 ] unsigned char 
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      unsigned char 
  2278 ;; Registers used:
  2279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2285 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2286 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2288 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2289 ;;Total ram usage:        9 bytes
  2290 ;; Hardware stack levels used:    1
  2291 ;; Hardware stack levels required when called:    8
  2292 ;; This function calls:
  2293 ;;		_hxOddParityCalc
  2294 ;; This function is called by:
  2295 ;;		_run_SPPCarbon_test
  2296 ;;		_hxSPPCarbonWriteAndVerity_test
  2297 ;;		_hxSPPCarbonWrite_test
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           	psect	text4
  2302  001770                     __ptext4:
  2303                           	opt stack 0
  2304  001770                     _hxSPPCarbonWriteReg_test:
  2305                           	opt stack 20
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;incstack = 0
  2309                           ;hxSPPCarbonWriteReg_test@numTX stored from wreg
  2310  001770  0100               	movlb	0	; () banked
  2311  001772  6FC7               	movwf	hxSPPCarbonWriteReg_test@numTX& (0+255),b
  2312                           
  2313                           ;HX_SPP_CARBON.c: 379: uint8_t tempByte;
  2314                           ;HX_SPP_CARBON.c: 380: uint8_t oddParityCalc = 0;
  2315  001774  0E00               	movlw	0
  2316  001776  0100               	movlb	0	; () banked
  2317  001778  6FC9               	movwf	hxSPPCarbonWriteReg_test@oddParityCalc& (0+255),b
  2318                           
  2319                           ;HX_SPP_CARBON.c: 381: uint8_t tempHxState = 0x10;
  2320  00177A  0E10               	movlw	16
  2321  00177C  0100               	movlb	0	; () banked
  2322  00177E  6FC8               	movwf	hxSPPCarbonWriteReg_test@tempHxState& (0+255),b
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;HX_SPP_CARBON.c: 382: oddParityCalc = hxOddParityCalc(txBuffer, 3);
  2326  001780  C0C5  F0BE         	movff	hxSPPCarbonWriteReg_test@txBuffer,hxOddParityCalc@buff
  2327  001784  C0C6  F0BF         	movff	hxSPPCarbonWriteReg_test@txBuffer+1,hxOddParityCalc@buff+1
  2328  001788  0E03               	movlw	3
  2329  00178A  0100               	movlb	0	; () banked
  2330  00178C  6FC0               	movwf	hxOddParityCalc@size& (0+255),b
  2331  00178E  EC7C  F010         	call	_hxOddParityCalc	;wreg free
  2332  001792  0100               	movlb	0	; () banked
  2333  001794  6FC9               	movwf	hxSPPCarbonWriteReg_test@oddParityCalc& (0+255),b
  2334                           
  2335                           ; BSR set to: 0
  2336                           ;HX_SPP_CARBON.c: 391: tempByte = 0xA0;
  2337  001796  0EA0               	movlw	160
  2338  001798  0100               	movlb	0	; () banked
  2339  00179A  6FCD               	movwf	hxSPPCarbonWriteReg_test@tempByte& (0+255),b
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;HX_SPP_CARBON.c: 392: if (tempByte & 0x80){
  2343  00179C  0100               	movlb	0	; () banked
  2344  00179E  AFCD               	btfss	hxSPPCarbonWriteReg_test@tempByte& (0+255),7,b
  2345  0017A0  D00F               	goto	l7139
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;HX_SPP_CARBON.c: 394: LATA = 0x01;
  2349  0017A2  0E01               	movlw	1
  2350  0017A4  6E83               	movwf	3971,c	;volatile
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;HX_SPP_CARBON.c: 395: _delay((unsigned long)((1)*(64000000/4000000.0)));
  2354  0017A6  0E05               	movlw	5
  2355  0017A8                     u7107:
  2356  0017A8  2EE8               	decfsz	wreg,f,c
  2357  0017AA  D7FE               	bra	u7107
  2358  0017AC  F000               	nop	
  2359                           
  2360                           ;HX_SPP_CARBON.c: 396: LATA = 0x03;
  2361  0017AE  0E03               	movlw	3
  2362  0017B0  6E83               	movwf	3971,c	;volatile
  2363                           
  2364                           ;HX_SPP_CARBON.c: 397: _delay((unsigned long)((1)*(64000000/4000000.0)));
  2365  0017B2  0E05               	movlw	5
  2366  0017B4                     u7117:
  2367  0017B4  2EE8               	decfsz	wreg,f,c
  2368  0017B6  D7FE               	bra	u7117
  2369  0017B8  D00E               	goto	L2
  2370  0017BA                     l7137:
  2371                           
  2372                           ;HX_SPP_CARBON.c: 398: LATA = 0x01;
  2373  0017BA  0E01               	movlw	1
  2374  0017BC  6E83               	movwf	3971,c	;volatile
  2375                           
  2376                           ;HX_SPP_CARBON.c: 399: }
  2377  0017BE  D00D               	goto	l7147
  2378  0017C0                     l7139:
  2379                           
  2380                           ;HX_SPP_CARBON.c: 400: else{
  2381                           ;HX_SPP_CARBON.c: 401: LATA = 0x01;
  2382  0017C0  0E01               	movlw	1
  2383  0017C2  6E83               	movwf	3971,c	;volatile
  2384                           
  2385                           ;HX_SPP_CARBON.c: 402: _delay((unsigned long)((1)*(64000000/4000000.0)));
  2386  0017C4  0E05               	movlw	5
  2387  0017C6                     u7127:
  2388  0017C6  2EE8               	decfsz	wreg,f,c
  2389  0017C8  D7FE               	bra	u7127
  2390  0017CA  F000               	nop	
  2391                           
  2392                           ;HX_SPP_CARBON.c: 403: LATA = 0x00;
  2393  0017CC  0E00               	movlw	0
  2394  0017CE  6E83               	movwf	3971,c	;volatile
  2395                           
  2396                           ;HX_SPP_CARBON.c: 404: _delay((unsigned long)((1)*(64000000/4000000.0)));
  2397  0017D0  0E05               	movlw	5
  2398  0017D2                     u7137:
  2399  0017D2  2EE8               	decfsz	wreg,f,c
  2400  0017D4  D7FE               	bra	u7137
  2401  0017D6                     L2:
  2402  0017D6  F000               	nop	
  2403  0017D8  D7F0               	goto	l7137
  2404  0017DA                     l7147:
  2405                           
  2406                           ;HX_SPP_CARBON.c: 406: }
  2407                           ;HX_SPP_CARBON.c: 407: for (uint8_t j = 1; j < 4; j++){
  2408  0017DA  0E01               	movlw	1
  2409  0017DC  0100               	movlb	0	; () banked
  2410  0017DE  6FCA               	movwf	hxSPPCarbonWriteReg_test@j& (0+255),b
  2411  0017E0                     l7149:
  2412                           
  2413                           ; BSR set to: 0
  2414  0017E0  0E03               	movlw	3
  2415  0017E2  0100               	movlb	0	; () banked
  2416  0017E4  65CA               	cpfsgt	hxSPPCarbonWriteReg_test@j& (0+255),b
  2417  0017E6  D001               	goto	l7153
  2418  0017E8  D01B               	goto	l7171
  2419  0017EA                     l7153:
  2420                           
  2421                           ; BSR set to: 0
  2422                           ;HX_SPP_CARBON.c: 408: tempByte = tempByte << 1;
  2423  0017EA  0100               	movlb	0	; () banked
  2424  0017EC  51CD               	movf	hxSPPCarbonWriteReg_test@tempByte& (0+255),w,b
  2425  0017EE  25CD               	addwf	hxSPPCarbonWriteReg_test@tempByte& (0+255),w,b
  2426  0017F0  0100               	movlb	0	; () banked
  2427  0017F2  6FCD               	movwf	hxSPPCarbonWriteReg_test@tempByte& (0+255),b
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;HX_SPP_CARBON.c: 409: if (tempByte & 0x80){
  2431  0017F4  0100               	movlb	0	; () banked
  2432  0017F6  AFCD               	btfss	hxSPPCarbonWriteReg_test@tempByte& (0+255),7,b
  2433  0017F8  D009               	goto	l7163
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;HX_SPP_CARBON.c: 411: LATA = 0x03;
  2437  0017FA  0E03               	movlw	3
  2438  0017FC  6E83               	movwf	3971,c	;volatile
  2439                           
  2440                           ; BSR set to: 0
  2441                           ;HX_SPP_CARBON.c: 412: _delay((unsigned long)((1)*(64000000/4000000.0)));
  2442  0017FE  0E05               	movlw	5
  2443  001800                     u7147:
  2444  001800  2EE8               	decfsz	wreg,f,c
  2445  001802  D7FE               	bra	u7147
  2446  001804  D008               	goto	L3
  2447  001806                     l7161:
  2448                           
  2449                           ;HX_SPP_CARBON.c: 413: LATA = 0x01;
  2450  001806  0E01               	movlw	1
  2451  001808  6E83               	movwf	3971,c	;volatile
  2452                           
  2453                           ;HX_SPP_CARBON.c: 414: }
  2454  00180A  D007               	goto	l7169
  2455  00180C                     l7163:
  2456                           
  2457                           ;HX_SPP_CARBON.c: 415: else{
  2458                           ;HX_SPP_CARBON.c: 416: LATA = 0x00;
  2459  00180C  0E00               	movlw	0
  2460  00180E  6E83               	movwf	3971,c	;volatile
  2461                           
  2462                           ;HX_SPP_CARBON.c: 417: _delay((unsigned long)((1)*(64000000/4000000.0)));
  2463  001810  0E05               	movlw	5
  2464  001812                     u7157:
  2465  001812  2EE8               	decfsz	wreg,f,c
  2466  001814  D7FE               	bra	u7157
  2467  001816                     L3:
  2468  001816  F000               	nop	
  2469  001818  D7F6               	goto	l7161
  2470  00181A                     l7169:
  2471  00181A  0100               	movlb	0	; () banked
  2472  00181C  2BCA               	incf	hxSPPCarbonWriteReg_test@j& (0+255),f,b
  2473  00181E  D7E0               	goto	l7149
  2474  001820                     l7171:
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;HX_SPP_CARBON.c: 419: }
  2478                           ;HX_SPP_CARBON.c: 420: }
  2479                           ;HX_SPP_CARBON.c: 422: for (uint8_t i = 0; i < numTX; i++){
  2480  001820  0E00               	movlw	0
  2481  001822  0100               	movlb	0	; () banked
  2482  001824  6FCB               	movwf	hxSPPCarbonWriteReg_test@i& (0+255),b
  2483  001826  D052               	goto	l7219
  2484  001828                     l7173:
  2485                           
  2486                           ; BSR set to: 0
  2487                           ;HX_SPP_CARBON.c: 424: tempByte = txBuffer[i];
  2488  001828  0100               	movlb	0	; () banked
  2489  00182A  51CB               	movf	hxSPPCarbonWriteReg_test@i& (0+255),w,b
  2490  00182C  0D01               	mullw	1
  2491  00182E  50F3               	movf	prodl,w,c
  2492  001830  0100               	movlb	0	; () banked
  2493  001832  25C5               	addwf	hxSPPCarbonWriteReg_test@txBuffer& (0+255),w,b
  2494  001834  6ED9               	movwf	fsr2l,c
  2495  001836  50F4               	movf	prodh,w,c
  2496  001838  0100               	movlb	0	; () banked
  2497  00183A  21C6               	addwfc	(hxSPPCarbonWriteReg_test@txBuffer+1)& (0+255),w,b
  2498  00183C  6EDA               	movwf	fsr2h,c
  2499  00183E  50DF               	movf	indf2,w,c
  2500  001840  0100               	movlb	0	; () banked
  2501  001842  6FCD               	movwf	hxSPPCarbonWriteReg_test@tempByte& (0+255),b
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;HX_SPP_CARBON.c: 425: if (tempByte & 0x80){
  2505  001844  0100               	movlb	0	; () banked
  2506  001846  AFCD               	btfss	hxSPPCarbonWriteReg_test@tempByte& (0+255),7,b
  2507  001848  D00F               	goto	l7185
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;HX_SPP_CARBON.c: 427: LATA = 0x01;
  2511  00184A  0E01               	movlw	1
  2512  00184C  6E83               	movwf	3971,c	;volatile
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;HX_SPP_CARBON.c: 428: _delay((unsigned long)((1)*(64000000/4000000.0)));
  2516  00184E  0E05               	movlw	5
  2517  001850                     u7167:
  2518  001850  2EE8               	decfsz	wreg,f,c
  2519  001852  D7FE               	bra	u7167
  2520  001854  F000               	nop	
  2521                           
  2522                           ;HX_SPP_CARBON.c: 429: LATA = 0x03;
  2523  001856  0E03               	movlw	3
  2524  001858  6E83               	movwf	3971,c	;volatile
  2525                           
  2526                           ;HX_SPP_CARBON.c: 430: _delay((unsigned long)((1)*(64000000/4000000.0)));
  2527  00185A  0E05               	movlw	5
  2528  00185C                     u7177:
  2529  00185C  2EE8               	decfsz	wreg,f,c
  2530  00185E  D7FE               	bra	u7177
  2531  001860  D00E               	goto	L4
  2532  001862                     l7183:
  2533                           
  2534                           ;HX_SPP_CARBON.c: 431: LATA = 0x01;
  2535  001862  0E01               	movlw	1
  2536  001864  6E83               	movwf	3971,c	;volatile
  2537                           
  2538                           ;HX_SPP_CARBON.c: 432: }
  2539  001866  D00D               	goto	l7193
  2540  001868                     l7185:
  2541                           
  2542                           ;HX_SPP_CARBON.c: 433: else{
  2543                           ;HX_SPP_CARBON.c: 434: LATA = 0x01;
  2544  001868  0E01               	movlw	1
  2545  00186A  6E83               	movwf	3971,c	;volatile
  2546                           
  2547                           ;HX_SPP_CARBON.c: 435: _delay((unsigned long)((1)*(64000000/4000000.0)));
  2548  00186C  0E05               	movlw	5
  2549  00186E                     u7187:
  2550  00186E  2EE8               	decfsz	wreg,f,c
  2551  001870  D7FE               	bra	u7187
  2552  001872  F000               	nop	
  2553                           
  2554                           ;HX_SPP_CARBON.c: 436: LATA = 0x00;
  2555  001874  0E00               	movlw	0
  2556  001876  6E83               	movwf	3971,c	;volatile
  2557                           
  2558                           ;HX_SPP_CARBON.c: 437: _delay((unsigned long)((1)*(64000000/4000000.0)));
  2559  001878  0E05               	movlw	5
  2560  00187A                     u7197:
  2561  00187A  2EE8               	decfsz	wreg,f,c
  2562  00187C  D7FE               	bra	u7197
  2563  00187E                     L4:
  2564  00187E  F000               	nop	
  2565  001880  D7F0               	goto	l7183
  2566  001882                     l7193:
  2567                           
  2568                           ;HX_SPP_CARBON.c: 439: }
  2569                           ;HX_SPP_CARBON.c: 440: for (uint8_t j = 1; j < 8; j++){
  2570  001882  0E01               	movlw	1
  2571  001884  0100               	movlb	0	; () banked
  2572  001886  6FCC               	movwf	hxSPPCarbonWriteReg_test@j_746& (0+255),b
  2573  001888                     l7195:
  2574                           
  2575                           ; BSR set to: 0
  2576  001888  0E07               	movlw	7
  2577  00188A  0100               	movlb	0	; () banked
  2578  00188C  65CC               	cpfsgt	hxSPPCarbonWriteReg_test@j_746& (0+255),b
  2579  00188E  D001               	goto	l7199
  2580  001890  D01B               	goto	l7217
  2581  001892                     l7199:
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;HX_SPP_CARBON.c: 441: tempByte = tempByte << 1;
  2585  001892  0100               	movlb	0	; () banked
  2586  001894  51CD               	movf	hxSPPCarbonWriteReg_test@tempByte& (0+255),w,b
  2587  001896  25CD               	addwf	hxSPPCarbonWriteReg_test@tempByte& (0+255),w,b
  2588  001898  0100               	movlb	0	; () banked
  2589  00189A  6FCD               	movwf	hxSPPCarbonWriteReg_test@tempByte& (0+255),b
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;HX_SPP_CARBON.c: 442: if (tempByte & 0x80){
  2593  00189C  0100               	movlb	0	; () banked
  2594  00189E  AFCD               	btfss	hxSPPCarbonWriteReg_test@tempByte& (0+255),7,b
  2595  0018A0  D009               	goto	l7209
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;HX_SPP_CARBON.c: 444: LATA = 0x03;
  2599  0018A2  0E03               	movlw	3
  2600  0018A4  6E83               	movwf	3971,c	;volatile
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;HX_SPP_CARBON.c: 445: _delay((unsigned long)((1)*(64000000/4000000.0)));
  2604  0018A6  0E05               	movlw	5
  2605  0018A8                     u7207:
  2606  0018A8  2EE8               	decfsz	wreg,f,c
  2607  0018AA  D7FE               	bra	u7207
  2608  0018AC  D008               	goto	L5
  2609  0018AE                     l7207:
  2610                           
  2611                           ;HX_SPP_CARBON.c: 446: LATA = 0x01;
  2612  0018AE  0E01               	movlw	1
  2613  0018B0  6E83               	movwf	3971,c	;volatile
  2614                           
  2615                           ;HX_SPP_CARBON.c: 447: }
  2616  0018B2  D007               	goto	l7215
  2617  0018B4                     l7209:
  2618                           
  2619                           ;HX_SPP_CARBON.c: 448: else{
  2620                           ;HX_SPP_CARBON.c: 449: LATA = 0x00;
  2621  0018B4  0E00               	movlw	0
  2622  0018B6  6E83               	movwf	3971,c	;volatile
  2623                           
  2624                           ;HX_SPP_CARBON.c: 450: _delay((unsigned long)((1)*(64000000/4000000.0)));
  2625  0018B8  0E05               	movlw	5
  2626  0018BA                     u7217:
  2627  0018BA  2EE8               	decfsz	wreg,f,c
  2628  0018BC  D7FE               	bra	u7217
  2629  0018BE                     L5:
  2630  0018BE  F000               	nop	
  2631  0018C0  D7F6               	goto	l7207
  2632  0018C2                     l7215:
  2633  0018C2  0100               	movlb	0	; () banked
  2634  0018C4  2BCC               	incf	hxSPPCarbonWriteReg_test@j_746& (0+255),f,b
  2635  0018C6  D7E0               	goto	l7195
  2636  0018C8                     l7217:
  2637                           
  2638                           ; BSR set to: 0
  2639  0018C8  0100               	movlb	0	; () banked
  2640  0018CA  2BCB               	incf	hxSPPCarbonWriteReg_test@i& (0+255),f,b
  2641  0018CC                     l7219:
  2642                           
  2643                           ; BSR set to: 0
  2644  0018CC  0100               	movlb	0	; () banked
  2645  0018CE  51C7               	movf	hxSPPCarbonWriteReg_test@numTX& (0+255),w,b
  2646  0018D0  0100               	movlb	0	; () banked
  2647  0018D2  5DCB               	subwf	hxSPPCarbonWriteReg_test@i& (0+255),w,b
  2648  0018D4  A0D8               	btfss	status,0,c
  2649  0018D6  D7A8               	goto	l7173
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;HX_SPP_CARBON.c: 452: }
  2653                           ;HX_SPP_CARBON.c: 453: }
  2654                           ;HX_SPP_CARBON.c: 454: }
  2655                           ;HX_SPP_CARBON.c: 457: if (oddParityCalc)
  2656                           
  2657                           ; BSR set to: 0
  2658  0018D8  0100               	movlb	0	; () banked
  2659  0018DA  51C9               	movf	hxSPPCarbonWriteReg_test@oddParityCalc& (0+255),w,b
  2660  0018DC  0100               	movlb	0	; () banked
  2661  0018DE  B4D8               	btfsc	status,2,c
  2662  0018E0  D006               	goto	l7229
  2663                           
  2664                           ; BSR set to: 0
  2665                           ;HX_SPP_CARBON.c: 458: {
  2666                           ;HX_SPP_CARBON.c: 459: LATA = 0x03;
  2667  0018E2  0E03               	movlw	3
  2668  0018E4  6E83               	movwf	3971,c	;volatile
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;HX_SPP_CARBON.c: 460: _delay((unsigned long)((1)*(64000000/4000000.0)));
  2672  0018E6  0E05               	movlw	5
  2673  0018E8                     u7227:
  2674  0018E8  2EE8               	decfsz	wreg,f,c
  2675  0018EA  D7FE               	bra	u7227
  2676  0018EC  D005               	goto	L31
  2677  0018EE                     l7229:
  2678                           
  2679                           ;HX_SPP_CARBON.c: 463: else
  2680                           ;HX_SPP_CARBON.c: 464: {
  2681                           ;HX_SPP_CARBON.c: 465: LATA = 0x00;
  2682  0018EE  0E00               	movlw	0
  2683  0018F0  6E83               	movwf	3971,c	;volatile
  2684                           
  2685                           ;HX_SPP_CARBON.c: 466: _delay((unsigned long)((1)*(64000000/4000000.0)));
  2686  0018F2  0E05               	movlw	5
  2687  0018F4                     u7237:
  2688  0018F4  2EE8               	decfsz	wreg,f,c
  2689  0018F6  D7FE               	bra	u7237
  2690  0018F8                     L31:
  2691  0018F8  F000               	nop	
  2692                           
  2693                           ;HX_SPP_CARBON.c: 467: LATA = 0x01;
  2694  0018FA  0E01               	movlw	1
  2695  0018FC  6E83               	movwf	3971,c	;volatile
  2696                           
  2697                           ;HX_SPP_CARBON.c: 468: }
  2698                           ;HX_SPP_CARBON.c: 471: _delay((unsigned long)((1)*(64000000/4000000.0)));
  2699  0018FE  0E05               	movlw	5
  2700  001900                     u7247:
  2701  001900  2EE8               	decfsz	wreg,f,c
  2702  001902  D7FE               	bra	u7247
  2703  001904  F000               	nop	
  2704                           
  2705                           ;HX_SPP_CARBON.c: 472: LATA = 0x00;
  2706  001906  0E00               	movlw	0
  2707  001908  6E83               	movwf	3971,c	;volatile
  2708                           
  2709                           ;HX_SPP_CARBON.c: 473: _delay((unsigned long)((1)*(64000000/4000000.0)));
  2710  00190A  0E05               	movlw	5
  2711  00190C                     u7257:
  2712  00190C  2EE8               	decfsz	wreg,f,c
  2713  00190E  D7FE               	bra	u7257
  2714  001910  F000               	nop	
  2715                           
  2716                           ;HX_SPP_CARBON.c: 478: return tempHxState;
  2717  001912  0100               	movlb	0	; () banked
  2718  001914  51C8               	movf	hxSPPCarbonWriteReg_test@tempHxState& (0+255),w,b
  2719  001916  0012               	return	
  2720  001918                     __end_of_hxSPPCarbonWriteReg_test:
  2721                           	opt stack 0
  2722                           tblptru	equ	0xFF8
  2723                           tblptrh	equ	0xFF7
  2724                           tblptrl	equ	0xFF6
  2725                           tablat	equ	0xFF5
  2726                           prodh	equ	0xFF4
  2727                           prodl	equ	0xFF3
  2728                           intcon	equ	0xFF2
  2729                           postinc0	equ	0xFEE
  2730                           wreg	equ	0xFE8
  2731                           postinc1	equ	0xFE6
  2732                           fsr1h	equ	0xFE2
  2733                           fsr1l	equ	0xFE1
  2734                           indf2	equ	0xFDF
  2735                           postinc2	equ	0xFDE
  2736                           fsr2h	equ	0xFDA
  2737                           fsr2l	equ	0xFD9
  2738                           status	equ	0xFD8
  2739                           
  2740 ;; *************** function _hxSPPCarbonRead_test *****************
  2741 ;; Defined at:
  2742 ;;		line 161 in file "HX_SPP_CARBON.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  numTX           1    wreg     unsigned char 
  2745 ;;  numRX           1   26[BANK0 ] unsigned char 
  2746 ;;  txBuffer        2   27[BANK0 ] PTR unsigned char 
  2747 ;;		 -> hx_inData(64), 
  2748 ;;  rxBuffer        2   29[BANK0 ] PTR unsigned char 
  2749 ;;		 -> hx_mainData(61), 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  numTX           1   31[BANK0 ] unsigned char 
  2752 ;;  returnValue     1   32[BANK0 ] unsigned char 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2762 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2763 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2765 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2766 ;;Total ram usage:        7 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    9
  2769 ;; This function calls:
  2770 ;;		_hxSPPCarbonReadReg_test
  2771 ;; This function is called by:
  2772 ;;		_run_SPPCarbon_test
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text5
  2777  002486                     __ptext5:
  2778                           	opt stack 0
  2779  002486                     _hxSPPCarbonRead_test:
  2780                           	opt stack 20
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;incstack = 0
  2784                           ;hxSPPCarbonRead_test@numTX stored from wreg
  2785  002486  0100               	movlb	0	; () banked
  2786  002488  6FDD               	movwf	hxSPPCarbonRead_test@numTX& (0+255),b
  2787                           
  2788                           ;HX_SPP_CARBON.c: 163: uint8_t returnValue;
  2789                           ;HX_SPP_CARBON.c: 164: returnValue = hxSPPCarbonReadReg_test(numTX, numRX, txBuffer, &rx
      +                          Buffer[1]);
  2790  00248A  C0D8  F0C5         	movff	hxSPPCarbonRead_test@numRX,hxSPPCarbonReadReg_test@numRX
  2791  00248E  C0D9  F0C6         	movff	hxSPPCarbonRead_test@txBuffer,hxSPPCarbonReadReg_test@txBuffer
  2792  002492  C0DA  F0C7         	movff	hxSPPCarbonRead_test@txBuffer+1,hxSPPCarbonReadReg_test@txBuffer+1
  2793  002496  0E01               	movlw	1
  2794  002498  0100               	movlb	0	; () banked
  2795  00249A  25DB               	addwf	hxSPPCarbonRead_test@rxBuffer& (0+255),w,b
  2796  00249C  0100               	movlb	0	; () banked
  2797  00249E  6FC8               	movwf	hxSPPCarbonReadReg_test@rxBuffer& (0+255),b
  2798  0024A0  0E00               	movlw	0
  2799  0024A2  0100               	movlb	0	; () banked
  2800  0024A4  21DC               	addwfc	(hxSPPCarbonRead_test@rxBuffer+1)& (0+255),w,b
  2801  0024A6  0100               	movlb	0	; () banked
  2802  0024A8  6FC9               	movwf	(hxSPPCarbonReadReg_test@rxBuffer+1)& (0+255),b
  2803  0024AA  0100               	movlb	0	; () banked
  2804  0024AC  51DD               	movf	hxSPPCarbonRead_test@numTX& (0+255),w,b
  2805  0024AE  ECBB  F003         	call	_hxSPPCarbonReadReg_test
  2806  0024B2  0100               	movlb	0	; () banked
  2807  0024B4  6FDE               	movwf	hxSPPCarbonRead_test@returnValue& (0+255),b
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;HX_SPP_CARBON.c: 165: if (returnValue != 0x10)
  2811  0024B6  0E10               	movlw	16
  2812  0024B8  0100               	movlb	0	; () banked
  2813  0024BA  19DE               	xorwf	hxSPPCarbonRead_test@returnValue& (0+255),w,b
  2814  0024BC  B4D8               	btfsc	status,2,c
  2815  0024BE  D003               	goto	l7613
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;HX_SPP_CARBON.c: 166: {
  2819                           ;HX_SPP_CARBON.c: 167: hx_state = 0x41;
  2820  0024C0  0E41               	movlw	65
  2821  0024C2  6E3E               	movwf	_hx_state,c
  2822                           
  2823                           ; BSR set to: 0
  2824                           ;HX_SPP_CARBON.c: 168: return;
  2825  0024C4  0012               	return	
  2826  0024C6                     l7613:
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;HX_SPP_CARBON.c: 169: }
  2830                           ;HX_SPP_CARBON.c: 170: rxBuffer[0] = 0x10;
  2831  0024C6  C0DB  FFD9         	movff	hxSPPCarbonRead_test@rxBuffer,fsr2l
  2832  0024CA  C0DC  FFDA         	movff	hxSPPCarbonRead_test@rxBuffer+1,fsr2h
  2833  0024CE  0E10               	movlw	16
  2834  0024D0  6EDF               	movwf	indf2,c
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;HX_SPP_CARBON.c: 171: hx_state = 0x10;
  2838  0024D2  0E10               	movlw	16
  2839  0024D4  6E3E               	movwf	_hx_state,c
  2840                           
  2841                           ; BSR set to: 0
  2842  0024D6  0012               	return		;funcret
  2843  0024D8                     __end_of_hxSPPCarbonRead_test:
  2844                           	opt stack 0
  2845                           tblptru	equ	0xFF8
  2846                           tblptrh	equ	0xFF7
  2847                           tblptrl	equ	0xFF6
  2848                           tablat	equ	0xFF5
  2849                           prodh	equ	0xFF4
  2850                           prodl	equ	0xFF3
  2851                           intcon	equ	0xFF2
  2852                           postinc0	equ	0xFEE
  2853                           wreg	equ	0xFE8
  2854                           postinc1	equ	0xFE6
  2855                           fsr1h	equ	0xFE2
  2856                           fsr1l	equ	0xFE1
  2857                           indf2	equ	0xFDF
  2858                           postinc2	equ	0xFDE
  2859                           fsr2h	equ	0xFDA
  2860                           fsr2l	equ	0xFD9
  2861                           status	equ	0xFD8
  2862                           
  2863 ;; *************** function _hxSPPCarbonReadReg_test *****************
  2864 ;; Defined at:
  2865 ;;		line 175 in file "HX_SPP_CARBON.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;  numTX           1    wreg     unsigned char 
  2868 ;;  numRX           1    7[BANK0 ] unsigned char 
  2869 ;;  txBuffer        2    8[BANK0 ] PTR unsigned char 
  2870 ;;		 -> hx_inData(64), 
  2871 ;;  rxBuffer        2   10[BANK0 ] PTR unsigned char 
  2872 ;;		 -> hx_mainData(61), 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  numTX           1   13[BANK0 ] unsigned char 
  2875 ;;  j               1   21[BANK0 ] unsigned char 
  2876 ;;  j               1   19[BANK0 ] unsigned char 
  2877 ;;  i               1   20[BANK0 ] unsigned char 
  2878 ;;  i               1   18[BANK0 ] unsigned char 
  2879 ;;  j               1   17[BANK0 ] unsigned char 
  2880 ;;  readbackTime    2   14[BANK0 ] unsigned int 
  2881 ;;  tempByte        1   25[BANK0 ] unsigned char 
  2882 ;;  readbackComm    1   24[BANK0 ] unsigned char 
  2883 ;;  tempHxState     1   23[BANK0 ] unsigned char 
  2884 ;;  bitVal          1   22[BANK0 ] unsigned char 
  2885 ;;  oddParityCal    1   16[BANK0 ] unsigned char 
  2886 ;;  portAVal        1   12[BANK0 ] unsigned char 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      unsigned char 
  2889 ;; Registers used:
  2890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2896 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2897 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2899 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2900 ;;Total ram usage:       19 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; Hardware stack levels required when called:    8
  2903 ;; This function calls:
  2904 ;;		_hxOddParityCalc
  2905 ;; This function is called by:
  2906 ;;		_hxSPPCarbonWriteAndVerity_test
  2907 ;;		_hxSPPCarbonRead_test
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           	psect	text6
  2912  000776                     __ptext6:
  2913                           	opt stack 0
  2914  000776                     _hxSPPCarbonReadReg_test:
  2915                           	opt stack 20
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;incstack = 0
  2919                           ;hxSPPCarbonReadReg_test@numTX stored from wreg
  2920  000776  0100               	movlb	0	; () banked
  2921  000778  6FCB               	movwf	hxSPPCarbonReadReg_test@numTX& (0+255),b
  2922                           
  2923                           ;HX_SPP_CARBON.c: 177: uint8_t tempByte;
  2924                           ;HX_SPP_CARBON.c: 178: uint8_t readbackCommState;
  2925                           ;HX_SPP_CARBON.c: 179: uint8_t bitVal;
  2926                           ;HX_SPP_CARBON.c: 180: uint16_t readbackTimer;
  2927                           ;HX_SPP_CARBON.c: 181: uint8_t oddParityCalc = 0;
  2928  00077A  0E00               	movlw	0
  2929  00077C  0100               	movlb	0	; () banked
  2930  00077E  6FCE               	movwf	hxSPPCarbonReadReg_test@oddParityCalc& (0+255),b
  2931                           
  2932                           ;HX_SPP_CARBON.c: 182: uint8_t portAVal = 0;
  2933  000780  0E00               	movlw	0
  2934  000782  0100               	movlb	0	; () banked
  2935  000784  6FCA               	movwf	hxSPPCarbonReadReg_test@portAVal& (0+255),b
  2936                           
  2937                           ;HX_SPP_CARBON.c: 183: uint8_t tempHxState = 0x10;
  2938  000786  0E10               	movlw	16
  2939  000788  0100               	movlb	0	; () banked
  2940  00078A  6FD5               	movwf	hxSPPCarbonReadReg_test@tempHxState& (0+255),b
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;HX_SPP_CARBON.c: 185: oddParityCalc = hxOddParityCalc(txBuffer, 3);
  2944  00078C  C0C6  F0BE         	movff	hxSPPCarbonReadReg_test@txBuffer,hxOddParityCalc@buff
  2945  000790  C0C7  F0BF         	movff	hxSPPCarbonReadReg_test@txBuffer+1,hxOddParityCalc@buff+1
  2946  000794  0E03               	movlw	3
  2947  000796  0100               	movlb	0	; () banked
  2948  000798  6FC0               	movwf	hxOddParityCalc@size& (0+255),b
  2949  00079A  EC7C  F010         	call	_hxOddParityCalc	;wreg free
  2950  00079E  0100               	movlb	0	; () banked
  2951  0007A0  6FCE               	movwf	hxSPPCarbonReadReg_test@oddParityCalc& (0+255),b
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;HX_SPP_CARBON.c: 195: tempByte = 0xA0;
  2955  0007A2  0EA0               	movlw	160
  2956  0007A4  0100               	movlb	0	; () banked
  2957  0007A6  6FD7               	movwf	hxSPPCarbonReadReg_test@tempByte& (0+255),b
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;HX_SPP_CARBON.c: 196: if (tempByte & 0x80){
  2961  0007A8  0100               	movlb	0	; () banked
  2962  0007AA  AFD7               	btfss	hxSPPCarbonReadReg_test@tempByte& (0+255),7,b
  2963  0007AC  D00F               	goto	l7257
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;HX_SPP_CARBON.c: 198: LATA = 0x01;
  2967  0007AE  0E01               	movlw	1
  2968  0007B0  6E83               	movwf	3971,c	;volatile
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;HX_SPP_CARBON.c: 199: _delay((unsigned long)((1)*(64000000/4000000.0)));
  2972  0007B2  0E05               	movlw	5
  2973  0007B4                     u7267:
  2974  0007B4  2EE8               	decfsz	wreg,f,c
  2975  0007B6  D7FE               	bra	u7267
  2976  0007B8  F000               	nop	
  2977                           
  2978                           ;HX_SPP_CARBON.c: 200: LATA = 0x03;
  2979  0007BA  0E03               	movlw	3
  2980  0007BC  6E83               	movwf	3971,c	;volatile
  2981                           
  2982                           ;HX_SPP_CARBON.c: 201: _delay((unsigned long)((1)*(64000000/4000000.0)));
  2983  0007BE  0E05               	movlw	5
  2984  0007C0                     u7277:
  2985  0007C0  2EE8               	decfsz	wreg,f,c
  2986  0007C2  D7FE               	bra	u7277
  2987  0007C4  D00E               	goto	L6
  2988  0007C6                     l7255:
  2989                           
  2990                           ;HX_SPP_CARBON.c: 202: LATA = 0x01;
  2991  0007C6  0E01               	movlw	1
  2992  0007C8  6E83               	movwf	3971,c	;volatile
  2993                           
  2994                           ;HX_SPP_CARBON.c: 203: }
  2995  0007CA  D00D               	goto	l7265
  2996  0007CC                     l7257:
  2997                           
  2998                           ;HX_SPP_CARBON.c: 204: else{
  2999                           ;HX_SPP_CARBON.c: 205: LATA = 0x01;
  3000  0007CC  0E01               	movlw	1
  3001  0007CE  6E83               	movwf	3971,c	;volatile
  3002                           
  3003                           ;HX_SPP_CARBON.c: 206: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3004  0007D0  0E05               	movlw	5
  3005  0007D2                     u7287:
  3006  0007D2  2EE8               	decfsz	wreg,f,c
  3007  0007D4  D7FE               	bra	u7287
  3008  0007D6  F000               	nop	
  3009                           
  3010                           ;HX_SPP_CARBON.c: 207: LATA = 0x00;
  3011  0007D8  0E00               	movlw	0
  3012  0007DA  6E83               	movwf	3971,c	;volatile
  3013                           
  3014                           ;HX_SPP_CARBON.c: 208: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3015  0007DC  0E05               	movlw	5
  3016  0007DE                     u7297:
  3017  0007DE  2EE8               	decfsz	wreg,f,c
  3018  0007E0  D7FE               	bra	u7297
  3019  0007E2                     L6:
  3020  0007E2  F000               	nop	
  3021  0007E4  D7F0               	goto	l7255
  3022  0007E6                     l7265:
  3023                           
  3024                           ;HX_SPP_CARBON.c: 210: }
  3025                           ;HX_SPP_CARBON.c: 211: for (uint8_t j = 1; j < 4; j++){
  3026  0007E6  0E01               	movlw	1
  3027  0007E8  0100               	movlb	0	; () banked
  3028  0007EA  6FCF               	movwf	hxSPPCarbonReadReg_test@j& (0+255),b
  3029  0007EC                     l7267:
  3030                           
  3031                           ; BSR set to: 0
  3032  0007EC  0E03               	movlw	3
  3033  0007EE  0100               	movlb	0	; () banked
  3034  0007F0  65CF               	cpfsgt	hxSPPCarbonReadReg_test@j& (0+255),b
  3035  0007F2  D001               	goto	l7271
  3036  0007F4  D01B               	goto	l7289
  3037  0007F6                     l7271:
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;HX_SPP_CARBON.c: 212: tempByte = tempByte << 1;
  3041  0007F6  0100               	movlb	0	; () banked
  3042  0007F8  51D7               	movf	hxSPPCarbonReadReg_test@tempByte& (0+255),w,b
  3043  0007FA  25D7               	addwf	hxSPPCarbonReadReg_test@tempByte& (0+255),w,b
  3044  0007FC  0100               	movlb	0	; () banked
  3045  0007FE  6FD7               	movwf	hxSPPCarbonReadReg_test@tempByte& (0+255),b
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;HX_SPP_CARBON.c: 213: if (tempByte & 0x80){
  3049  000800  0100               	movlb	0	; () banked
  3050  000802  AFD7               	btfss	hxSPPCarbonReadReg_test@tempByte& (0+255),7,b
  3051  000804  D009               	goto	l7281
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;HX_SPP_CARBON.c: 215: LATA = 0x03;
  3055  000806  0E03               	movlw	3
  3056  000808  6E83               	movwf	3971,c	;volatile
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;HX_SPP_CARBON.c: 216: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3060  00080A  0E05               	movlw	5
  3061  00080C                     u7307:
  3062  00080C  2EE8               	decfsz	wreg,f,c
  3063  00080E  D7FE               	bra	u7307
  3064  000810  D008               	goto	L7
  3065  000812                     l7279:
  3066                           
  3067                           ;HX_SPP_CARBON.c: 217: LATA = 0x01;
  3068  000812  0E01               	movlw	1
  3069  000814  6E83               	movwf	3971,c	;volatile
  3070                           
  3071                           ;HX_SPP_CARBON.c: 218: }
  3072  000816  D007               	goto	l7287
  3073  000818                     l7281:
  3074                           
  3075                           ;HX_SPP_CARBON.c: 219: else{
  3076                           ;HX_SPP_CARBON.c: 220: LATA = 0x00;
  3077  000818  0E00               	movlw	0
  3078  00081A  6E83               	movwf	3971,c	;volatile
  3079                           
  3080                           ;HX_SPP_CARBON.c: 221: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3081  00081C  0E05               	movlw	5
  3082  00081E                     u7317:
  3083  00081E  2EE8               	decfsz	wreg,f,c
  3084  000820  D7FE               	bra	u7317
  3085  000822                     L7:
  3086  000822  F000               	nop	
  3087  000824  D7F6               	goto	l7279
  3088  000826                     l7287:
  3089  000826  0100               	movlb	0	; () banked
  3090  000828  2BCF               	incf	hxSPPCarbonReadReg_test@j& (0+255),f,b
  3091  00082A  D7E0               	goto	l7267
  3092  00082C                     l7289:
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;HX_SPP_CARBON.c: 223: }
  3096                           ;HX_SPP_CARBON.c: 224: }
  3097                           ;HX_SPP_CARBON.c: 226: for (uint8_t i = 0; i < numTX; i++){
  3098  00082C  0E00               	movlw	0
  3099  00082E  0100               	movlb	0	; () banked
  3100  000830  6FD0               	movwf	hxSPPCarbonReadReg_test@i& (0+255),b
  3101  000832  D052               	goto	l7337
  3102  000834                     l7291:
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;HX_SPP_CARBON.c: 228: tempByte = txBuffer[i];
  3106  000834  0100               	movlb	0	; () banked
  3107  000836  51D0               	movf	hxSPPCarbonReadReg_test@i& (0+255),w,b
  3108  000838  0D01               	mullw	1
  3109  00083A  50F3               	movf	prodl,w,c
  3110  00083C  0100               	movlb	0	; () banked
  3111  00083E  25C6               	addwf	hxSPPCarbonReadReg_test@txBuffer& (0+255),w,b
  3112  000840  6ED9               	movwf	fsr2l,c
  3113  000842  50F4               	movf	prodh,w,c
  3114  000844  0100               	movlb	0	; () banked
  3115  000846  21C7               	addwfc	(hxSPPCarbonReadReg_test@txBuffer+1)& (0+255),w,b
  3116  000848  6EDA               	movwf	fsr2h,c
  3117  00084A  50DF               	movf	indf2,w,c
  3118  00084C  0100               	movlb	0	; () banked
  3119  00084E  6FD7               	movwf	hxSPPCarbonReadReg_test@tempByte& (0+255),b
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;HX_SPP_CARBON.c: 229: if (tempByte & 0x80){
  3123  000850  0100               	movlb	0	; () banked
  3124  000852  AFD7               	btfss	hxSPPCarbonReadReg_test@tempByte& (0+255),7,b
  3125  000854  D00F               	goto	l7303
  3126                           
  3127                           ; BSR set to: 0
  3128                           ;HX_SPP_CARBON.c: 231: LATA = 0x01;
  3129  000856  0E01               	movlw	1
  3130  000858  6E83               	movwf	3971,c	;volatile
  3131                           
  3132                           ; BSR set to: 0
  3133                           ;HX_SPP_CARBON.c: 232: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3134  00085A  0E05               	movlw	5
  3135  00085C                     u7327:
  3136  00085C  2EE8               	decfsz	wreg,f,c
  3137  00085E  D7FE               	bra	u7327
  3138  000860  F000               	nop	
  3139                           
  3140                           ;HX_SPP_CARBON.c: 233: LATA = 0x03;
  3141  000862  0E03               	movlw	3
  3142  000864  6E83               	movwf	3971,c	;volatile
  3143                           
  3144                           ;HX_SPP_CARBON.c: 234: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3145  000866  0E05               	movlw	5
  3146  000868                     u7337:
  3147  000868  2EE8               	decfsz	wreg,f,c
  3148  00086A  D7FE               	bra	u7337
  3149  00086C  D00E               	goto	L8
  3150  00086E                     l7301:
  3151                           
  3152                           ;HX_SPP_CARBON.c: 235: LATA = 0x01;
  3153  00086E  0E01               	movlw	1
  3154  000870  6E83               	movwf	3971,c	;volatile
  3155                           
  3156                           ;HX_SPP_CARBON.c: 236: }
  3157  000872  D00D               	goto	l7311
  3158  000874                     l7303:
  3159                           
  3160                           ;HX_SPP_CARBON.c: 237: else{
  3161                           ;HX_SPP_CARBON.c: 238: LATA = 0x01;
  3162  000874  0E01               	movlw	1
  3163  000876  6E83               	movwf	3971,c	;volatile
  3164                           
  3165                           ;HX_SPP_CARBON.c: 239: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3166  000878  0E05               	movlw	5
  3167  00087A                     u7347:
  3168  00087A  2EE8               	decfsz	wreg,f,c
  3169  00087C  D7FE               	bra	u7347
  3170  00087E  F000               	nop	
  3171                           
  3172                           ;HX_SPP_CARBON.c: 240: LATA = 0x00;
  3173  000880  0E00               	movlw	0
  3174  000882  6E83               	movwf	3971,c	;volatile
  3175                           
  3176                           ;HX_SPP_CARBON.c: 241: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3177  000884  0E05               	movlw	5
  3178  000886                     u7357:
  3179  000886  2EE8               	decfsz	wreg,f,c
  3180  000888  D7FE               	bra	u7357
  3181  00088A                     L8:
  3182  00088A  F000               	nop	
  3183  00088C  D7F0               	goto	l7301
  3184  00088E                     l7311:
  3185                           
  3186                           ;HX_SPP_CARBON.c: 243: }
  3187                           ;HX_SPP_CARBON.c: 244: for (uint8_t j = 1; j < 8; j++){
  3188  00088E  0E01               	movlw	1
  3189  000890  0100               	movlb	0	; () banked
  3190  000892  6FD1               	movwf	hxSPPCarbonReadReg_test@j_735& (0+255),b
  3191  000894                     l7313:
  3192                           
  3193                           ; BSR set to: 0
  3194  000894  0E07               	movlw	7
  3195  000896  0100               	movlb	0	; () banked
  3196  000898  65D1               	cpfsgt	hxSPPCarbonReadReg_test@j_735& (0+255),b
  3197  00089A  D001               	goto	l7317
  3198  00089C  D01B               	goto	l7335
  3199  00089E                     l7317:
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;HX_SPP_CARBON.c: 245: tempByte = tempByte << 1;
  3203  00089E  0100               	movlb	0	; () banked
  3204  0008A0  51D7               	movf	hxSPPCarbonReadReg_test@tempByte& (0+255),w,b
  3205  0008A2  25D7               	addwf	hxSPPCarbonReadReg_test@tempByte& (0+255),w,b
  3206  0008A4  0100               	movlb	0	; () banked
  3207  0008A6  6FD7               	movwf	hxSPPCarbonReadReg_test@tempByte& (0+255),b
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;HX_SPP_CARBON.c: 246: if (tempByte & 0x80){
  3211  0008A8  0100               	movlb	0	; () banked
  3212  0008AA  AFD7               	btfss	hxSPPCarbonReadReg_test@tempByte& (0+255),7,b
  3213  0008AC  D009               	goto	l7327
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;HX_SPP_CARBON.c: 248: LATA = 0x03;
  3217  0008AE  0E03               	movlw	3
  3218  0008B0  6E83               	movwf	3971,c	;volatile
  3219                           
  3220                           ; BSR set to: 0
  3221                           ;HX_SPP_CARBON.c: 249: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3222  0008B2  0E05               	movlw	5
  3223  0008B4                     u7367:
  3224  0008B4  2EE8               	decfsz	wreg,f,c
  3225  0008B6  D7FE               	bra	u7367
  3226  0008B8  D008               	goto	L9
  3227  0008BA                     l7325:
  3228                           
  3229                           ;HX_SPP_CARBON.c: 250: LATA = 0x01;
  3230  0008BA  0E01               	movlw	1
  3231  0008BC  6E83               	movwf	3971,c	;volatile
  3232                           
  3233                           ;HX_SPP_CARBON.c: 251: }
  3234  0008BE  D007               	goto	l7333
  3235  0008C0                     l7327:
  3236                           
  3237                           ;HX_SPP_CARBON.c: 252: else{
  3238                           ;HX_SPP_CARBON.c: 253: LATA = 0x00;
  3239  0008C0  0E00               	movlw	0
  3240  0008C2  6E83               	movwf	3971,c	;volatile
  3241                           
  3242                           ;HX_SPP_CARBON.c: 254: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3243  0008C4  0E05               	movlw	5
  3244  0008C6                     u7377:
  3245  0008C6  2EE8               	decfsz	wreg,f,c
  3246  0008C8  D7FE               	bra	u7377
  3247  0008CA                     L9:
  3248  0008CA  F000               	nop	
  3249  0008CC  D7F6               	goto	l7325
  3250  0008CE                     l7333:
  3251  0008CE  0100               	movlb	0	; () banked
  3252  0008D0  2BD1               	incf	hxSPPCarbonReadReg_test@j_735& (0+255),f,b
  3253  0008D2  D7E0               	goto	l7313
  3254  0008D4                     l7335:
  3255                           
  3256                           ; BSR set to: 0
  3257  0008D4  0100               	movlb	0	; () banked
  3258  0008D6  2BD0               	incf	hxSPPCarbonReadReg_test@i& (0+255),f,b
  3259  0008D8                     l7337:
  3260                           
  3261                           ; BSR set to: 0
  3262  0008D8  0100               	movlb	0	; () banked
  3263  0008DA  51CB               	movf	hxSPPCarbonReadReg_test@numTX& (0+255),w,b
  3264  0008DC  0100               	movlb	0	; () banked
  3265  0008DE  5DD0               	subwf	hxSPPCarbonReadReg_test@i& (0+255),w,b
  3266  0008E0  A0D8               	btfss	status,0,c
  3267  0008E2  D7A8               	goto	l7291
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;HX_SPP_CARBON.c: 256: }
  3271                           ;HX_SPP_CARBON.c: 257: }
  3272                           ;HX_SPP_CARBON.c: 258: }
  3273                           ;HX_SPP_CARBON.c: 261: if (oddParityCalc)
  3274                           
  3275                           ; BSR set to: 0
  3276  0008E4  0100               	movlb	0	; () banked
  3277  0008E6  51CE               	movf	hxSPPCarbonReadReg_test@oddParityCalc& (0+255),w,b
  3278  0008E8  0100               	movlb	0	; () banked
  3279  0008EA  B4D8               	btfsc	status,2,c
  3280  0008EC  D006               	goto	l7347
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;HX_SPP_CARBON.c: 262: {
  3284                           ;HX_SPP_CARBON.c: 263: LATA = 0x03;
  3285  0008EE  0E03               	movlw	3
  3286  0008F0  6E83               	movwf	3971,c	;volatile
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;HX_SPP_CARBON.c: 264: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3290  0008F2  0E05               	movlw	5
  3291  0008F4                     u7387:
  3292  0008F4  2EE8               	decfsz	wreg,f,c
  3293  0008F6  D7FE               	bra	u7387
  3294  0008F8  D005               	goto	L32
  3295  0008FA                     l7347:
  3296                           
  3297                           ;HX_SPP_CARBON.c: 267: else
  3298                           ;HX_SPP_CARBON.c: 268: {
  3299                           ;HX_SPP_CARBON.c: 269: LATA = 0x00;
  3300  0008FA  0E00               	movlw	0
  3301  0008FC  6E83               	movwf	3971,c	;volatile
  3302                           
  3303                           ;HX_SPP_CARBON.c: 270: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3304  0008FE  0E05               	movlw	5
  3305  000900                     u7397:
  3306  000900  2EE8               	decfsz	wreg,f,c
  3307  000902  D7FE               	bra	u7397
  3308  000904                     L32:
  3309  000904  F000               	nop	
  3310                           
  3311                           ;HX_SPP_CARBON.c: 271: LATA = 0x01;
  3312  000906  0E01               	movlw	1
  3313  000908  6E83               	movwf	3971,c	;volatile
  3314                           
  3315                           ;HX_SPP_CARBON.c: 272: }
  3316                           ;HX_SPP_CARBON.c: 275: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3317  00090A  0E05               	movlw	5
  3318  00090C                     u7407:
  3319  00090C  2EE8               	decfsz	wreg,f,c
  3320  00090E  D7FE               	bra	u7407
  3321  000910  F000               	nop	
  3322                           
  3323                           ;HX_SPP_CARBON.c: 276: LATA = 0x00;
  3324  000912  0E00               	movlw	0
  3325  000914  6E83               	movwf	3971,c	;volatile
  3326                           
  3327                           ;HX_SPP_CARBON.c: 277: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3328  000916  0E05               	movlw	5
  3329  000918                     u7417:
  3330  000918  2EE8               	decfsz	wreg,f,c
  3331  00091A  D7FE               	bra	u7417
  3332  00091C  F000               	nop	
  3333                           
  3334                           ;HX_SPP_CARBON.c: 284: for (uint8_t i = 0; i < numRX; i++)
  3335  00091E  0E00               	movlw	0
  3336  000920  0100               	movlb	0	; () banked
  3337  000922  6FD2               	movwf	hxSPPCarbonReadReg_test@i_736& (0+255),b
  3338  000924  D091               	goto	l7429
  3339  000926                     l7357:
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;HX_SPP_CARBON.c: 285: {
  3343                           ;HX_SPP_CARBON.c: 286: tempByte = 0;
  3344  000926  0E00               	movlw	0
  3345  000928  0100               	movlb	0	; () banked
  3346  00092A  6FD7               	movwf	hxSPPCarbonReadReg_test@tempByte& (0+255),b
  3347                           
  3348                           ;HX_SPP_CARBON.c: 288: for(uint8_t j = 0; j < 8; j++)
  3349  00092C  0E00               	movlw	0
  3350  00092E  0100               	movlb	0	; () banked
  3351  000930  6FD3               	movwf	hxSPPCarbonReadReg_test@j_737& (0+255),b
  3352  000932                     l7359:
  3353                           
  3354                           ; BSR set to: 0
  3355  000932  0E07               	movlw	7
  3356  000934  0100               	movlb	0	; () banked
  3357  000936  65D3               	cpfsgt	hxSPPCarbonReadReg_test@j_737& (0+255),b
  3358  000938  D001               	goto	l7363
  3359  00093A  D072               	goto	l7421
  3360  00093C                     l7363:
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;HX_SPP_CARBON.c: 289: {
  3364                           ;HX_SPP_CARBON.c: 290: LATA = 0x01;
  3365  00093C  0E01               	movlw	1
  3366  00093E  6E83               	movwf	3971,c	;volatile
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;HX_SPP_CARBON.c: 291: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3370  000940  0E05               	movlw	5
  3371  000942                     u7427:
  3372  000942  2EE8               	decfsz	wreg,f,c
  3373  000944  D7FE               	bra	u7427
  3374  000946  F000               	nop	
  3375                           
  3376                           ;HX_SPP_CARBON.c: 292: LATA = 0x03;
  3377  000948  0E03               	movlw	3
  3378  00094A  6E83               	movwf	3971,c	;volatile
  3379                           
  3380                           ;HX_SPP_CARBON.c: 293: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3381  00094C  0E05               	movlw	5
  3382  00094E                     u7437:
  3383  00094E  2EE8               	decfsz	wreg,f,c
  3384  000950  D7FE               	bra	u7437
  3385  000952  F000               	nop	
  3386                           
  3387                           ;HX_SPP_CARBON.c: 294: LATA = 0x00;
  3388  000954  0E00               	movlw	0
  3389  000956  6E83               	movwf	3971,c	;volatile
  3390                           
  3391                           ;HX_SPP_CARBON.c: 295: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3392  000958  0E05               	movlw	5
  3393  00095A                     u7447:
  3394  00095A  2EE8               	decfsz	wreg,f,c
  3395  00095C  D7FE               	bra	u7447
  3396  00095E  F000               	nop	
  3397                           
  3398                           ;HX_SPP_CARBON.c: 299: tempByte = tempByte << 1;
  3399  000960  0100               	movlb	0	; () banked
  3400  000962  51D7               	movf	hxSPPCarbonReadReg_test@tempByte& (0+255),w,b
  3401  000964  25D7               	addwf	hxSPPCarbonReadReg_test@tempByte& (0+255),w,b
  3402  000966  0100               	movlb	0	; () banked
  3403  000968  6FD7               	movwf	hxSPPCarbonReadReg_test@tempByte& (0+255),b
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;HX_SPP_CARBON.c: 300: readbackCommState = 0;
  3407  00096A  0E00               	movlw	0
  3408  00096C  0100               	movlb	0	; () banked
  3409  00096E  6FD6               	movwf	hxSPPCarbonReadReg_test@readbackCommState& (0+255),b
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;HX_SPP_CARBON.c: 301: bitVal = 2;
  3413  000970  0E02               	movlw	2
  3414  000972  0100               	movlb	0	; () banked
  3415  000974  6FD4               	movwf	hxSPPCarbonReadReg_test@bitVal& (0+255),b
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;HX_SPP_CARBON.c: 303: readbackTimer = 40;
  3419  000976  0E00               	movlw	0
  3420  000978  0100               	movlb	0	; () banked
  3421  00097A  6FCD               	movwf	(hxSPPCarbonReadReg_test@readbackTimer+1)& (0+255),b
  3422  00097C  0E28               	movlw	40
  3423  00097E  6FCC               	movwf	hxSPPCarbonReadReg_test@readbackTimer& (0+255),b
  3424                           
  3425                           ;HX_SPP_CARBON.c: 304: while(readbackTimer--)
  3426  000980  D031               	goto	l7405
  3427  000982                     l585:
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;HX_SPP_CARBON.c: 305: {
  3431                           ;HX_SPP_CARBON.c: 306: portAVal = PORTA;
  3432  000982  CF8D F0CA          	movff	3981,hxSPPCarbonReadReg_test@portAVal	;volatile
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;HX_SPP_CARBON.c: 307: if (readbackCommState == 0)
  3436  000986  0100               	movlb	0	; () banked
  3437  000988  51D6               	movf	hxSPPCarbonReadReg_test@readbackCommState& (0+255),w,b
  3438  00098A  0100               	movlb	0	; () banked
  3439  00098C  A4D8               	btfss	status,2,c
  3440  00098E  D007               	goto	l7387
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;HX_SPP_CARBON.c: 308: {
  3444                           ;HX_SPP_CARBON.c: 310: if (PORTAbits.RA4 == 1)
  3445  000990  A88D               	btfss	3981,4,c	;volatile
  3446  000992  D028               	goto	l7405
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;HX_SPP_CARBON.c: 312: {
  3450                           ;HX_SPP_CARBON.c: 313: readbackCommState = 1;
  3451  000994  0E01               	movlw	1
  3452  000996  0100               	movlb	0	; () banked
  3453  000998  6FD6               	movwf	hxSPPCarbonReadReg_test@readbackCommState& (0+255),b
  3454                           
  3455                           ;HX_SPP_CARBON.c: 314: bitVal = 3;
  3456  00099A  0E03               	movlw	3
  3457  00099C  D021               	goto	L12
  3458  00099E                     l7387:
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;HX_SPP_CARBON.c: 317: else if (readbackCommState == 1)
  3462  00099E  0100               	movlb	0	; () banked
  3463  0009A0  05D6               	decf	hxSPPCarbonReadReg_test@readbackCommState& (0+255),w,b
  3464  0009A2  A4D8               	btfss	status,2,c
  3465  0009A4  D007               	goto	l7393
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;HX_SPP_CARBON.c: 318: {
  3469                           ;HX_SPP_CARBON.c: 319: if (PORTAbits.RA4 == 0)
  3470  0009A6  B88D               	btfsc	3981,4,c	;volatile
  3471  0009A8  D01D               	goto	l7405
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;HX_SPP_CARBON.c: 321: {
  3475                           ;HX_SPP_CARBON.c: 322: readbackCommState = 2;
  3476  0009AA  0E02               	movlw	2
  3477  0009AC  0100               	movlb	0	; () banked
  3478  0009AE  6FD6               	movwf	hxSPPCarbonReadReg_test@readbackCommState& (0+255),b
  3479                           
  3480                           ;HX_SPP_CARBON.c: 323: bitVal = 0;
  3481  0009B0  0E00               	movlw	0
  3482  0009B2  D016               	goto	L12
  3483  0009B4                     l7393:
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;HX_SPP_CARBON.c: 326: else if (readbackCommState == 2)
  3487  0009B4  0E02               	movlw	2
  3488  0009B6  0100               	movlb	0	; () banked
  3489  0009B8  19D6               	xorwf	hxSPPCarbonReadReg_test@readbackCommState& (0+255),w,b
  3490  0009BA  A4D8               	btfss	status,2,c
  3491  0009BC  D007               	goto	l7399
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;HX_SPP_CARBON.c: 327: {
  3495                           ;HX_SPP_CARBON.c: 328: if (PORTAbits.RA4 == 1)
  3496  0009BE  A88D               	btfss	3981,4,c	;volatile
  3497  0009C0  D011               	goto	l7405
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;HX_SPP_CARBON.c: 330: {
  3501                           ;HX_SPP_CARBON.c: 331: readbackCommState = 3;
  3502  0009C2  0E03               	movlw	3
  3503  0009C4  0100               	movlb	0	; () banked
  3504  0009C6  6FD6               	movwf	hxSPPCarbonReadReg_test@readbackCommState& (0+255),b
  3505                           
  3506                           ;HX_SPP_CARBON.c: 332: bitVal = 4;
  3507  0009C8  0E04               	movlw	4
  3508  0009CA  D00A               	goto	L12
  3509  0009CC                     l7399:
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;HX_SPP_CARBON.c: 335: else if (readbackCommState == 3)
  3513  0009CC  0E03               	movlw	3
  3514  0009CE  0100               	movlb	0	; () banked
  3515  0009D0  19D6               	xorwf	hxSPPCarbonReadReg_test@readbackCommState& (0+255),w,b
  3516  0009D2  B4D8               	btfsc	status,2,c
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;HX_SPP_CARBON.c: 336: {
  3520                           ;HX_SPP_CARBON.c: 337: if (PORTAbits.RA4 == 0)
  3521  0009D4  B88D               	btfsc	3981,4,c	;volatile
  3522  0009D6  D006               	goto	l7405
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;HX_SPP_CARBON.c: 339: {
  3526                           ;HX_SPP_CARBON.c: 340: readbackCommState = 3;
  3527  0009D8  0E03               	movlw	3
  3528  0009DA  0100               	movlb	0	; () banked
  3529  0009DC  6FD6               	movwf	hxSPPCarbonReadReg_test@readbackCommState& (0+255),b
  3530                           
  3531                           ;HX_SPP_CARBON.c: 341: bitVal = 1;
  3532  0009DE  0E01               	movlw	1
  3533  0009E0                     L12:
  3534  0009E0  0100               	movlb	0	; () banked
  3535  0009E2  6FD4               	movwf	hxSPPCarbonReadReg_test@bitVal& (0+255),b
  3536  0009E4                     l7405:
  3537                           
  3538                           ; BSR set to: 0
  3539  0009E4  0100               	movlb	0	; () banked
  3540  0009E6  07CC               	decf	hxSPPCarbonReadReg_test@readbackTimer& (0+255),f,b
  3541  0009E8  A0D8               	btfss	status,0,c
  3542  0009EA  07CD               	decf	(hxSPPCarbonReadReg_test@readbackTimer+1)& (0+255),f,b
  3543  0009EC  0100               	movlb	0	; () banked
  3544  0009EE  29CC               	incf	hxSPPCarbonReadReg_test@readbackTimer& (0+255),w,b
  3545  0009F0  E1C8               	bnz	l585
  3546  0009F2  0100               	movlb	0	; () banked
  3547  0009F4  29CD               	incf	(hxSPPCarbonReadReg_test@readbackTimer+1)& (0+255),w,b
  3548  0009F6  A4D8               	btfss	status,2,c
  3549  0009F8  D7C4               	goto	l585
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;HX_SPP_CARBON.c: 342: }
  3553                           ;HX_SPP_CARBON.c: 343: }
  3554                           ;HX_SPP_CARBON.c: 344: }
  3555                           ;HX_SPP_CARBON.c: 345: if(bitVal == 0)
  3556                           
  3557                           ; BSR set to: 0
  3558  0009FA  0100               	movlb	0	; () banked
  3559  0009FC  51D4               	movf	hxSPPCarbonReadReg_test@bitVal& (0+255),w,b
  3560  0009FE  0100               	movlb	0	; () banked
  3561  000A00  B4D8               	btfsc	status,2,c
  3562  000A02  D00B               	goto	l7417
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;HX_SPP_CARBON.c: 350: {
  3566                           ;HX_SPP_CARBON.c: 351: tempByte = tempByte++;
  3567                           
  3568                           ; BSR set to: 0
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;HX_SPP_CARBON.c: 346: {
  3572                           ;HX_SPP_CARBON.c: 348: }
  3573  000A04  0100               	movlb	0	; () banked
  3574  000A06  05D4               	decf	hxSPPCarbonReadReg_test@bitVal& (0+255),w,b
  3575  000A08  A4D8               	btfss	status,2,c
  3576  000A0A  D003               	goto	l7415
  3577                           
  3578                           ; BSR set to: 0
  3579  000A0C  0100               	movlb	0	; () banked
  3580  000A0E  2BD7               	incf	hxSPPCarbonReadReg_test@tempByte& (0+255),f,b
  3581                           
  3582                           ;HX_SPP_CARBON.c: 352: }
  3583  000A10  D004               	goto	l7417
  3584  000A12                     l7415:
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;HX_SPP_CARBON.c: 353: else
  3588                           ;HX_SPP_CARBON.c: 354: {
  3589                           ;HX_SPP_CARBON.c: 355: tempHxState = 0x41;
  3590  000A12  0E41               	movlw	65
  3591  000A14  0100               	movlb	0	; () banked
  3592  000A16  6FD5               	movwf	hxSPPCarbonReadReg_test@tempHxState& (0+255),b
  3593                           
  3594                           ;HX_SPP_CARBON.c: 356: break;
  3595  000A18  D003               	goto	l7421
  3596  000A1A                     l7417:
  3597                           
  3598                           ; BSR set to: 0
  3599  000A1A  0100               	movlb	0	; () banked
  3600  000A1C  2BD3               	incf	hxSPPCarbonReadReg_test@j_737& (0+255),f,b
  3601  000A1E  D789               	goto	l7359
  3602  000A20                     l7421:
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;HX_SPP_CARBON.c: 357: }
  3606                           ;HX_SPP_CARBON.c: 358: }
  3607                           ;HX_SPP_CARBON.c: 359: if (tempHxState == 0x41)
  3608  000A20  0E41               	movlw	65
  3609  000A22  0100               	movlb	0	; () banked
  3610  000A24  19D5               	xorwf	hxSPPCarbonReadReg_test@tempHxState& (0+255),w,b
  3611  000A26  B4D8               	btfsc	status,2,c
  3612  000A28  D015               	goto	l7431
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;HX_SPP_CARBON.c: 362: }
  3616                           ;HX_SPP_CARBON.c: 363: rxBuffer[i] = tempByte;
  3617                           
  3618                           ; BSR set to: 0
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;HX_SPP_CARBON.c: 360: {
  3622                           ;HX_SPP_CARBON.c: 361: break;
  3623  000A2A  0100               	movlb	0	; () banked
  3624  000A2C  51D2               	movf	hxSPPCarbonReadReg_test@i_736& (0+255),w,b
  3625  000A2E  0D01               	mullw	1
  3626  000A30  50F3               	movf	prodl,w,c
  3627  000A32  0100               	movlb	0	; () banked
  3628  000A34  25C8               	addwf	hxSPPCarbonReadReg_test@rxBuffer& (0+255),w,b
  3629  000A36  6ED9               	movwf	fsr2l,c
  3630  000A38  50F4               	movf	prodh,w,c
  3631  000A3A  0100               	movlb	0	; () banked
  3632  000A3C  21C9               	addwfc	(hxSPPCarbonReadReg_test@rxBuffer+1)& (0+255),w,b
  3633  000A3E  6EDA               	movwf	fsr2h,c
  3634  000A40  C0D7  FFDF         	movff	hxSPPCarbonReadReg_test@tempByte,indf2
  3635                           
  3636                           ; BSR set to: 0
  3637  000A44  0100               	movlb	0	; () banked
  3638  000A46  2BD2               	incf	hxSPPCarbonReadReg_test@i_736& (0+255),f,b
  3639  000A48                     l7429:
  3640                           
  3641                           ; BSR set to: 0
  3642  000A48  0100               	movlb	0	; () banked
  3643  000A4A  51C5               	movf	hxSPPCarbonReadReg_test@numRX& (0+255),w,b
  3644  000A4C  0100               	movlb	0	; () banked
  3645  000A4E  5DD2               	subwf	hxSPPCarbonReadReg_test@i_736& (0+255),w,b
  3646  000A50  A0D8               	btfss	status,0,c
  3647  000A52  D769               	goto	l7357
  3648  000A54                     l7431:
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;HX_SPP_CARBON.c: 364: }
  3652                           ;HX_SPP_CARBON.c: 365: if(tempHxState == 0x41)
  3653  000A54  0E41               	movlw	65
  3654  000A56  0100               	movlb	0	; () banked
  3655  000A58  19D5               	xorwf	hxSPPCarbonReadReg_test@tempHxState& (0+255),w,b
  3656  000A5A  A4D8               	btfss	status,2,c
  3657  000A5C  D002               	goto	l7435
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;HX_SPP_CARBON.c: 366: {
  3661                           ;HX_SPP_CARBON.c: 367: tempHxState = 0x41;
  3662  000A5E  0E41               	movlw	65
  3663  000A60  D001               	goto	L13
  3664  000A62                     l7435:
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;HX_SPP_CARBON.c: 369: else
  3668                           ;HX_SPP_CARBON.c: 370: {
  3669                           ;HX_SPP_CARBON.c: 371: tempHxState = 0x10;
  3670  000A62  0E10               	movlw	16
  3671  000A64                     L13:
  3672  000A64  0100               	movlb	0	; () banked
  3673  000A66  6FD5               	movwf	hxSPPCarbonReadReg_test@tempHxState& (0+255),b
  3674                           
  3675                           ; BSR set to: 0
  3676                           ;HX_SPP_CARBON.c: 372: }
  3677                           ;HX_SPP_CARBON.c: 373: return tempHxState;
  3678  000A68  0100               	movlb	0	; () banked
  3679  000A6A  51D5               	movf	hxSPPCarbonReadReg_test@tempHxState& (0+255),w,b
  3680  000A6C  0012               	return	
  3681  000A6E                     __end_of_hxSPPCarbonReadReg_test:
  3682                           	opt stack 0
  3683                           tblptru	equ	0xFF8
  3684                           tblptrh	equ	0xFF7
  3685                           tblptrl	equ	0xFF6
  3686                           tablat	equ	0xFF5
  3687                           prodh	equ	0xFF4
  3688                           prodl	equ	0xFF3
  3689                           intcon	equ	0xFF2
  3690                           postinc0	equ	0xFEE
  3691                           wreg	equ	0xFE8
  3692                           postinc1	equ	0xFE6
  3693                           fsr1h	equ	0xFE2
  3694                           fsr1l	equ	0xFE1
  3695                           indf2	equ	0xFDF
  3696                           postinc2	equ	0xFDE
  3697                           fsr2h	equ	0xFDA
  3698                           fsr2l	equ	0xFD9
  3699                           status	equ	0xFD8
  3700                           
  3701 ;; *************** function _hxSPPCarbonProgram_test *****************
  3702 ;; Defined at:
  3703 ;;		line 483 in file "HX_SPP_CARBON.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;  numTX           1    wreg     unsigned char 
  3706 ;;  txBuffer        2    7[BANK0 ] PTR unsigned char 
  3707 ;;		 -> hx_inData(64), 
  3708 ;;  rxBuffer        2    9[BANK0 ] PTR unsigned char 
  3709 ;;		 -> hx_mainData(61), 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;  numTX           1   11[BANK0 ] unsigned char 
  3712 ;;  j               1   15[BANK0 ] unsigned char 
  3713 ;;  i               1   14[BANK0 ] unsigned char 
  3714 ;;  j               1   13[BANK0 ] unsigned char 
  3715 ;;  tempByte        1   16[BANK0 ] unsigned char 
  3716 ;;  oddParityCal    1   12[BANK0 ] unsigned char 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  1    wreg      void 
  3719 ;; Registers used:
  3720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3726 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3727 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3729 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3730 ;;Total ram usage:       10 bytes
  3731 ;; Hardware stack levels used:    1
  3732 ;; Hardware stack levels required when called:    8
  3733 ;; This function calls:
  3734 ;;		_hxOddParityCalc
  3735 ;; This function is called by:
  3736 ;;		_run_SPPCarbon_test
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           	psect	text7
  3741  0015B6                     __ptext7:
  3742                           	opt stack 0
  3743  0015B6                     _hxSPPCarbonProgram_test:
  3744                           	opt stack 21
  3745                           
  3746                           ; BSR set to: 0
  3747                           ;incstack = 0
  3748                           ;hxSPPCarbonProgram_test@numTX stored from wreg
  3749  0015B6  0100               	movlb	0	; () banked
  3750  0015B8  6FC9               	movwf	hxSPPCarbonProgram_test@numTX& (0+255),b
  3751                           
  3752                           ;HX_SPP_CARBON.c: 485: uint8_t tempByte;
  3753                           ;HX_SPP_CARBON.c: 486: uint8_t oddParityCalc = 0;
  3754  0015BA  0E00               	movlw	0
  3755  0015BC  0100               	movlb	0	; () banked
  3756  0015BE  6FCA               	movwf	hxSPPCarbonProgram_test@oddParityCalc& (0+255),b
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;HX_SPP_CARBON.c: 488: oddParityCalc = hxOddParityCalc(txBuffer, 3);
  3760  0015C0  C0C5  F0BE         	movff	hxSPPCarbonProgram_test@txBuffer,hxOddParityCalc@buff
  3761  0015C4  C0C6  F0BF         	movff	hxSPPCarbonProgram_test@txBuffer+1,hxOddParityCalc@buff+1
  3762  0015C8  0E03               	movlw	3
  3763  0015CA  0100               	movlb	0	; () banked
  3764  0015CC  6FC0               	movwf	hxOddParityCalc@size& (0+255),b
  3765  0015CE  EC7C  F010         	call	_hxOddParityCalc	;wreg free
  3766  0015D2  0100               	movlb	0	; () banked
  3767  0015D4  6FCA               	movwf	hxSPPCarbonProgram_test@oddParityCalc& (0+255),b
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;HX_SPP_CARBON.c: 495: tempByte = 0xA0;
  3771  0015D6  0EA0               	movlw	160
  3772  0015D8  0100               	movlb	0	; () banked
  3773  0015DA  6FCE               	movwf	hxSPPCarbonProgram_test@tempByte& (0+255),b
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;HX_SPP_CARBON.c: 496: if (tempByte & 0x80){
  3777  0015DC  0100               	movlb	0	; () banked
  3778  0015DE  AFCE               	btfss	hxSPPCarbonProgram_test@tempByte& (0+255),7,b
  3779  0015E0  D00F               	goto	l7633
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;HX_SPP_CARBON.c: 498: LATA = 0x01;
  3783  0015E2  0E01               	movlw	1
  3784  0015E4  6E83               	movwf	3971,c	;volatile
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;HX_SPP_CARBON.c: 499: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3788  0015E6  0E05               	movlw	5
  3789  0015E8                     u7457:
  3790  0015E8  2EE8               	decfsz	wreg,f,c
  3791  0015EA  D7FE               	bra	u7457
  3792  0015EC  F000               	nop	
  3793                           
  3794                           ;HX_SPP_CARBON.c: 500: LATA = 0x03;
  3795  0015EE  0E03               	movlw	3
  3796  0015F0  6E83               	movwf	3971,c	;volatile
  3797                           
  3798                           ;HX_SPP_CARBON.c: 501: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3799  0015F2  0E05               	movlw	5
  3800  0015F4                     u7467:
  3801  0015F4  2EE8               	decfsz	wreg,f,c
  3802  0015F6  D7FE               	bra	u7467
  3803  0015F8  D00E               	goto	L14
  3804  0015FA                     l7631:
  3805                           
  3806                           ;HX_SPP_CARBON.c: 502: LATA = 0x01;
  3807  0015FA  0E01               	movlw	1
  3808  0015FC  6E83               	movwf	3971,c	;volatile
  3809                           
  3810                           ;HX_SPP_CARBON.c: 503: }
  3811  0015FE  D00D               	goto	l7641
  3812  001600                     l7633:
  3813                           
  3814                           ;HX_SPP_CARBON.c: 504: else{
  3815                           ;HX_SPP_CARBON.c: 505: LATA = 0x01;
  3816  001600  0E01               	movlw	1
  3817  001602  6E83               	movwf	3971,c	;volatile
  3818                           
  3819                           ;HX_SPP_CARBON.c: 506: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3820  001604  0E05               	movlw	5
  3821  001606                     u7477:
  3822  001606  2EE8               	decfsz	wreg,f,c
  3823  001608  D7FE               	bra	u7477
  3824  00160A  F000               	nop	
  3825                           
  3826                           ;HX_SPP_CARBON.c: 507: LATA = 0x00;
  3827  00160C  0E00               	movlw	0
  3828  00160E  6E83               	movwf	3971,c	;volatile
  3829                           
  3830                           ;HX_SPP_CARBON.c: 508: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3831  001610  0E05               	movlw	5
  3832  001612                     u7487:
  3833  001612  2EE8               	decfsz	wreg,f,c
  3834  001614  D7FE               	bra	u7487
  3835  001616                     L14:
  3836  001616  F000               	nop	
  3837  001618  D7F0               	goto	l7631
  3838  00161A                     l7641:
  3839                           
  3840                           ;HX_SPP_CARBON.c: 510: }
  3841                           ;HX_SPP_CARBON.c: 511: for (uint8_t j = 1; j < 4; j++){
  3842  00161A  0E01               	movlw	1
  3843  00161C  0100               	movlb	0	; () banked
  3844  00161E  6FCB               	movwf	hxSPPCarbonProgram_test@j& (0+255),b
  3845  001620                     l7643:
  3846                           
  3847                           ; BSR set to: 0
  3848  001620  0E03               	movlw	3
  3849  001622  0100               	movlb	0	; () banked
  3850  001624  65CB               	cpfsgt	hxSPPCarbonProgram_test@j& (0+255),b
  3851  001626  D001               	goto	l7647
  3852  001628  D01B               	goto	l7665
  3853  00162A                     l7647:
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;HX_SPP_CARBON.c: 512: tempByte = tempByte << 1;
  3857  00162A  0100               	movlb	0	; () banked
  3858  00162C  51CE               	movf	hxSPPCarbonProgram_test@tempByte& (0+255),w,b
  3859  00162E  25CE               	addwf	hxSPPCarbonProgram_test@tempByte& (0+255),w,b
  3860  001630  0100               	movlb	0	; () banked
  3861  001632  6FCE               	movwf	hxSPPCarbonProgram_test@tempByte& (0+255),b
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;HX_SPP_CARBON.c: 513: if (tempByte & 0x80){
  3865  001634  0100               	movlb	0	; () banked
  3866  001636  AFCE               	btfss	hxSPPCarbonProgram_test@tempByte& (0+255),7,b
  3867  001638  D009               	goto	l7657
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;HX_SPP_CARBON.c: 515: LATA = 0x03;
  3871  00163A  0E03               	movlw	3
  3872  00163C  6E83               	movwf	3971,c	;volatile
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;HX_SPP_CARBON.c: 516: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3876  00163E  0E05               	movlw	5
  3877  001640                     u7497:
  3878  001640  2EE8               	decfsz	wreg,f,c
  3879  001642  D7FE               	bra	u7497
  3880  001644  D008               	goto	L15
  3881  001646                     l7655:
  3882                           
  3883                           ;HX_SPP_CARBON.c: 517: LATA = 0x01;
  3884  001646  0E01               	movlw	1
  3885  001648  6E83               	movwf	3971,c	;volatile
  3886                           
  3887                           ;HX_SPP_CARBON.c: 518: }
  3888  00164A  D007               	goto	l7663
  3889  00164C                     l7657:
  3890                           
  3891                           ;HX_SPP_CARBON.c: 519: else{
  3892                           ;HX_SPP_CARBON.c: 520: LATA = 0x00;
  3893  00164C  0E00               	movlw	0
  3894  00164E  6E83               	movwf	3971,c	;volatile
  3895                           
  3896                           ;HX_SPP_CARBON.c: 521: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3897  001650  0E05               	movlw	5
  3898  001652                     u7507:
  3899  001652  2EE8               	decfsz	wreg,f,c
  3900  001654  D7FE               	bra	u7507
  3901  001656                     L15:
  3902  001656  F000               	nop	
  3903  001658  D7F6               	goto	l7655
  3904  00165A                     l7663:
  3905  00165A  0100               	movlb	0	; () banked
  3906  00165C  2BCB               	incf	hxSPPCarbonProgram_test@j& (0+255),f,b
  3907  00165E  D7E0               	goto	l7643
  3908  001660                     l7665:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;HX_SPP_CARBON.c: 523: }
  3912                           ;HX_SPP_CARBON.c: 524: }
  3913                           ;HX_SPP_CARBON.c: 526: for (uint8_t i = 0; i < numTX; i++){
  3914  001660  0E00               	movlw	0
  3915  001662  0100               	movlb	0	; () banked
  3916  001664  6FCC               	movwf	hxSPPCarbonProgram_test@i& (0+255),b
  3917  001666  D052               	goto	l7713
  3918  001668                     l7667:
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;HX_SPP_CARBON.c: 528: tempByte = txBuffer[i];
  3922  001668  0100               	movlb	0	; () banked
  3923  00166A  51CC               	movf	hxSPPCarbonProgram_test@i& (0+255),w,b
  3924  00166C  0D01               	mullw	1
  3925  00166E  50F3               	movf	prodl,w,c
  3926  001670  0100               	movlb	0	; () banked
  3927  001672  25C5               	addwf	hxSPPCarbonProgram_test@txBuffer& (0+255),w,b
  3928  001674  6ED9               	movwf	fsr2l,c
  3929  001676  50F4               	movf	prodh,w,c
  3930  001678  0100               	movlb	0	; () banked
  3931  00167A  21C6               	addwfc	(hxSPPCarbonProgram_test@txBuffer+1)& (0+255),w,b
  3932  00167C  6EDA               	movwf	fsr2h,c
  3933  00167E  50DF               	movf	indf2,w,c
  3934  001680  0100               	movlb	0	; () banked
  3935  001682  6FCE               	movwf	hxSPPCarbonProgram_test@tempByte& (0+255),b
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;HX_SPP_CARBON.c: 529: if (tempByte & 0x80){
  3939  001684  0100               	movlb	0	; () banked
  3940  001686  AFCE               	btfss	hxSPPCarbonProgram_test@tempByte& (0+255),7,b
  3941  001688  D00F               	goto	l7679
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;HX_SPP_CARBON.c: 531: LATA = 0x01;
  3945  00168A  0E01               	movlw	1
  3946  00168C  6E83               	movwf	3971,c	;volatile
  3947                           
  3948                           ; BSR set to: 0
  3949                           ;HX_SPP_CARBON.c: 532: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3950  00168E  0E05               	movlw	5
  3951  001690                     u7517:
  3952  001690  2EE8               	decfsz	wreg,f,c
  3953  001692  D7FE               	bra	u7517
  3954  001694  F000               	nop	
  3955                           
  3956                           ;HX_SPP_CARBON.c: 533: LATA = 0x03;
  3957  001696  0E03               	movlw	3
  3958  001698  6E83               	movwf	3971,c	;volatile
  3959                           
  3960                           ;HX_SPP_CARBON.c: 534: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3961  00169A  0E05               	movlw	5
  3962  00169C                     u7527:
  3963  00169C  2EE8               	decfsz	wreg,f,c
  3964  00169E  D7FE               	bra	u7527
  3965  0016A0  D00E               	goto	L16
  3966  0016A2                     l7677:
  3967                           
  3968                           ;HX_SPP_CARBON.c: 535: LATA = 0x01;
  3969  0016A2  0E01               	movlw	1
  3970  0016A4  6E83               	movwf	3971,c	;volatile
  3971                           
  3972                           ;HX_SPP_CARBON.c: 536: }
  3973  0016A6  D00D               	goto	l7687
  3974  0016A8                     l7679:
  3975                           
  3976                           ;HX_SPP_CARBON.c: 537: else{
  3977                           ;HX_SPP_CARBON.c: 538: LATA = 0x01;
  3978  0016A8  0E01               	movlw	1
  3979  0016AA  6E83               	movwf	3971,c	;volatile
  3980                           
  3981                           ;HX_SPP_CARBON.c: 539: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3982  0016AC  0E05               	movlw	5
  3983  0016AE                     u7537:
  3984  0016AE  2EE8               	decfsz	wreg,f,c
  3985  0016B0  D7FE               	bra	u7537
  3986  0016B2  F000               	nop	
  3987                           
  3988                           ;HX_SPP_CARBON.c: 540: LATA = 0x00;
  3989  0016B4  0E00               	movlw	0
  3990  0016B6  6E83               	movwf	3971,c	;volatile
  3991                           
  3992                           ;HX_SPP_CARBON.c: 541: _delay((unsigned long)((1)*(64000000/4000000.0)));
  3993  0016B8  0E05               	movlw	5
  3994  0016BA                     u7547:
  3995  0016BA  2EE8               	decfsz	wreg,f,c
  3996  0016BC  D7FE               	bra	u7547
  3997  0016BE                     L16:
  3998  0016BE  F000               	nop	
  3999  0016C0  D7F0               	goto	l7677
  4000  0016C2                     l7687:
  4001                           
  4002                           ;HX_SPP_CARBON.c: 543: }
  4003                           ;HX_SPP_CARBON.c: 544: for (uint8_t j = 1; j < 8; j++){
  4004  0016C2  0E01               	movlw	1
  4005  0016C4  0100               	movlb	0	; () banked
  4006  0016C6  6FCD               	movwf	hxSPPCarbonProgram_test@j_755& (0+255),b
  4007  0016C8                     l7689:
  4008                           
  4009                           ; BSR set to: 0
  4010  0016C8  0E07               	movlw	7
  4011  0016CA  0100               	movlb	0	; () banked
  4012  0016CC  65CD               	cpfsgt	hxSPPCarbonProgram_test@j_755& (0+255),b
  4013  0016CE  D001               	goto	l7693
  4014  0016D0  D01B               	goto	l7711
  4015  0016D2                     l7693:
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;HX_SPP_CARBON.c: 545: tempByte = tempByte << 1;
  4019  0016D2  0100               	movlb	0	; () banked
  4020  0016D4  51CE               	movf	hxSPPCarbonProgram_test@tempByte& (0+255),w,b
  4021  0016D6  25CE               	addwf	hxSPPCarbonProgram_test@tempByte& (0+255),w,b
  4022  0016D8  0100               	movlb	0	; () banked
  4023  0016DA  6FCE               	movwf	hxSPPCarbonProgram_test@tempByte& (0+255),b
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;HX_SPP_CARBON.c: 546: if (tempByte & 0x80){
  4027  0016DC  0100               	movlb	0	; () banked
  4028  0016DE  AFCE               	btfss	hxSPPCarbonProgram_test@tempByte& (0+255),7,b
  4029  0016E0  D009               	goto	l7703
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;HX_SPP_CARBON.c: 548: LATA = 0x03;
  4033  0016E2  0E03               	movlw	3
  4034  0016E4  6E83               	movwf	3971,c	;volatile
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;HX_SPP_CARBON.c: 549: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4038  0016E6  0E05               	movlw	5
  4039  0016E8                     u7557:
  4040  0016E8  2EE8               	decfsz	wreg,f,c
  4041  0016EA  D7FE               	bra	u7557
  4042  0016EC  D008               	goto	L17
  4043  0016EE                     l7701:
  4044                           
  4045                           ;HX_SPP_CARBON.c: 550: LATA = 0x01;
  4046  0016EE  0E01               	movlw	1
  4047  0016F0  6E83               	movwf	3971,c	;volatile
  4048                           
  4049                           ;HX_SPP_CARBON.c: 551: }
  4050  0016F2  D007               	goto	l7709
  4051  0016F4                     l7703:
  4052                           
  4053                           ;HX_SPP_CARBON.c: 552: else{
  4054                           ;HX_SPP_CARBON.c: 553: LATA = 0x00;
  4055  0016F4  0E00               	movlw	0
  4056  0016F6  6E83               	movwf	3971,c	;volatile
  4057                           
  4058                           ;HX_SPP_CARBON.c: 554: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4059  0016F8  0E05               	movlw	5
  4060  0016FA                     u7567:
  4061  0016FA  2EE8               	decfsz	wreg,f,c
  4062  0016FC  D7FE               	bra	u7567
  4063  0016FE                     L17:
  4064  0016FE  F000               	nop	
  4065  001700  D7F6               	goto	l7701
  4066  001702                     l7709:
  4067  001702  0100               	movlb	0	; () banked
  4068  001704  2BCD               	incf	hxSPPCarbonProgram_test@j_755& (0+255),f,b
  4069  001706  D7E0               	goto	l7689
  4070  001708                     l7711:
  4071                           
  4072                           ; BSR set to: 0
  4073  001708  0100               	movlb	0	; () banked
  4074  00170A  2BCC               	incf	hxSPPCarbonProgram_test@i& (0+255),f,b
  4075  00170C                     l7713:
  4076                           
  4077                           ; BSR set to: 0
  4078  00170C  0100               	movlb	0	; () banked
  4079  00170E  51C9               	movf	hxSPPCarbonProgram_test@numTX& (0+255),w,b
  4080  001710  0100               	movlb	0	; () banked
  4081  001712  5DCC               	subwf	hxSPPCarbonProgram_test@i& (0+255),w,b
  4082  001714  A0D8               	btfss	status,0,c
  4083  001716  D7A8               	goto	l7667
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;HX_SPP_CARBON.c: 556: }
  4087                           ;HX_SPP_CARBON.c: 557: }
  4088                           ;HX_SPP_CARBON.c: 558: }
  4089                           ;HX_SPP_CARBON.c: 561: if (oddParityCalc)
  4090                           
  4091                           ; BSR set to: 0
  4092  001718  0100               	movlb	0	; () banked
  4093  00171A  51CA               	movf	hxSPPCarbonProgram_test@oddParityCalc& (0+255),w,b
  4094  00171C  0100               	movlb	0	; () banked
  4095  00171E  B4D8               	btfsc	status,2,c
  4096  001720  D006               	goto	l7723
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;HX_SPP_CARBON.c: 562: {
  4100                           ;HX_SPP_CARBON.c: 563: LATA = 0x03;
  4101  001722  0E03               	movlw	3
  4102  001724  6E83               	movwf	3971,c	;volatile
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;HX_SPP_CARBON.c: 564: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4106  001726  0E05               	movlw	5
  4107  001728                     u7577:
  4108  001728  2EE8               	decfsz	wreg,f,c
  4109  00172A  D7FE               	bra	u7577
  4110  00172C  D005               	goto	L33
  4111  00172E                     l7723:
  4112                           
  4113                           ;HX_SPP_CARBON.c: 567: else
  4114                           ;HX_SPP_CARBON.c: 568: {
  4115                           ;HX_SPP_CARBON.c: 569: LATA = 0x00;
  4116  00172E  0E00               	movlw	0
  4117  001730  6E83               	movwf	3971,c	;volatile
  4118                           
  4119                           ;HX_SPP_CARBON.c: 570: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4120  001732  0E05               	movlw	5
  4121  001734                     u7587:
  4122  001734  2EE8               	decfsz	wreg,f,c
  4123  001736  D7FE               	bra	u7587
  4124  001738                     L33:
  4125  001738  F000               	nop	
  4126                           
  4127                           ;HX_SPP_CARBON.c: 571: LATA = 0x01;
  4128  00173A  0E01               	movlw	1
  4129  00173C  6E83               	movwf	3971,c	;volatile
  4130                           
  4131                           ;HX_SPP_CARBON.c: 572: }
  4132                           ;HX_SPP_CARBON.c: 575: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4133  00173E  0E05               	movlw	5
  4134  001740                     u7597:
  4135  001740  2EE8               	decfsz	wreg,f,c
  4136  001742  D7FE               	bra	u7597
  4137  001744  F000               	nop	
  4138                           
  4139                           ;HX_SPP_CARBON.c: 576: LATA = 0x00;
  4140  001746  0E00               	movlw	0
  4141  001748  6E83               	movwf	3971,c	;volatile
  4142                           
  4143                           ;HX_SPP_CARBON.c: 577: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4144  00174A  0E05               	movlw	5
  4145  00174C                     u7607:
  4146  00174C  2EE8               	decfsz	wreg,f,c
  4147  00174E  D7FE               	bra	u7607
  4148  001750  F000               	nop	
  4149                           
  4150                           ;HX_SPP_CARBON.c: 582: rxBuffer[0] = 0x11;
  4151  001752  C0C7  FFD9         	movff	hxSPPCarbonProgram_test@rxBuffer,fsr2l
  4152  001756  C0C8  FFDA         	movff	hxSPPCarbonProgram_test@rxBuffer+1,fsr2h
  4153  00175A  0E11               	movlw	17
  4154  00175C  6EDF               	movwf	indf2,c
  4155                           
  4156                           ;HX_SPP_CARBON.c: 585: if(hx_state != 0x41)
  4157  00175E  0E41               	movlw	65
  4158  001760  183E               	xorwf	_hx_state,w,c
  4159  001762  B4D8               	btfsc	status,2,c
  4160  001764  D002               	goto	l646
  4161                           
  4162                           ;HX_SPP_CARBON.c: 586: {
  4163                           ;HX_SPP_CARBON.c: 587: hx_state = 0x10;
  4164  001766  0E10               	movlw	16
  4165  001768  6E3E               	movwf	_hx_state,c
  4166  00176A                     l646:
  4167                           
  4168                           ;HX_SPP_CARBON.c: 588: }
  4169                           ;HX_SPP_CARBON.c: 589: LATA = 0x03;
  4170  00176A  0E03               	movlw	3
  4171  00176C  6E83               	movwf	3971,c	;volatile
  4172  00176E  0012               	return		;funcret
  4173  001770                     __end_of_hxSPPCarbonProgram_test:
  4174                           	opt stack 0
  4175                           tblptru	equ	0xFF8
  4176                           tblptrh	equ	0xFF7
  4177                           tblptrl	equ	0xFF6
  4178                           tablat	equ	0xFF5
  4179                           prodh	equ	0xFF4
  4180                           prodl	equ	0xFF3
  4181                           intcon	equ	0xFF2
  4182                           postinc0	equ	0xFEE
  4183                           wreg	equ	0xFE8
  4184                           postinc1	equ	0xFE6
  4185                           fsr1h	equ	0xFE2
  4186                           fsr1l	equ	0xFE1
  4187                           indf2	equ	0xFDF
  4188                           postinc2	equ	0xFDE
  4189                           fsr2h	equ	0xFDA
  4190                           fsr2l	equ	0xFD9
  4191                           status	equ	0xFD8
  4192                           
  4193 ;; *************** function _hxSPPCarbonCheckBusy_test *****************
  4194 ;; Defined at:
  4195 ;;		line 593 in file "HX_SPP_CARBON.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;  numTX           1    wreg     unsigned char 
  4198 ;;  numRX           1    7[BANK0 ] unsigned char 
  4199 ;;  txBuffer        2    8[BANK0 ] PTR unsigned char 
  4200 ;;		 -> hx_inData(64), 
  4201 ;;  rxBuffer        2   10[BANK0 ] PTR unsigned char 
  4202 ;;		 -> hx_mainData(61), 
  4203 ;; Auto vars:     Size  Location     Type
  4204 ;;  numTX           1   14[BANK0 ] unsigned char 
  4205 ;;  j               1   22[BANK0 ] unsigned char 
  4206 ;;  j               1   20[BANK0 ] unsigned char 
  4207 ;;  i               1   21[BANK0 ] unsigned char 
  4208 ;;  i               1   19[BANK0 ] unsigned char 
  4209 ;;  j               1   18[BANK0 ] unsigned char 
  4210 ;;  readbackTime    2   15[BANK0 ] unsigned int 
  4211 ;;  tempByte        1   26[BANK0 ] unsigned char 
  4212 ;;  readbackComm    1   25[BANK0 ] unsigned char 
  4213 ;;  portAVal        1   24[BANK0 ] unsigned char 
  4214 ;;  bitVal          1   23[BANK0 ] unsigned char 
  4215 ;;  oddParityCal    1   17[BANK0 ] unsigned char 
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  1    wreg      void 
  4218 ;; Registers used:
  4219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4225 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4226 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4227 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4228 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4229 ;;Total ram usage:       20 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:    8
  4232 ;; This function calls:
  4233 ;;		_hxOddParityCalc
  4234 ;; This function is called by:
  4235 ;;		_run_SPPCarbon_test
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text8
  4240  0000E8                     __ptext8:
  4241                           	opt stack 0
  4242  0000E8                     _hxSPPCarbonCheckBusy_test:
  4243                           	opt stack 21
  4244                           
  4245                           ;incstack = 0
  4246                           ;hxSPPCarbonCheckBusy_test@numTX stored from wreg
  4247  0000E8  0100               	movlb	0	; () banked
  4248  0000EA  6FCC               	movwf	hxSPPCarbonCheckBusy_test@numTX& (0+255),b
  4249                           
  4250                           ;HX_SPP_CARBON.c: 595: uint8_t tempByte;
  4251                           ;HX_SPP_CARBON.c: 596: uint8_t readbackCommState;
  4252                           ;HX_SPP_CARBON.c: 597: uint8_t bitVal;
  4253                           ;HX_SPP_CARBON.c: 598: uint16_t readbackTimer;
  4254                           ;HX_SPP_CARBON.c: 599: uint8_t oddParityCalc = 0;
  4255  0000EC  0E00               	movlw	0
  4256  0000EE  0100               	movlb	0	; () banked
  4257  0000F0  6FCF               	movwf	hxSPPCarbonCheckBusy_test@oddParityCalc& (0+255),b
  4258                           
  4259                           ;HX_SPP_CARBON.c: 600: uint8_t portAVal = 0;
  4260  0000F2  0E00               	movlw	0
  4261  0000F4  0100               	movlb	0	; () banked
  4262  0000F6  6FD6               	movwf	hxSPPCarbonCheckBusy_test@portAVal& (0+255),b
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;HX_SPP_CARBON.c: 602: oddParityCalc = hxOddParityCalc(txBuffer, 3);
  4266  0000F8  C0C6  F0BE         	movff	hxSPPCarbonCheckBusy_test@txBuffer,hxOddParityCalc@buff
  4267  0000FC  C0C7  F0BF         	movff	hxSPPCarbonCheckBusy_test@txBuffer+1,hxOddParityCalc@buff+1
  4268  000100  0E03               	movlw	3
  4269  000102  0100               	movlb	0	; () banked
  4270  000104  6FC0               	movwf	hxOddParityCalc@size& (0+255),b
  4271  000106  EC7C  F010         	call	_hxOddParityCalc	;wreg free
  4272  00010A  0100               	movlb	0	; () banked
  4273  00010C  6FCF               	movwf	hxSPPCarbonCheckBusy_test@oddParityCalc& (0+255),b
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;HX_SPP_CARBON.c: 614: tempByte = 0xA0;
  4277  00010E  0EA0               	movlw	160
  4278  000110  0100               	movlb	0	; () banked
  4279  000112  6FD8               	movwf	hxSPPCarbonCheckBusy_test@tempByte& (0+255),b
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;HX_SPP_CARBON.c: 615: if (tempByte & 0x80){
  4283  000114  0100               	movlb	0	; () banked
  4284  000116  AFD8               	btfss	hxSPPCarbonCheckBusy_test@tempByte& (0+255),7,b
  4285  000118  D00F               	goto	l7755
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;HX_SPP_CARBON.c: 617: LATA = 0x01;
  4289  00011A  0E01               	movlw	1
  4290  00011C  6E83               	movwf	3971,c	;volatile
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;HX_SPP_CARBON.c: 618: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4294  00011E  0E05               	movlw	5
  4295  000120                     u7617:
  4296  000120  2EE8               	decfsz	wreg,f,c
  4297  000122  D7FE               	bra	u7617
  4298  000124  F000               	nop	
  4299                           
  4300                           ;HX_SPP_CARBON.c: 619: LATA = 0x03;
  4301  000126  0E03               	movlw	3
  4302  000128  6E83               	movwf	3971,c	;volatile
  4303                           
  4304                           ;HX_SPP_CARBON.c: 620: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4305  00012A  0E05               	movlw	5
  4306  00012C                     u7627:
  4307  00012C  2EE8               	decfsz	wreg,f,c
  4308  00012E  D7FE               	bra	u7627
  4309  000130  D00E               	goto	L18
  4310  000132                     l7753:
  4311                           
  4312                           ;HX_SPP_CARBON.c: 621: LATA = 0x01;
  4313  000132  0E01               	movlw	1
  4314  000134  6E83               	movwf	3971,c	;volatile
  4315                           
  4316                           ;HX_SPP_CARBON.c: 622: }
  4317  000136  D00D               	goto	l7763
  4318  000138                     l7755:
  4319                           
  4320                           ;HX_SPP_CARBON.c: 623: else{
  4321                           ;HX_SPP_CARBON.c: 624: LATA = 0x01;
  4322  000138  0E01               	movlw	1
  4323  00013A  6E83               	movwf	3971,c	;volatile
  4324                           
  4325                           ;HX_SPP_CARBON.c: 625: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4326  00013C  0E05               	movlw	5
  4327  00013E                     u7637:
  4328  00013E  2EE8               	decfsz	wreg,f,c
  4329  000140  D7FE               	bra	u7637
  4330  000142  F000               	nop	
  4331                           
  4332                           ;HX_SPP_CARBON.c: 626: LATA = 0x00;
  4333  000144  0E00               	movlw	0
  4334  000146  6E83               	movwf	3971,c	;volatile
  4335                           
  4336                           ;HX_SPP_CARBON.c: 627: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4337  000148  0E05               	movlw	5
  4338  00014A                     u7647:
  4339  00014A  2EE8               	decfsz	wreg,f,c
  4340  00014C  D7FE               	bra	u7647
  4341  00014E                     L18:
  4342  00014E  F000               	nop	
  4343  000150  D7F0               	goto	l7753
  4344  000152                     l7763:
  4345                           
  4346                           ;HX_SPP_CARBON.c: 629: }
  4347                           ;HX_SPP_CARBON.c: 630: for (uint8_t j = 1; j < 4; j++){
  4348  000152  0E01               	movlw	1
  4349  000154  0100               	movlb	0	; () banked
  4350  000156  6FD0               	movwf	hxSPPCarbonCheckBusy_test@j& (0+255),b
  4351  000158                     l7765:
  4352                           
  4353                           ; BSR set to: 0
  4354  000158  0E03               	movlw	3
  4355  00015A  0100               	movlb	0	; () banked
  4356  00015C  65D0               	cpfsgt	hxSPPCarbonCheckBusy_test@j& (0+255),b
  4357  00015E  D001               	goto	l7769
  4358  000160  D01B               	goto	l7787
  4359  000162                     l7769:
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;HX_SPP_CARBON.c: 631: tempByte = tempByte << 1;
  4363  000162  0100               	movlb	0	; () banked
  4364  000164  51D8               	movf	hxSPPCarbonCheckBusy_test@tempByte& (0+255),w,b
  4365  000166  25D8               	addwf	hxSPPCarbonCheckBusy_test@tempByte& (0+255),w,b
  4366  000168  0100               	movlb	0	; () banked
  4367  00016A  6FD8               	movwf	hxSPPCarbonCheckBusy_test@tempByte& (0+255),b
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;HX_SPP_CARBON.c: 632: if (tempByte & 0x80){
  4371  00016C  0100               	movlb	0	; () banked
  4372  00016E  AFD8               	btfss	hxSPPCarbonCheckBusy_test@tempByte& (0+255),7,b
  4373  000170  D009               	goto	l7779
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;HX_SPP_CARBON.c: 634: LATA = 0x03;
  4377  000172  0E03               	movlw	3
  4378  000174  6E83               	movwf	3971,c	;volatile
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;HX_SPP_CARBON.c: 635: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4382  000176  0E05               	movlw	5
  4383  000178                     u7657:
  4384  000178  2EE8               	decfsz	wreg,f,c
  4385  00017A  D7FE               	bra	u7657
  4386  00017C  D008               	goto	L19
  4387  00017E                     l7777:
  4388                           
  4389                           ;HX_SPP_CARBON.c: 636: LATA = 0x01;
  4390  00017E  0E01               	movlw	1
  4391  000180  6E83               	movwf	3971,c	;volatile
  4392                           
  4393                           ;HX_SPP_CARBON.c: 637: }
  4394  000182  D007               	goto	l7785
  4395  000184                     l7779:
  4396                           
  4397                           ;HX_SPP_CARBON.c: 638: else{
  4398                           ;HX_SPP_CARBON.c: 639: LATA = 0x00;
  4399  000184  0E00               	movlw	0
  4400  000186  6E83               	movwf	3971,c	;volatile
  4401                           
  4402                           ;HX_SPP_CARBON.c: 640: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4403  000188  0E05               	movlw	5
  4404  00018A                     u7667:
  4405  00018A  2EE8               	decfsz	wreg,f,c
  4406  00018C  D7FE               	bra	u7667
  4407  00018E                     L19:
  4408  00018E  F000               	nop	
  4409  000190  D7F6               	goto	l7777
  4410  000192                     l7785:
  4411  000192  0100               	movlb	0	; () banked
  4412  000194  2BD0               	incf	hxSPPCarbonCheckBusy_test@j& (0+255),f,b
  4413  000196  D7E0               	goto	l7765
  4414  000198                     l7787:
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;HX_SPP_CARBON.c: 642: }
  4418                           ;HX_SPP_CARBON.c: 643: }
  4419                           ;HX_SPP_CARBON.c: 645: for (uint8_t i = 0; i < numTX; i++){
  4420  000198  0E00               	movlw	0
  4421  00019A  0100               	movlb	0	; () banked
  4422  00019C  6FD1               	movwf	hxSPPCarbonCheckBusy_test@i& (0+255),b
  4423  00019E  D052               	goto	l7835
  4424  0001A0                     l7789:
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;HX_SPP_CARBON.c: 647: tempByte = txBuffer[i];
  4428  0001A0  0100               	movlb	0	; () banked
  4429  0001A2  51D1               	movf	hxSPPCarbonCheckBusy_test@i& (0+255),w,b
  4430  0001A4  0D01               	mullw	1
  4431  0001A6  50F3               	movf	prodl,w,c
  4432  0001A8  0100               	movlb	0	; () banked
  4433  0001AA  25C6               	addwf	hxSPPCarbonCheckBusy_test@txBuffer& (0+255),w,b
  4434  0001AC  6ED9               	movwf	fsr2l,c
  4435  0001AE  50F4               	movf	prodh,w,c
  4436  0001B0  0100               	movlb	0	; () banked
  4437  0001B2  21C7               	addwfc	(hxSPPCarbonCheckBusy_test@txBuffer+1)& (0+255),w,b
  4438  0001B4  6EDA               	movwf	fsr2h,c
  4439  0001B6  50DF               	movf	indf2,w,c
  4440  0001B8  0100               	movlb	0	; () banked
  4441  0001BA  6FD8               	movwf	hxSPPCarbonCheckBusy_test@tempByte& (0+255),b
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;HX_SPP_CARBON.c: 648: if (tempByte & 0x80){
  4445  0001BC  0100               	movlb	0	; () banked
  4446  0001BE  AFD8               	btfss	hxSPPCarbonCheckBusy_test@tempByte& (0+255),7,b
  4447  0001C0  D00F               	goto	l7801
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;HX_SPP_CARBON.c: 650: LATA = 0x01;
  4451  0001C2  0E01               	movlw	1
  4452  0001C4  6E83               	movwf	3971,c	;volatile
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;HX_SPP_CARBON.c: 651: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4456  0001C6  0E05               	movlw	5
  4457  0001C8                     u7677:
  4458  0001C8  2EE8               	decfsz	wreg,f,c
  4459  0001CA  D7FE               	bra	u7677
  4460  0001CC  F000               	nop	
  4461                           
  4462                           ;HX_SPP_CARBON.c: 652: LATA = 0x03;
  4463  0001CE  0E03               	movlw	3
  4464  0001D0  6E83               	movwf	3971,c	;volatile
  4465                           
  4466                           ;HX_SPP_CARBON.c: 653: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4467  0001D2  0E05               	movlw	5
  4468  0001D4                     u7687:
  4469  0001D4  2EE8               	decfsz	wreg,f,c
  4470  0001D6  D7FE               	bra	u7687
  4471  0001D8  D00E               	goto	L20
  4472  0001DA                     l7799:
  4473                           
  4474                           ;HX_SPP_CARBON.c: 654: LATA = 0x01;
  4475  0001DA  0E01               	movlw	1
  4476  0001DC  6E83               	movwf	3971,c	;volatile
  4477                           
  4478                           ;HX_SPP_CARBON.c: 655: }
  4479  0001DE  D00D               	goto	l7809
  4480  0001E0                     l7801:
  4481                           
  4482                           ;HX_SPP_CARBON.c: 656: else{
  4483                           ;HX_SPP_CARBON.c: 657: LATA = 0x01;
  4484  0001E0  0E01               	movlw	1
  4485  0001E2  6E83               	movwf	3971,c	;volatile
  4486                           
  4487                           ;HX_SPP_CARBON.c: 658: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4488  0001E4  0E05               	movlw	5
  4489  0001E6                     u7697:
  4490  0001E6  2EE8               	decfsz	wreg,f,c
  4491  0001E8  D7FE               	bra	u7697
  4492  0001EA  F000               	nop	
  4493                           
  4494                           ;HX_SPP_CARBON.c: 659: LATA = 0x00;
  4495  0001EC  0E00               	movlw	0
  4496  0001EE  6E83               	movwf	3971,c	;volatile
  4497                           
  4498                           ;HX_SPP_CARBON.c: 660: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4499  0001F0  0E05               	movlw	5
  4500  0001F2                     u7707:
  4501  0001F2  2EE8               	decfsz	wreg,f,c
  4502  0001F4  D7FE               	bra	u7707
  4503  0001F6                     L20:
  4504  0001F6  F000               	nop	
  4505  0001F8  D7F0               	goto	l7799
  4506  0001FA                     l7809:
  4507                           
  4508                           ;HX_SPP_CARBON.c: 662: }
  4509                           ;HX_SPP_CARBON.c: 663: for (uint8_t j = 1; j < 8; j++){
  4510  0001FA  0E01               	movlw	1
  4511  0001FC  0100               	movlb	0	; () banked
  4512  0001FE  6FD2               	movwf	hxSPPCarbonCheckBusy_test@j_769& (0+255),b
  4513  000200                     l7811:
  4514                           
  4515                           ; BSR set to: 0
  4516  000200  0E07               	movlw	7
  4517  000202  0100               	movlb	0	; () banked
  4518  000204  65D2               	cpfsgt	hxSPPCarbonCheckBusy_test@j_769& (0+255),b
  4519  000206  D001               	goto	l7815
  4520  000208  D01B               	goto	l7833
  4521  00020A                     l7815:
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;HX_SPP_CARBON.c: 664: tempByte = tempByte << 1;
  4525  00020A  0100               	movlb	0	; () banked
  4526  00020C  51D8               	movf	hxSPPCarbonCheckBusy_test@tempByte& (0+255),w,b
  4527  00020E  25D8               	addwf	hxSPPCarbonCheckBusy_test@tempByte& (0+255),w,b
  4528  000210  0100               	movlb	0	; () banked
  4529  000212  6FD8               	movwf	hxSPPCarbonCheckBusy_test@tempByte& (0+255),b
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;HX_SPP_CARBON.c: 665: if (tempByte & 0x80){
  4533  000214  0100               	movlb	0	; () banked
  4534  000216  AFD8               	btfss	hxSPPCarbonCheckBusy_test@tempByte& (0+255),7,b
  4535  000218  D009               	goto	l7825
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;HX_SPP_CARBON.c: 667: LATA = 0x03;
  4539  00021A  0E03               	movlw	3
  4540  00021C  6E83               	movwf	3971,c	;volatile
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;HX_SPP_CARBON.c: 668: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4544  00021E  0E05               	movlw	5
  4545  000220                     u7717:
  4546  000220  2EE8               	decfsz	wreg,f,c
  4547  000222  D7FE               	bra	u7717
  4548  000224  D008               	goto	L21
  4549  000226                     l7823:
  4550                           
  4551                           ;HX_SPP_CARBON.c: 669: LATA = 0x01;
  4552  000226  0E01               	movlw	1
  4553  000228  6E83               	movwf	3971,c	;volatile
  4554                           
  4555                           ;HX_SPP_CARBON.c: 670: }
  4556  00022A  D007               	goto	l7831
  4557  00022C                     l7825:
  4558                           
  4559                           ;HX_SPP_CARBON.c: 671: else{
  4560                           ;HX_SPP_CARBON.c: 672: LATA = 0x00;
  4561  00022C  0E00               	movlw	0
  4562  00022E  6E83               	movwf	3971,c	;volatile
  4563                           
  4564                           ;HX_SPP_CARBON.c: 673: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4565  000230  0E05               	movlw	5
  4566  000232                     u7727:
  4567  000232  2EE8               	decfsz	wreg,f,c
  4568  000234  D7FE               	bra	u7727
  4569  000236                     L21:
  4570  000236  F000               	nop	
  4571  000238  D7F6               	goto	l7823
  4572  00023A                     l7831:
  4573  00023A  0100               	movlb	0	; () banked
  4574  00023C  2BD2               	incf	hxSPPCarbonCheckBusy_test@j_769& (0+255),f,b
  4575  00023E  D7E0               	goto	l7811
  4576  000240                     l7833:
  4577                           
  4578                           ; BSR set to: 0
  4579  000240  0100               	movlb	0	; () banked
  4580  000242  2BD1               	incf	hxSPPCarbonCheckBusy_test@i& (0+255),f,b
  4581  000244                     l7835:
  4582                           
  4583                           ; BSR set to: 0
  4584  000244  0100               	movlb	0	; () banked
  4585  000246  51CC               	movf	hxSPPCarbonCheckBusy_test@numTX& (0+255),w,b
  4586  000248  0100               	movlb	0	; () banked
  4587  00024A  5DD1               	subwf	hxSPPCarbonCheckBusy_test@i& (0+255),w,b
  4588  00024C  A0D8               	btfss	status,0,c
  4589  00024E  D7A8               	goto	l7789
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;HX_SPP_CARBON.c: 675: }
  4593                           ;HX_SPP_CARBON.c: 676: }
  4594                           ;HX_SPP_CARBON.c: 677: }
  4595                           ;HX_SPP_CARBON.c: 680: if (oddParityCalc)
  4596                           
  4597                           ; BSR set to: 0
  4598  000250  0100               	movlb	0	; () banked
  4599  000252  51CF               	movf	hxSPPCarbonCheckBusy_test@oddParityCalc& (0+255),w,b
  4600  000254  0100               	movlb	0	; () banked
  4601  000256  B4D8               	btfsc	status,2,c
  4602  000258  D006               	goto	l7845
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;HX_SPP_CARBON.c: 681: {
  4606                           ;HX_SPP_CARBON.c: 682: LATA = 0x03;
  4607  00025A  0E03               	movlw	3
  4608  00025C  6E83               	movwf	3971,c	;volatile
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;HX_SPP_CARBON.c: 683: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4612  00025E  0E05               	movlw	5
  4613  000260                     u7737:
  4614  000260  2EE8               	decfsz	wreg,f,c
  4615  000262  D7FE               	bra	u7737
  4616  000264  D005               	goto	L34
  4617  000266                     l7845:
  4618                           
  4619                           ;HX_SPP_CARBON.c: 686: else
  4620                           ;HX_SPP_CARBON.c: 687: {
  4621                           ;HX_SPP_CARBON.c: 688: LATA = 0x00;
  4622  000266  0E00               	movlw	0
  4623  000268  6E83               	movwf	3971,c	;volatile
  4624                           
  4625                           ;HX_SPP_CARBON.c: 689: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4626  00026A  0E05               	movlw	5
  4627  00026C                     u7747:
  4628  00026C  2EE8               	decfsz	wreg,f,c
  4629  00026E  D7FE               	bra	u7747
  4630  000270                     L34:
  4631  000270  F000               	nop	
  4632                           
  4633                           ;HX_SPP_CARBON.c: 690: LATA = 0x01;
  4634  000272  0E01               	movlw	1
  4635  000274  6E83               	movwf	3971,c	;volatile
  4636                           
  4637                           ;HX_SPP_CARBON.c: 691: }
  4638                           ;HX_SPP_CARBON.c: 694: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4639  000276  0E05               	movlw	5
  4640  000278                     u7757:
  4641  000278  2EE8               	decfsz	wreg,f,c
  4642  00027A  D7FE               	bra	u7757
  4643  00027C  F000               	nop	
  4644                           
  4645                           ;HX_SPP_CARBON.c: 695: LATA = 0x00;
  4646  00027E  0E00               	movlw	0
  4647  000280  6E83               	movwf	3971,c	;volatile
  4648                           
  4649                           ;HX_SPP_CARBON.c: 696: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4650  000282  0E05               	movlw	5
  4651  000284                     u7767:
  4652  000284  2EE8               	decfsz	wreg,f,c
  4653  000286  D7FE               	bra	u7767
  4654  000288  F000               	nop	
  4655                           
  4656                           ;HX_SPP_CARBON.c: 702: hx_state = 0x10;
  4657  00028A  0E10               	movlw	16
  4658  00028C  6E3E               	movwf	_hx_state,c
  4659                           
  4660                           ;HX_SPP_CARBON.c: 703: rxBuffer[0] = 0x10;
  4661  00028E  C0C8  FFD9         	movff	hxSPPCarbonCheckBusy_test@rxBuffer,fsr2l
  4662  000292  C0C9  FFDA         	movff	hxSPPCarbonCheckBusy_test@rxBuffer+1,fsr2h
  4663  000296  0E10               	movlw	16
  4664  000298  6EDF               	movwf	indf2,c
  4665                           
  4666                           ;HX_SPP_CARBON.c: 704: rxBuffer[1] = 0x00;
  4667  00029A  0100               	movlb	0	; () banked
  4668  00029C  EE20 F001          	lfsr	2,1
  4669  0002A0  51C8               	movf	hxSPPCarbonCheckBusy_test@rxBuffer& (0+255),w,b
  4670  0002A2  26D9               	addwf	fsr2l,f,c
  4671  0002A4  51C9               	movf	(hxSPPCarbonCheckBusy_test@rxBuffer+1)& (0+255),w,b
  4672  0002A6  22DA               	addwfc	fsr2h,f,c
  4673  0002A8  0E00               	movlw	0
  4674  0002AA  6EDF               	movwf	indf2,c
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;HX_SPP_CARBON.c: 706: for (uint8_t i = 0; i < numRX; i++)
  4678  0002AC  0E00               	movlw	0
  4679  0002AE  0100               	movlb	0	; () banked
  4680  0002B0  6FD3               	movwf	hxSPPCarbonCheckBusy_test@i_770& (0+255),b
  4681  0002B2  D0D8               	goto	l7935
  4682  0002B4                     l7861:
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;HX_SPP_CARBON.c: 707: {
  4686                           ;HX_SPP_CARBON.c: 708: tempByte = 0;
  4687  0002B4  0E00               	movlw	0
  4688  0002B6  0100               	movlb	0	; () banked
  4689  0002B8  6FD8               	movwf	hxSPPCarbonCheckBusy_test@tempByte& (0+255),b
  4690                           
  4691                           ;HX_SPP_CARBON.c: 710: for(uint8_t j = 0; j < 8; j++)
  4692  0002BA  0E00               	movlw	0
  4693  0002BC  0100               	movlb	0	; () banked
  4694  0002BE  6FD4               	movwf	hxSPPCarbonCheckBusy_test@j_771& (0+255),b
  4695  0002C0                     l7863:
  4696                           
  4697                           ; BSR set to: 0
  4698  0002C0  0E07               	movlw	7
  4699  0002C2  0100               	movlb	0	; () banked
  4700  0002C4  65D4               	cpfsgt	hxSPPCarbonCheckBusy_test@j_771& (0+255),b
  4701  0002C6  D001               	goto	l7867
  4702  0002C8  D0AD               	goto	l7927
  4703  0002CA                     l7867:
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;HX_SPP_CARBON.c: 711: {
  4707                           ;HX_SPP_CARBON.c: 712: LATA = 0x01;
  4708  0002CA  0E01               	movlw	1
  4709  0002CC  6E83               	movwf	3971,c	;volatile
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;HX_SPP_CARBON.c: 713: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4713  0002CE  0E05               	movlw	5
  4714  0002D0                     u7777:
  4715  0002D0  2EE8               	decfsz	wreg,f,c
  4716  0002D2  D7FE               	bra	u7777
  4717  0002D4  F000               	nop	
  4718                           
  4719                           ;HX_SPP_CARBON.c: 714: LATA = 0x03;
  4720  0002D6  0E03               	movlw	3
  4721  0002D8  6E83               	movwf	3971,c	;volatile
  4722                           
  4723                           ;HX_SPP_CARBON.c: 715: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4724  0002DA  0E05               	movlw	5
  4725  0002DC                     u7787:
  4726  0002DC  2EE8               	decfsz	wreg,f,c
  4727  0002DE  D7FE               	bra	u7787
  4728  0002E0  F000               	nop	
  4729                           
  4730                           ;HX_SPP_CARBON.c: 716: LATA = 0x00;
  4731  0002E2  0E00               	movlw	0
  4732  0002E4  6E83               	movwf	3971,c	;volatile
  4733                           
  4734                           ;HX_SPP_CARBON.c: 717: _delay((unsigned long)((1)*(64000000/4000000.0)));
  4735  0002E6  0E05               	movlw	5
  4736  0002E8                     u7797:
  4737  0002E8  2EE8               	decfsz	wreg,f,c
  4738  0002EA  D7FE               	bra	u7797
  4739  0002EC  F000               	nop	
  4740                           
  4741                           ;HX_SPP_CARBON.c: 721: tempByte = tempByte << 1;
  4742  0002EE  0100               	movlb	0	; () banked
  4743  0002F0  51D8               	movf	hxSPPCarbonCheckBusy_test@tempByte& (0+255),w,b
  4744  0002F2  25D8               	addwf	hxSPPCarbonCheckBusy_test@tempByte& (0+255),w,b
  4745  0002F4  0100               	movlb	0	; () banked
  4746  0002F6  6FD8               	movwf	hxSPPCarbonCheckBusy_test@tempByte& (0+255),b
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;HX_SPP_CARBON.c: 722: readbackCommState = 0;
  4750  0002F8  0E00               	movlw	0
  4751  0002FA  0100               	movlb	0	; () banked
  4752  0002FC  6FD7               	movwf	hxSPPCarbonCheckBusy_test@readbackCommState& (0+255),b
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;HX_SPP_CARBON.c: 723: bitVal = 2;
  4756  0002FE  0E02               	movlw	2
  4757  000300  0100               	movlb	0	; () banked
  4758  000302  6FD5               	movwf	hxSPPCarbonCheckBusy_test@bitVal& (0+255),b
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;HX_SPP_CARBON.c: 725: readbackTimer = 40;
  4762  000304  0E00               	movlw	0
  4763  000306  0100               	movlb	0	; () banked
  4764  000308  6FCE               	movwf	(hxSPPCarbonCheckBusy_test@readbackTimer+1)& (0+255),b
  4765  00030A  0E28               	movlw	40
  4766  00030C  6FCD               	movwf	hxSPPCarbonCheckBusy_test@readbackTimer& (0+255),b
  4767                           
  4768                           ;HX_SPP_CARBON.c: 726: while(readbackTimer--)
  4769  00030E  D060               	goto	l7909
  4770  000310                     l672:
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;HX_SPP_CARBON.c: 727: {
  4774                           ;HX_SPP_CARBON.c: 728: portAVal = PORTA;
  4775  000310  CF8D F0D6          	movff	3981,hxSPPCarbonCheckBusy_test@portAVal	;volatile
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;HX_SPP_CARBON.c: 729: if (readbackCommState == 0)
  4779  000314  0100               	movlb	0	; () banked
  4780  000316  51D7               	movf	hxSPPCarbonCheckBusy_test@readbackCommState& (0+255),w,b
  4781  000318  0100               	movlb	0	; () banked
  4782  00031A  A4D8               	btfss	status,2,c
  4783  00031C  D012               	goto	l7891
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;HX_SPP_CARBON.c: 730: {
  4787                           ;HX_SPP_CARBON.c: 733: if (1 == portAVal & 0x01)
  4788  00031E  0100               	movlb	0	; () banked
  4789  000320  05D6               	decf	hxSPPCarbonCheckBusy_test@portAVal& (0+255),w,b
  4790  000322  A4D8               	btfss	status,2,c
  4791  000324  D002               	goto	u6150
  4792  000326  0E01               	movlw	1
  4793  000328  D001               	goto	u6160
  4794  00032A                     u6150:
  4795  00032A  0E00               	movlw	0
  4796  00032C                     u6160:
  4797  00032C  0100               	movlb	0	; () banked
  4798  00032E  6FCA               	movwf	??_hxSPPCarbonCheckBusy_test& (0+255),b
  4799  000330  6BCB               	clrf	(??_hxSPPCarbonCheckBusy_test+1)& (0+255),b
  4800  000332  0100               	movlb	0	; () banked
  4801  000334  A1CA               	btfss	??_hxSPPCarbonCheckBusy_test& (0+255),0,b
  4802  000336  D04C               	goto	l7909
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;HX_SPP_CARBON.c: 734: {
  4806                           ;HX_SPP_CARBON.c: 735: readbackCommState = 1;
  4807  000338  0E01               	movlw	1
  4808  00033A  0100               	movlb	0	; () banked
  4809  00033C  6FD7               	movwf	hxSPPCarbonCheckBusy_test@readbackCommState& (0+255),b
  4810                           
  4811                           ;HX_SPP_CARBON.c: 736: bitVal = 2;
  4812  00033E  0E02               	movlw	2
  4813  000340  D045               	goto	L24
  4814  000342                     l7891:
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;HX_SPP_CARBON.c: 739: else if (readbackCommState == 1)
  4818  000342  0100               	movlb	0	; () banked
  4819  000344  05D7               	decf	hxSPPCarbonCheckBusy_test@readbackCommState& (0+255),w,b
  4820  000346  A4D8               	btfss	status,2,c
  4821  000348  D013               	goto	l7897
  4822                           
  4823                           ; BSR set to: 0
  4824                           ;HX_SPP_CARBON.c: 740: {
  4825                           ;HX_SPP_CARBON.c: 742: if (0 == portAVal & 0x01)
  4826  00034A  0100               	movlb	0	; () banked
  4827  00034C  51D6               	movf	hxSPPCarbonCheckBusy_test@portAVal& (0+255),w,b
  4828  00034E  0100               	movlb	0	; () banked
  4829  000350  A4D8               	btfss	status,2,c
  4830  000352  D002               	goto	u6190
  4831  000354  0E01               	movlw	1
  4832  000356  D001               	goto	u6200
  4833  000358                     u6190:
  4834  000358  0E00               	movlw	0
  4835  00035A                     u6200:
  4836  00035A  0100               	movlb	0	; () banked
  4837  00035C  6FCA               	movwf	??_hxSPPCarbonCheckBusy_test& (0+255),b
  4838  00035E  6BCB               	clrf	(??_hxSPPCarbonCheckBusy_test+1)& (0+255),b
  4839  000360  0100               	movlb	0	; () banked
  4840  000362  A1CA               	btfss	??_hxSPPCarbonCheckBusy_test& (0+255),0,b
  4841  000364  D035               	goto	l7909
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;HX_SPP_CARBON.c: 743: {
  4845                           ;HX_SPP_CARBON.c: 744: readbackCommState = 2;
  4846  000366  0E02               	movlw	2
  4847  000368  0100               	movlb	0	; () banked
  4848  00036A  6FD7               	movwf	hxSPPCarbonCheckBusy_test@readbackCommState& (0+255),b
  4849                           
  4850                           ;HX_SPP_CARBON.c: 745: bitVal = 0;
  4851  00036C  0E00               	movlw	0
  4852  00036E  D02E               	goto	L24
  4853  000370                     l7897:
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;HX_SPP_CARBON.c: 748: else if (readbackCommState == 2)
  4857  000370  0E02               	movlw	2
  4858  000372  0100               	movlb	0	; () banked
  4859  000374  19D7               	xorwf	hxSPPCarbonCheckBusy_test@readbackCommState& (0+255),w,b
  4860  000376  A4D8               	btfss	status,2,c
  4861  000378  D012               	goto	l7903
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;HX_SPP_CARBON.c: 749: {
  4865                           ;HX_SPP_CARBON.c: 751: if (1 == portAVal & 0x01)
  4866  00037A  0100               	movlb	0	; () banked
  4867  00037C  05D6               	decf	hxSPPCarbonCheckBusy_test@portAVal& (0+255),w,b
  4868  00037E  A4D8               	btfss	status,2,c
  4869  000380  D002               	goto	u6230
  4870  000382  0E01               	movlw	1
  4871  000384  D001               	goto	u6240
  4872  000386                     u6230:
  4873  000386  0E00               	movlw	0
  4874  000388                     u6240:
  4875  000388  0100               	movlb	0	; () banked
  4876  00038A  6FCA               	movwf	??_hxSPPCarbonCheckBusy_test& (0+255),b
  4877  00038C  6BCB               	clrf	(??_hxSPPCarbonCheckBusy_test+1)& (0+255),b
  4878  00038E  0100               	movlb	0	; () banked
  4879  000390  A1CA               	btfss	??_hxSPPCarbonCheckBusy_test& (0+255),0,b
  4880  000392  D01E               	goto	l7909
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;HX_SPP_CARBON.c: 752: {
  4884                           ;HX_SPP_CARBON.c: 753: readbackCommState = 3;
  4885  000394  0E03               	movlw	3
  4886  000396  0100               	movlb	0	; () banked
  4887  000398  6FD7               	movwf	hxSPPCarbonCheckBusy_test@readbackCommState& (0+255),b
  4888                           
  4889                           ;HX_SPP_CARBON.c: 754: bitVal = 4;
  4890  00039A  0E04               	movlw	4
  4891  00039C  D017               	goto	L24
  4892  00039E                     l7903:
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;HX_SPP_CARBON.c: 757: else if (readbackCommState == 3)
  4896  00039E  0E03               	movlw	3
  4897  0003A0  0100               	movlb	0	; () banked
  4898  0003A2  19D7               	xorwf	hxSPPCarbonCheckBusy_test@readbackCommState& (0+255),w,b
  4899  0003A4  A4D8               	btfss	status,2,c
  4900  0003A6  D014               	goto	l7909
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;HX_SPP_CARBON.c: 758: {
  4904                           ;HX_SPP_CARBON.c: 760: if (0 == portAVal & 0x01)
  4905  0003A8  0100               	movlb	0	; () banked
  4906  0003AA  51D6               	movf	hxSPPCarbonCheckBusy_test@portAVal& (0+255),w,b
  4907  0003AC  0100               	movlb	0	; () banked
  4908  0003AE  A4D8               	btfss	status,2,c
  4909  0003B0  D002               	goto	u6270
  4910  0003B2  0E01               	movlw	1
  4911  0003B4  D001               	goto	u6280
  4912  0003B6                     u6270:
  4913  0003B6  0E00               	movlw	0
  4914  0003B8                     u6280:
  4915  0003B8  0100               	movlb	0	; () banked
  4916  0003BA  6FCA               	movwf	??_hxSPPCarbonCheckBusy_test& (0+255),b
  4917  0003BC  6BCB               	clrf	(??_hxSPPCarbonCheckBusy_test+1)& (0+255),b
  4918  0003BE  0100               	movlb	0	; () banked
  4919  0003C0  A1CA               	btfss	??_hxSPPCarbonCheckBusy_test& (0+255),0,b
  4920  0003C2  D006               	goto	l7909
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;HX_SPP_CARBON.c: 761: {
  4924                           ;HX_SPP_CARBON.c: 762: readbackCommState = 3;
  4925  0003C4  0E03               	movlw	3
  4926  0003C6  0100               	movlb	0	; () banked
  4927  0003C8  6FD7               	movwf	hxSPPCarbonCheckBusy_test@readbackCommState& (0+255),b
  4928                           
  4929                           ;HX_SPP_CARBON.c: 763: bitVal = 1;
  4930  0003CA  0E01               	movlw	1
  4931  0003CC                     L24:
  4932  0003CC  0100               	movlb	0	; () banked
  4933  0003CE  6FD5               	movwf	hxSPPCarbonCheckBusy_test@bitVal& (0+255),b
  4934  0003D0                     l7909:
  4935                           
  4936                           ; BSR set to: 0
  4937  0003D0  0100               	movlb	0	; () banked
  4938  0003D2  07CD               	decf	hxSPPCarbonCheckBusy_test@readbackTimer& (0+255),f,b
  4939  0003D4  A0D8               	btfss	status,0,c
  4940  0003D6  07CE               	decf	(hxSPPCarbonCheckBusy_test@readbackTimer+1)& (0+255),f,b
  4941  0003D8  0100               	movlb	0	; () banked
  4942  0003DA  29CD               	incf	hxSPPCarbonCheckBusy_test@readbackTimer& (0+255),w,b
  4943  0003DC  E199               	bnz	l672
  4944  0003DE  0100               	movlb	0	; () banked
  4945  0003E0  29CE               	incf	(hxSPPCarbonCheckBusy_test@readbackTimer+1)& (0+255),w,b
  4946  0003E2  A4D8               	btfss	status,2,c
  4947  0003E4  D795               	goto	l672
  4948                           
  4949                           ; BSR set to: 0
  4950                           ;HX_SPP_CARBON.c: 764: }
  4951                           ;HX_SPP_CARBON.c: 765: }
  4952                           ;HX_SPP_CARBON.c: 766: }
  4953                           ;HX_SPP_CARBON.c: 767: if(bitVal == 0)
  4954                           
  4955                           ; BSR set to: 0
  4956  0003E6  0100               	movlb	0	; () banked
  4957  0003E8  51D5               	movf	hxSPPCarbonCheckBusy_test@bitVal& (0+255),w,b
  4958  0003EA  0100               	movlb	0	; () banked
  4959  0003EC  B4D8               	btfsc	status,2,c
  4960  0003EE  D017               	goto	l7923
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;HX_SPP_CARBON.c: 772: {
  4964                           ;HX_SPP_CARBON.c: 773: tempByte = tempByte++;
  4965                           
  4966                           ; BSR set to: 0
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;HX_SPP_CARBON.c: 768: {
  4970                           ;HX_SPP_CARBON.c: 770: }
  4971  0003F0  0100               	movlb	0	; () banked
  4972  0003F2  05D5               	decf	hxSPPCarbonCheckBusy_test@bitVal& (0+255),w,b
  4973  0003F4  A4D8               	btfss	status,2,c
  4974  0003F6  D003               	goto	l7919
  4975                           
  4976                           ; BSR set to: 0
  4977  0003F8  0100               	movlb	0	; () banked
  4978  0003FA  2BD8               	incf	hxSPPCarbonCheckBusy_test@tempByte& (0+255),f,b
  4979                           
  4980                           ;HX_SPP_CARBON.c: 774: }
  4981  0003FC  D010               	goto	l7923
  4982  0003FE                     l7919:
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;HX_SPP_CARBON.c: 775: else
  4986                           ;HX_SPP_CARBON.c: 776: {
  4987                           ;HX_SPP_CARBON.c: 777: rxBuffer[0] = 0x11;
  4988  0003FE  C0C8  FFD9         	movff	hxSPPCarbonCheckBusy_test@rxBuffer,fsr2l
  4989  000402  C0C9  FFDA         	movff	hxSPPCarbonCheckBusy_test@rxBuffer+1,fsr2h
  4990  000406  0E11               	movlw	17
  4991  000408  6EDF               	movwf	indf2,c
  4992                           
  4993                           ; BSR set to: 0
  4994                           ;HX_SPP_CARBON.c: 778: rxBuffer[1] = 0x00;
  4995  00040A  0100               	movlb	0	; () banked
  4996  00040C  EE20 F001          	lfsr	2,1
  4997  000410  51C8               	movf	hxSPPCarbonCheckBusy_test@rxBuffer& (0+255),w,b
  4998  000412  26D9               	addwf	fsr2l,f,c
  4999  000414  51C9               	movf	(hxSPPCarbonCheckBusy_test@rxBuffer+1)& (0+255),w,b
  5000  000416  22DA               	addwfc	fsr2h,f,c
  5001  000418  0E00               	movlw	0
  5002  00041A  6EDF               	movwf	indf2,c
  5003                           
  5004                           ;HX_SPP_CARBON.c: 779: break;
  5005  00041C  D003               	goto	l7927
  5006  00041E                     l7923:
  5007                           
  5008                           ; BSR set to: 0
  5009  00041E  0100               	movlb	0	; () banked
  5010  000420  2BD4               	incf	hxSPPCarbonCheckBusy_test@j_771& (0+255),f,b
  5011  000422  D74E               	goto	l7863
  5012  000424                     l7927:
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;HX_SPP_CARBON.c: 780: }
  5016                           ;HX_SPP_CARBON.c: 781: }
  5017                           ;HX_SPP_CARBON.c: 782: if (rxBuffer[0] == 0x11)
  5018  000424  C0C8  FFD9         	movff	hxSPPCarbonCheckBusy_test@rxBuffer,fsr2l
  5019  000428  C0C9  FFDA         	movff	hxSPPCarbonCheckBusy_test@rxBuffer+1,fsr2h
  5020  00042C  0E11               	movlw	17
  5021  00042E  18DE               	xorwf	postinc2,w,c
  5022  000430  B4D8               	btfsc	status,2,c
  5023  000432  D01E               	goto	l7937
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;HX_SPP_CARBON.c: 785: }
  5027                           ;HX_SPP_CARBON.c: 786: rxBuffer[i+1] = tempByte;
  5028                           
  5029                           ; BSR set to: 0
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;HX_SPP_CARBON.c: 783: {
  5033                           ;HX_SPP_CARBON.c: 784: break;
  5034  000434  0100               	movlb	0	; () banked
  5035  000436  51D3               	movf	hxSPPCarbonCheckBusy_test@i_770& (0+255),w,b
  5036  000438  0100               	movlb	0	; () banked
  5037  00043A  6FCA               	movwf	??_hxSPPCarbonCheckBusy_test& (0+255),b
  5038  00043C  6BCB               	clrf	(??_hxSPPCarbonCheckBusy_test+1)& (0+255),b
  5039  00043E  0E01               	movlw	1
  5040  000440  0100               	movlb	0	; () banked
  5041  000442  27CA               	addwf	??_hxSPPCarbonCheckBusy_test& (0+255),f,b
  5042  000444  0E00               	movlw	0
  5043  000446  23CB               	addwfc	(??_hxSPPCarbonCheckBusy_test+1)& (0+255),f,b
  5044  000448  0100               	movlb	0	; () banked
  5045  00044A  51CA               	movf	??_hxSPPCarbonCheckBusy_test& (0+255),w,b
  5046  00044C  0100               	movlb	0	; () banked
  5047  00044E  25C8               	addwf	hxSPPCarbonCheckBusy_test@rxBuffer& (0+255),w,b
  5048  000450  6ED9               	movwf	fsr2l,c
  5049  000452  0100               	movlb	0	; () banked
  5050  000454  51CB               	movf	(??_hxSPPCarbonCheckBusy_test+1)& (0+255),w,b
  5051  000456  0100               	movlb	0	; () banked
  5052  000458  21C9               	addwfc	(hxSPPCarbonCheckBusy_test@rxBuffer+1)& (0+255),w,b
  5053  00045A  6EDA               	movwf	fsr2h,c
  5054  00045C  C0D8  FFDF         	movff	hxSPPCarbonCheckBusy_test@tempByte,indf2
  5055                           
  5056                           ; BSR set to: 0
  5057  000460  0100               	movlb	0	; () banked
  5058  000462  2BD3               	incf	hxSPPCarbonCheckBusy_test@i_770& (0+255),f,b
  5059  000464                     l7935:
  5060                           
  5061                           ; BSR set to: 0
  5062  000464  0100               	movlb	0	; () banked
  5063  000466  51C5               	movf	hxSPPCarbonCheckBusy_test@numRX& (0+255),w,b
  5064  000468  0100               	movlb	0	; () banked
  5065  00046A  5DD3               	subwf	hxSPPCarbonCheckBusy_test@i_770& (0+255),w,b
  5066  00046C  A0D8               	btfss	status,0,c
  5067  00046E  D722               	goto	l7861
  5068  000470                     l7937:
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;HX_SPP_CARBON.c: 787: }
  5072                           ;HX_SPP_CARBON.c: 790: hx_state = 0x10;
  5073  000470  0E10               	movlw	16
  5074  000472  6E3E               	movwf	_hx_state,c
  5075                           
  5076                           ;HX_SPP_CARBON.c: 791: LATA = 0x03;
  5077  000474  0E03               	movlw	3
  5078  000476  6E83               	movwf	3971,c	;volatile
  5079                           
  5080                           ; BSR set to: 0
  5081  000478  0012               	return		;funcret
  5082  00047A                     __end_of_hxSPPCarbonCheckBusy_test:
  5083                           	opt stack 0
  5084                           tblptru	equ	0xFF8
  5085                           tblptrh	equ	0xFF7
  5086                           tblptrl	equ	0xFF6
  5087                           tablat	equ	0xFF5
  5088                           prodh	equ	0xFF4
  5089                           prodl	equ	0xFF3
  5090                           intcon	equ	0xFF2
  5091                           postinc0	equ	0xFEE
  5092                           wreg	equ	0xFE8
  5093                           postinc1	equ	0xFE6
  5094                           fsr1h	equ	0xFE2
  5095                           fsr1l	equ	0xFE1
  5096                           indf2	equ	0xFDF
  5097                           postinc2	equ	0xFDE
  5098                           fsr2h	equ	0xFDA
  5099                           fsr2l	equ	0xFD9
  5100                           status	equ	0xFD8
  5101                           
  5102 ;; *************** function _hxOddParityCalc *****************
  5103 ;; Defined at:
  5104 ;;		line 795 in file "HX_SPP_CARBON.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;  buff            2    0[BANK0 ] PTR unsigned char 
  5107 ;;		 -> hx_inData(64), 
  5108 ;;  size            1    2[BANK0 ] unsigned char 
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;  j               1    4[BANK0 ] unsigned char 
  5111 ;;  i               1    3[BANK0 ] unsigned char 
  5112 ;;  temp            1    6[BANK0 ] unsigned char 
  5113 ;;  parity          1    5[BANK0 ] unsigned char 
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  1    wreg      unsigned char 
  5116 ;; Registers used:
  5117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5123 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5124 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5126 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5127 ;;Total ram usage:        7 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    7
  5130 ;; This function calls:
  5131 ;;		Nothing
  5132 ;; This function is called by:
  5133 ;;		_hxSPPCarbonReadReg_test
  5134 ;;		_hxSPPCarbonWriteReg_test
  5135 ;;		_hxSPPCarbonProgram_test
  5136 ;;		_hxSPPCarbonCheckBusy_test
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           	psect	text9
  5141  0020F8                     __ptext9:
  5142                           	opt stack 0
  5143  0020F8                     _hxOddParityCalc:
  5144                           	opt stack 20
  5145                           
  5146                           ;HX_SPP_CARBON.c: 797: uint8_t parity = 1;
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;incstack = 0
  5150  0020F8  0E01               	movlw	1
  5151  0020FA  0100               	movlb	0	; () banked
  5152  0020FC  6FC3               	movwf	hxOddParityCalc@parity& (0+255),b
  5153                           
  5154                           ;HX_SPP_CARBON.c: 798: uint8_t temp = 0;
  5155  0020FE  0E00               	movlw	0
  5156  002100  0100               	movlb	0	; () banked
  5157  002102  6FC4               	movwf	hxOddParityCalc@temp& (0+255),b
  5158                           
  5159                           ;HX_SPP_CARBON.c: 799: for (uint8_t i = 0; i < size; i++)
  5160  002104  0E00               	movlw	0
  5161  002106  0100               	movlb	0	; () banked
  5162  002108  6FC1               	movwf	hxOddParityCalc@i& (0+255),b
  5163  00210A  D025               	goto	l7101
  5164  00210C                     l7085:
  5165                           
  5166                           ; BSR set to: 0
  5167                           ;HX_SPP_CARBON.c: 800: {
  5168                           ;HX_SPP_CARBON.c: 801: temp = buff[i];
  5169  00210C  0100               	movlb	0	; () banked
  5170  00210E  51C1               	movf	hxOddParityCalc@i& (0+255),w,b
  5171  002110  0D01               	mullw	1
  5172  002112  50F3               	movf	prodl,w,c
  5173  002114  0100               	movlb	0	; () banked
  5174  002116  25BE               	addwf	hxOddParityCalc@buff& (0+255),w,b
  5175  002118  6ED9               	movwf	fsr2l,c
  5176  00211A  50F4               	movf	prodh,w,c
  5177  00211C  0100               	movlb	0	; () banked
  5178  00211E  21BF               	addwfc	(hxOddParityCalc@buff+1)& (0+255),w,b
  5179  002120  6EDA               	movwf	fsr2h,c
  5180  002122  50DF               	movf	indf2,w,c
  5181  002124  0100               	movlb	0	; () banked
  5182  002126  6FC4               	movwf	hxOddParityCalc@temp& (0+255),b
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;HX_SPP_CARBON.c: 802: for (uint8_t j = 0; j < 8; j++)
  5186  002128  0E00               	movlw	0
  5187  00212A  0100               	movlb	0	; () banked
  5188  00212C  6FC2               	movwf	hxOddParityCalc@j& (0+255),b
  5189  00212E                     l7089:
  5190                           
  5191                           ; BSR set to: 0
  5192  00212E  0E07               	movlw	7
  5193  002130  0100               	movlb	0	; () banked
  5194  002132  65C2               	cpfsgt	hxOddParityCalc@j& (0+255),b
  5195  002134  D001               	goto	l696
  5196  002136  D00D               	goto	l7099
  5197  002138                     l696:
  5198                           
  5199                           ; BSR set to: 0
  5200                           ;HX_SPP_CARBON.c: 803: {
  5201                           ;HX_SPP_CARBON.c: 804: if (temp & 0x80)
  5202  002138  0100               	movlb	0	; () banked
  5203  00213A  AFC4               	btfss	hxOddParityCalc@temp& (0+255),7,b
  5204  00213C  D002               	goto	l7095
  5205                           
  5206                           ; BSR set to: 0
  5207                           ;HX_SPP_CARBON.c: 805: {
  5208                           ;HX_SPP_CARBON.c: 806: parity++;
  5209  00213E  0100               	movlb	0	; () banked
  5210  002140  2BC3               	incf	hxOddParityCalc@parity& (0+255),f,b
  5211  002142                     l7095:
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;HX_SPP_CARBON.c: 807: }
  5215                           ;HX_SPP_CARBON.c: 808: temp = temp << 1;
  5216  002142  0100               	movlb	0	; () banked
  5217  002144  51C4               	movf	hxOddParityCalc@temp& (0+255),w,b
  5218  002146  25C4               	addwf	hxOddParityCalc@temp& (0+255),w,b
  5219  002148  0100               	movlb	0	; () banked
  5220  00214A  6FC4               	movwf	hxOddParityCalc@temp& (0+255),b
  5221                           
  5222                           ; BSR set to: 0
  5223  00214C  0100               	movlb	0	; () banked
  5224  00214E  2BC2               	incf	hxOddParityCalc@j& (0+255),f,b
  5225  002150  D7EE               	goto	l7089
  5226  002152                     l7099:
  5227                           
  5228                           ; BSR set to: 0
  5229  002152  0100               	movlb	0	; () banked
  5230  002154  2BC1               	incf	hxOddParityCalc@i& (0+255),f,b
  5231  002156                     l7101:
  5232                           
  5233                           ; BSR set to: 0
  5234  002156  0100               	movlb	0	; () banked
  5235  002158  51C0               	movf	hxOddParityCalc@size& (0+255),w,b
  5236  00215A  0100               	movlb	0	; () banked
  5237  00215C  5DC1               	subwf	hxOddParityCalc@i& (0+255),w,b
  5238  00215E  A0D8               	btfss	status,0,c
  5239  002160  D7D5               	goto	l7085
  5240                           
  5241                           ; BSR set to: 0
  5242                           ;HX_SPP_CARBON.c: 809: }
  5243                           ;HX_SPP_CARBON.c: 811: }
  5244                           ;HX_SPP_CARBON.c: 812: parity = parity & 0x01;
  5245                           
  5246                           ; BSR set to: 0
  5247  002162  0100               	movlb	0	; () banked
  5248  002164  51C3               	movf	hxOddParityCalc@parity& (0+255),w,b
  5249  002166  0B01               	andlw	1
  5250  002168  0100               	movlb	0	; () banked
  5251  00216A  6FC3               	movwf	hxOddParityCalc@parity& (0+255),b
  5252                           
  5253                           ; BSR set to: 0
  5254                           ;HX_SPP_CARBON.c: 814: return parity;
  5255  00216C  0100               	movlb	0	; () banked
  5256  00216E  51C3               	movf	hxOddParityCalc@parity& (0+255),w,b
  5257  002170  0012               	return	
  5258  002172                     __end_of_hxOddParityCalc:
  5259                           	opt stack 0
  5260                           tblptru	equ	0xFF8
  5261                           tblptrh	equ	0xFF7
  5262                           tblptrl	equ	0xFF6
  5263                           tablat	equ	0xFF5
  5264                           prodh	equ	0xFF4
  5265                           prodl	equ	0xFF3
  5266                           intcon	equ	0xFF2
  5267                           postinc0	equ	0xFEE
  5268                           wreg	equ	0xFE8
  5269                           postinc1	equ	0xFE6
  5270                           fsr1h	equ	0xFE2
  5271                           fsr1l	equ	0xFE1
  5272                           indf2	equ	0xFDF
  5273                           postinc2	equ	0xFDE
  5274                           fsr2h	equ	0xFDA
  5275                           fsr2l	equ	0xFD9
  5276                           status	equ	0xFD8
  5277                           
  5278 ;; *************** function _run_I2C *****************
  5279 ;; Defined at:
  5280 ;;		line 14 in file "HX_I2C.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;  hx_inData       2   24[BANK0 ] PTR unsigned char 
  5283 ;;		 -> hx_inData(64), 
  5284 ;;  size            1   26[BANK0 ] unsigned char 
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;  i               2   32[BANK0 ] int 
  5287 ;;  tx_arr        256    0[BANK1 ] unsigned char [256]
  5288 ;;  data_index      2   41[BANK0 ] unsigned int 
  5289 ;;  slaveAddr       2   36[BANK0 ] unsigned int 
  5290 ;;  debugArr        2   30[BANK0 ] PTR unsigned char 
  5291 ;;  mode            1   40[BANK0 ] unsigned char 
  5292 ;;  numRx           1   39[BANK0 ] unsigned char 
  5293 ;;  numTx           1   38[BANK0 ] unsigned char 
  5294 ;;  calc_checksu    1   35[BANK0 ] unsigned char 
  5295 ;;  checksum        1   34[BANK0 ] unsigned char 
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  1    wreg      void 
  5298 ;; Registers used:
  5299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5305 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5306 ;;      Locals:         0      13     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5307 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5308 ;;      Totals:         0      19     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5309 ;;Total ram usage:      275 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; Hardware stack levels required when called:   10
  5312 ;; This function calls:
  5313 ;;		_calcChecksum
  5314 ;;		_readI2C
  5315 ;;		_writeI2C
  5316 ;; This function is called by:
  5317 ;;		_main
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           	psect	text10
  5322  000D64                     __ptext10:
  5323                           	opt stack 0
  5324  000D64                     _run_I2C:
  5325                           	opt stack 20
  5326                           
  5327                           ;HX_I2C.c: 16: uint8_t mode = 0;
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;incstack = 0
  5331  000D64  0E00               	movlw	0
  5332  000D66  0100               	movlb	0	; () banked
  5333  000D68  6FE6               	movwf	run_I2C@mode& (0+255),b
  5334                           
  5335                           ;HX_I2C.c: 17: uint8_t numTx = 0;
  5336  000D6A  0E00               	movlw	0
  5337  000D6C  0100               	movlb	0	; () banked
  5338  000D6E  6FE4               	movwf	run_I2C@numTx& (0+255),b
  5339                           
  5340                           ;HX_I2C.c: 18: uint8_t numRx = 0;
  5341  000D70  0E00               	movlw	0
  5342  000D72  0100               	movlb	0	; () banked
  5343  000D74  6FE5               	movwf	run_I2C@numRx& (0+255),b
  5344                           
  5345                           ;HX_I2C.c: 19: uint16_t slaveAddr = 0;
  5346  000D76  0E00               	movlw	0
  5347  000D78  0100               	movlb	0	; () banked
  5348  000D7A  6FE3               	movwf	(run_I2C@slaveAddr+1)& (0+255),b
  5349  000D7C  0E00               	movlw	0
  5350  000D7E  6FE2               	movwf	run_I2C@slaveAddr& (0+255),b
  5351                           
  5352                           ;HX_I2C.c: 20: uint8_t tx_arr[256];
  5353                           ;HX_I2C.c: 21: uint8_t checksum = 0;
  5354  000D80  0E00               	movlw	0
  5355  000D82  0100               	movlb	0	; () banked
  5356  000D84  6FE0               	movwf	run_I2C@checksum& (0+255),b
  5357                           
  5358                           ;HX_I2C.c: 22: uint16_t data_index = 0;
  5359  000D86  0E00               	movlw	0
  5360  000D88  0100               	movlb	0	; () banked
  5361  000D8A  6FE8               	movwf	(run_I2C@data_index+1)& (0+255),b
  5362  000D8C  0E00               	movlw	0
  5363  000D8E  6FE7               	movwf	run_I2C@data_index& (0+255),b
  5364                           
  5365                           ;HX_I2C.c: 23: uint8_t calc_checksum = 0;
  5366  000D90  0E00               	movlw	0
  5367  000D92  0100               	movlb	0	; () banked
  5368  000D94  6FE1               	movwf	run_I2C@calc_checksum& (0+255),b
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;HX_I2C.c: 25: uint8_t * debugArr;
  5372                           ;HX_I2C.c: 27: mode = hx_inData[data_index++];
  5373  000D96  0100               	movlb	0	; () banked
  5374  000D98  51E7               	movf	run_I2C@data_index& (0+255),w,b
  5375  000D9A  0100               	movlb	0	; () banked
  5376  000D9C  25D6               	addwf	run_I2C@hx_inData& (0+255),w,b
  5377  000D9E  6ED9               	movwf	fsr2l,c
  5378  000DA0  0100               	movlb	0	; () banked
  5379  000DA2  51E8               	movf	(run_I2C@data_index+1)& (0+255),w,b
  5380  000DA4  0100               	movlb	0	; () banked
  5381  000DA6  21D7               	addwfc	(run_I2C@hx_inData+1)& (0+255),w,b
  5382  000DA8  6EDA               	movwf	fsr2h,c
  5383  000DAA  50DF               	movf	indf2,w,c
  5384  000DAC  0100               	movlb	0	; () banked
  5385  000DAE  6FE6               	movwf	run_I2C@mode& (0+255),b
  5386                           
  5387                           ; BSR set to: 0
  5388  000DB0  0100               	movlb	0	; () banked
  5389  000DB2  4BE7               	infsnz	run_I2C@data_index& (0+255),f,b
  5390  000DB4  2BE8               	incf	(run_I2C@data_index+1)& (0+255),f,b
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;HX_I2C.c: 28: slaveAddr = hx_inData[data_index++];
  5394  000DB6  0100               	movlb	0	; () banked
  5395  000DB8  51E7               	movf	run_I2C@data_index& (0+255),w,b
  5396  000DBA  0100               	movlb	0	; () banked
  5397  000DBC  25D6               	addwf	run_I2C@hx_inData& (0+255),w,b
  5398  000DBE  6ED9               	movwf	fsr2l,c
  5399  000DC0  0100               	movlb	0	; () banked
  5400  000DC2  51E8               	movf	(run_I2C@data_index+1)& (0+255),w,b
  5401  000DC4  0100               	movlb	0	; () banked
  5402  000DC6  21D7               	addwfc	(run_I2C@hx_inData+1)& (0+255),w,b
  5403  000DC8  6EDA               	movwf	fsr2h,c
  5404  000DCA  50DF               	movf	indf2,w,c
  5405  000DCC  0100               	movlb	0	; () banked
  5406  000DCE  6FD9               	movwf	??_run_I2C& (0+255),b
  5407  000DD0  0100               	movlb	0	; () banked
  5408  000DD2  51D9               	movf	??_run_I2C& (0+255),w,b
  5409  000DD4  0100               	movlb	0	; () banked
  5410  000DD6  6FE2               	movwf	run_I2C@slaveAddr& (0+255),b
  5411  000DD8  6BE3               	clrf	(run_I2C@slaveAddr+1)& (0+255),b
  5412                           
  5413                           ; BSR set to: 0
  5414  000DDA  0100               	movlb	0	; () banked
  5415  000DDC  4BE7               	infsnz	run_I2C@data_index& (0+255),f,b
  5416  000DDE  2BE8               	incf	(run_I2C@data_index+1)& (0+255),f,b
  5417                           
  5418                           ; BSR set to: 0
  5419                           ;HX_I2C.c: 29: numTx = hx_inData[data_index++];
  5420  000DE0  0100               	movlb	0	; () banked
  5421  000DE2  51E7               	movf	run_I2C@data_index& (0+255),w,b
  5422  000DE4  0100               	movlb	0	; () banked
  5423  000DE6  25D6               	addwf	run_I2C@hx_inData& (0+255),w,b
  5424  000DE8  6ED9               	movwf	fsr2l,c
  5425  000DEA  0100               	movlb	0	; () banked
  5426  000DEC  51E8               	movf	(run_I2C@data_index+1)& (0+255),w,b
  5427  000DEE  0100               	movlb	0	; () banked
  5428  000DF0  21D7               	addwfc	(run_I2C@hx_inData+1)& (0+255),w,b
  5429  000DF2  6EDA               	movwf	fsr2h,c
  5430  000DF4  50DF               	movf	indf2,w,c
  5431  000DF6  0100               	movlb	0	; () banked
  5432  000DF8  6FE4               	movwf	run_I2C@numTx& (0+255),b
  5433                           
  5434                           ; BSR set to: 0
  5435  000DFA  0100               	movlb	0	; () banked
  5436  000DFC  4BE7               	infsnz	run_I2C@data_index& (0+255),f,b
  5437  000DFE  2BE8               	incf	(run_I2C@data_index+1)& (0+255),f,b
  5438                           
  5439                           ; BSR set to: 0
  5440                           ;HX_I2C.c: 30: numRx = hx_inData[data_index++];
  5441  000E00  0100               	movlb	0	; () banked
  5442  000E02  51E7               	movf	run_I2C@data_index& (0+255),w,b
  5443  000E04  0100               	movlb	0	; () banked
  5444  000E06  25D6               	addwf	run_I2C@hx_inData& (0+255),w,b
  5445  000E08  6ED9               	movwf	fsr2l,c
  5446  000E0A  0100               	movlb	0	; () banked
  5447  000E0C  51E8               	movf	(run_I2C@data_index+1)& (0+255),w,b
  5448  000E0E  0100               	movlb	0	; () banked
  5449  000E10  21D7               	addwfc	(run_I2C@hx_inData+1)& (0+255),w,b
  5450  000E12  6EDA               	movwf	fsr2h,c
  5451  000E14  50DF               	movf	indf2,w,c
  5452  000E16  0100               	movlb	0	; () banked
  5453  000E18  6FE5               	movwf	run_I2C@numRx& (0+255),b
  5454                           
  5455                           ; BSR set to: 0
  5456  000E1A  0100               	movlb	0	; () banked
  5457  000E1C  4BE7               	infsnz	run_I2C@data_index& (0+255),f,b
  5458  000E1E  2BE8               	incf	(run_I2C@data_index+1)& (0+255),f,b
  5459                           
  5460                           ; BSR set to: 0
  5461                           ;HX_I2C.c: 31: if (mode < 0x20)
  5462  000E20  0E20               	movlw	32
  5463  000E22  0100               	movlb	0	; () banked
  5464  000E24  61E6               	cpfslt	run_I2C@mode& (0+255),b
  5465  000E26  D046               	goto	l8351
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;HX_I2C.c: 32: {
  5469                           ;HX_I2C.c: 33: if (numTx < 1)
  5470  000E28  0100               	movlb	0	; () banked
  5471  000E2A  51E4               	movf	run_I2C@numTx& (0+255),w,b
  5472  000E2C  0100               	movlb	0	; () banked
  5473  000E2E  A4D8               	btfss	status,2,c
  5474  000E30  D003               	goto	l8333
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;HX_I2C.c: 34: {
  5478                           ;HX_I2C.c: 35: hx_state = 0x40;
  5479  000E32  0E40               	movlw	64
  5480  000E34  6E3E               	movwf	_hx_state,c
  5481                           
  5482                           ; BSR set to: 0
  5483                           ;HX_I2C.c: 36: return;
  5484  000E36  0012               	return	
  5485  000E38                     l8333:
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;HX_I2C.c: 43: }
  5489                           ;HX_I2C.c: 45: for (int i = 0; i < numTx; i++)
  5490  000E38  0E00               	movlw	0
  5491  000E3A  0100               	movlb	0	; () banked
  5492  000E3C  6FDF               	movwf	(run_I2C@i+1)& (0+255),b
  5493  000E3E  0E00               	movlw	0
  5494  000E40  6FDE               	movwf	run_I2C@i& (0+255),b
  5495  000E42  D006               	goto	l8337
  5496  000E44                     l8335:
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;HX_I2C.c: 46: {
  5500                           ;HX_I2C.c: 47: tx_arr[data_index++];
  5501  000E44  0100               	movlb	0	; () banked
  5502  000E46  4BE7               	infsnz	run_I2C@data_index& (0+255),f,b
  5503  000E48  2BE8               	incf	(run_I2C@data_index+1)& (0+255),f,b
  5504  000E4A  0100               	movlb	0	; () banked
  5505  000E4C  4BDE               	infsnz	run_I2C@i& (0+255),f,b
  5506  000E4E  2BDF               	incf	(run_I2C@i+1)& (0+255),f,b
  5507  000E50                     l8337:
  5508                           
  5509                           ; BSR set to: 0
  5510  000E50  0100               	movlb	0	; () banked
  5511  000E52  51E4               	movf	run_I2C@numTx& (0+255),w,b
  5512  000E54  0100               	movlb	0	; () banked
  5513  000E56  6FD9               	movwf	??_run_I2C& (0+255),b
  5514  000E58  6BDA               	clrf	(??_run_I2C+1)& (0+255),b
  5515  000E5A  0100               	movlb	0	; () banked
  5516  000E5C  51D9               	movf	??_run_I2C& (0+255),w,b
  5517  000E5E  0100               	movlb	0	; () banked
  5518  000E60  5DDE               	subwf	run_I2C@i& (0+255),w,b
  5519  000E62  0100               	movlb	0	; () banked
  5520  000E64  51DF               	movf	(run_I2C@i+1)& (0+255),w,b
  5521  000E66  0A80               	xorlw	128
  5522  000E68  0100               	movlb	0	; () banked
  5523  000E6A  6FDB               	movwf	(??_run_I2C+2)& (0+255),b
  5524  000E6C  0100               	movlb	0	; () banked
  5525  000E6E  51DA               	movf	(??_run_I2C+1)& (0+255),w,b
  5526  000E70  0A80               	xorlw	128
  5527  000E72  0100               	movlb	0	; () banked
  5528  000E74  59DB               	subwfb	(??_run_I2C+2)& (0+255),w,b
  5529  000E76  A0D8               	btfss	status,0,c
  5530  000E78  D7E5               	goto	l8335
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;HX_I2C.c: 48: }
  5534                           ;HX_I2C.c: 50: checksum = hx_inData[data_index++];
  5535                           
  5536                           ; BSR set to: 0
  5537  000E7A  0100               	movlb	0	; () banked
  5538  000E7C  51E7               	movf	run_I2C@data_index& (0+255),w,b
  5539  000E7E  0100               	movlb	0	; () banked
  5540  000E80  25D6               	addwf	run_I2C@hx_inData& (0+255),w,b
  5541  000E82  6ED9               	movwf	fsr2l,c
  5542  000E84  0100               	movlb	0	; () banked
  5543  000E86  51E8               	movf	(run_I2C@data_index+1)& (0+255),w,b
  5544  000E88  0100               	movlb	0	; () banked
  5545  000E8A  21D7               	addwfc	(run_I2C@hx_inData+1)& (0+255),w,b
  5546  000E8C  6EDA               	movwf	fsr2h,c
  5547  000E8E  50DF               	movf	indf2,w,c
  5548  000E90  0100               	movlb	0	; () banked
  5549  000E92  6FE0               	movwf	run_I2C@checksum& (0+255),b
  5550                           
  5551                           ; BSR set to: 0
  5552  000E94  0100               	movlb	0	; () banked
  5553  000E96  4BE7               	infsnz	run_I2C@data_index& (0+255),f,b
  5554  000E98  2BE8               	incf	(run_I2C@data_index+1)& (0+255),f,b
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;HX_I2C.c: 51: calc_checksum = calcChecksum(hx_inData, data_index-1);
  5558  000E9A  C0D6  F0BE         	movff	run_I2C@hx_inData,calcChecksum@data
  5559  000E9E  C0D7  F0BF         	movff	run_I2C@hx_inData+1,calcChecksum@data+1
  5560  000EA2  0100               	movlb	0	; () banked
  5561  000EA4  05E7               	decf	run_I2C@data_index& (0+255),w,b
  5562  000EA6  0100               	movlb	0	; () banked
  5563  000EA8  6FC0               	movwf	calcChecksum@size& (0+255),b
  5564  000EAA  ECE0  F012         	call	_calcChecksum	;wreg free
  5565  000EAE  0100               	movlb	0	; () banked
  5566  000EB0  6FE1               	movwf	run_I2C@calc_checksum& (0+255),b
  5567  000EB2  D01B               	goto	l8357
  5568  000EB4                     l8351:
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;HX_I2C.c: 58: else
  5572                           ;HX_I2C.c: 59: {
  5573                           ;HX_I2C.c: 60: checksum = hx_inData[data_index++];
  5574  000EB4  0100               	movlb	0	; () banked
  5575  000EB6  51E7               	movf	run_I2C@data_index& (0+255),w,b
  5576  000EB8  0100               	movlb	0	; () banked
  5577  000EBA  25D6               	addwf	run_I2C@hx_inData& (0+255),w,b
  5578  000EBC  6ED9               	movwf	fsr2l,c
  5579  000EBE  0100               	movlb	0	; () banked
  5580  000EC0  51E8               	movf	(run_I2C@data_index+1)& (0+255),w,b
  5581  000EC2  0100               	movlb	0	; () banked
  5582  000EC4  21D7               	addwfc	(run_I2C@hx_inData+1)& (0+255),w,b
  5583  000EC6  6EDA               	movwf	fsr2h,c
  5584  000EC8  50DF               	movf	indf2,w,c
  5585  000ECA  0100               	movlb	0	; () banked
  5586  000ECC  6FE0               	movwf	run_I2C@checksum& (0+255),b
  5587                           
  5588                           ; BSR set to: 0
  5589  000ECE  0100               	movlb	0	; () banked
  5590  000ED0  4BE7               	infsnz	run_I2C@data_index& (0+255),f,b
  5591  000ED2  2BE8               	incf	(run_I2C@data_index+1)& (0+255),f,b
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;HX_I2C.c: 61: calc_checksum = calcChecksum(hx_inData, data_index-1);
  5595  000ED4  C0D6  F0BE         	movff	run_I2C@hx_inData,calcChecksum@data
  5596  000ED8  C0D7  F0BF         	movff	run_I2C@hx_inData+1,calcChecksum@data+1
  5597  000EDC  0100               	movlb	0	; () banked
  5598  000EDE  05E7               	decf	run_I2C@data_index& (0+255),w,b
  5599  000EE0  0100               	movlb	0	; () banked
  5600  000EE2  6FC0               	movwf	calcChecksum@size& (0+255),b
  5601  000EE4  ECE0  F012         	call	_calcChecksum	;wreg free
  5602  000EE8  D7E2               	goto	L25
  5603  000EEA                     l8357:
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;HX_I2C.c: 62: if (calc_checksum != checksum)
  5607  000EEA  0100               	movlb	0	; () banked
  5608  000EEC  51E0               	movf	run_I2C@checksum& (0+255),w,b
  5609  000EEE  0100               	movlb	0	; () banked
  5610  000EF0  19E1               	xorwf	run_I2C@calc_checksum& (0+255),w,b
  5611  000EF2  B4D8               	btfsc	status,2,c
  5612  000EF4  D003               	goto	l8363
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;HX_I2C.c: 63: {
  5616                           ;HX_I2C.c: 64: hx_state = 0x20;
  5617  000EF6  0E20               	movlw	32
  5618  000EF8  6E3E               	movwf	_hx_state,c
  5619                           
  5620                           ; BSR set to: 0
  5621                           ;HX_I2C.c: 65: return;
  5622  000EFA  0012               	return	
  5623  000EFC                     l8363:
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;HX_I2C.c: 66: }
  5627                           ;HX_I2C.c: 67: }
  5628                           ;HX_I2C.c: 69: if (mode == 0x00)
  5629  000EFC  0100               	movlb	0	; () banked
  5630  000EFE  51E6               	movf	run_I2C@mode& (0+255),w,b
  5631  000F00  0100               	movlb	0	; () banked
  5632  000F02  A4D8               	btfss	status,2,c
  5633  000F04  D015               	goto	l8373
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;HX_I2C.c: 70: {
  5637                           ;HX_I2C.c: 71: writeI2C(tx_arr, numTx, slaveAddr);
  5638  000F06  0E00               	movlw	low run_I2C@tx_arr
  5639  000F08  0100               	movlb	0	; () banked
  5640  000F0A  6FCE               	movwf	writeI2C@txData& (0+255),b
  5641  000F0C  0E01               	movlw	high run_I2C@tx_arr
  5642  000F0E  0100               	movlb	0	; () banked
  5643  000F10  6FCF               	movwf	(writeI2C@txData+1)& (0+255),b
  5644  000F12  C0E4  F0D0         	movff	run_I2C@numTx,writeI2C@size
  5645  000F16  C0E2  F0D1         	movff	run_I2C@slaveAddr,writeI2C@slaveAddr
  5646  000F1A  C0E3  F0D2         	movff	run_I2C@slaveAddr+1,writeI2C@slaveAddr+1
  5647  000F1E  ECB9  F010         	call	_writeI2C	;wreg free
  5648                           
  5649                           ;HX_I2C.c: 72: hx_mainData[0] = 0x10;
  5650  000F22  0E10               	movlw	16
  5651  000F24  0100               	movlb	0	; () banked
  5652  000F26  6F72               	movwf	_hx_mainData& (0+255),b
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;HX_I2C.c: 73: hx_mainDataIndex++;
  5656  000F28  2A38               	incf	_hx_mainDataIndex,f,c
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;HX_I2C.c: 74: hx_state = 0x10;
  5660  000F2A  0E10               	movlw	16
  5661  000F2C  6E3E               	movwf	_hx_state,c
  5662                           
  5663                           ;HX_I2C.c: 75: }
  5664  000F2E  0012               	return	
  5665  000F30                     l8373:
  5666                           
  5667                           ; BSR set to: 0
  5668                           ;HX_I2C.c: 76: else if (mode == 0x10)
  5669  000F30  0E10               	movlw	16
  5670  000F32  0100               	movlb	0	; () banked
  5671  000F34  19E6               	xorwf	run_I2C@mode& (0+255),w,b
  5672  000F36  A4D8               	btfss	status,2,c
  5673  000F38  D025               	goto	l8383
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;HX_I2C.c: 77: {
  5677                           ;HX_I2C.c: 78: writeI2C(tx_arr, numTx, slaveAddr);
  5678  000F3A  0E00               	movlw	low run_I2C@tx_arr
  5679  000F3C  0100               	movlb	0	; () banked
  5680  000F3E  6FCE               	movwf	writeI2C@txData& (0+255),b
  5681  000F40  0E01               	movlw	high run_I2C@tx_arr
  5682  000F42  0100               	movlb	0	; () banked
  5683  000F44  6FCF               	movwf	(writeI2C@txData+1)& (0+255),b
  5684  000F46  C0E4  F0D0         	movff	run_I2C@numTx,writeI2C@size
  5685  000F4A  C0E2  F0D1         	movff	run_I2C@slaveAddr,writeI2C@slaveAddr
  5686  000F4E  C0E3  F0D2         	movff	run_I2C@slaveAddr+1,writeI2C@slaveAddr+1
  5687  000F52  ECB9  F010         	call	_writeI2C	;wreg free
  5688                           
  5689                           ;HX_I2C.c: 79: readI2C(&hx_mainData[1], numRx, slaveAddr);
  5690  000F56  0E73               	movlw	low (_hx_mainData+1)
  5691  000F58  0100               	movlb	0	; () banked
  5692  000F5A  6FCE               	movwf	readI2C@rxData& (0+255),b
  5693  000F5C  0E00               	movlw	high (_hx_mainData+1)
  5694  000F5E  0100               	movlb	0	; () banked
  5695  000F60  6FCF               	movwf	(readI2C@rxData+1)& (0+255),b
  5696  000F62  C0E5  F0D0         	movff	run_I2C@numRx,readI2C@numOfRx
  5697  000F66  C0E2  F0D1         	movff	run_I2C@slaveAddr,readI2C@slaveAddr
  5698  000F6A  C0E3  F0D2         	movff	run_I2C@slaveAddr+1,readI2C@slaveAddr+1
  5699  000F6E  EC93  F011         	call	_readI2C	;wreg free
  5700                           
  5701                           ;HX_I2C.c: 80: hx_mainData[0] = 0x10;
  5702  000F72  0E10               	movlw	16
  5703  000F74  0100               	movlb	0	; () banked
  5704  000F76  6F72               	movwf	_hx_mainData& (0+255),b
  5705                           
  5706                           ; BSR set to: 0
  5707                           ;HX_I2C.c: 81: hx_mainDataIndex = numRx + 1;
  5708  000F78  0100               	movlb	0	; () banked
  5709  000F7A  29E5               	incf	run_I2C@numRx& (0+255),w,b
  5710  000F7C  6E38               	movwf	_hx_mainDataIndex,c
  5711                           
  5712                           ; BSR set to: 0
  5713                           ;HX_I2C.c: 82: hx_state = 0x10;
  5714  000F7E  0E10               	movlw	16
  5715  000F80  6E3E               	movwf	_hx_state,c
  5716                           
  5717                           ;HX_I2C.c: 83: }
  5718  000F82  0012               	return	
  5719  000F84                     l8383:
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;HX_I2C.c: 84: else if (mode == 0x20)
  5723  000F84  0E20               	movlw	32
  5724  000F86  0100               	movlb	0	; () banked
  5725  000F88  19E6               	xorwf	run_I2C@mode& (0+255),w,b
  5726  000F8A  A4D8               	btfss	status,2,c
  5727  000F8C  D017               	goto	l8393
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;HX_I2C.c: 85: {
  5731                           ;HX_I2C.c: 86: readI2C(&hx_mainData[1], numRx, slaveAddr);
  5732  000F8E  0E73               	movlw	low (_hx_mainData+1)
  5733  000F90  0100               	movlb	0	; () banked
  5734  000F92  6FCE               	movwf	readI2C@rxData& (0+255),b
  5735  000F94  0E00               	movlw	high (_hx_mainData+1)
  5736  000F96  0100               	movlb	0	; () banked
  5737  000F98  6FCF               	movwf	(readI2C@rxData+1)& (0+255),b
  5738  000F9A  C0E5  F0D0         	movff	run_I2C@numRx,readI2C@numOfRx
  5739  000F9E  C0E2  F0D1         	movff	run_I2C@slaveAddr,readI2C@slaveAddr
  5740  000FA2  C0E3  F0D2         	movff	run_I2C@slaveAddr+1,readI2C@slaveAddr+1
  5741  000FA6  EC93  F011         	call	_readI2C	;wreg free
  5742                           
  5743                           ;HX_I2C.c: 87: hx_mainData[0] = 0x10;
  5744  000FAA  0E10               	movlw	16
  5745  000FAC  0100               	movlb	0	; () banked
  5746  000FAE  6F72               	movwf	_hx_mainData& (0+255),b
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;HX_I2C.c: 88: hx_mainDataIndex = numRx + 1;
  5750  000FB0  0100               	movlb	0	; () banked
  5751  000FB2  29E5               	incf	run_I2C@numRx& (0+255),w,b
  5752  000FB4  6E38               	movwf	_hx_mainDataIndex,c
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;HX_I2C.c: 89: hx_state = 0x10;
  5756  000FB6  0E10               	movlw	16
  5757  000FB8  6E3E               	movwf	_hx_state,c
  5758                           
  5759                           ;HX_I2C.c: 90: }
  5760  000FBA  0012               	return	
  5761  000FBC                     l8393:
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;HX_I2C.c: 91: else if (mode == 0x30)
  5765  000FBC  0E30               	movlw	48
  5766  000FBE  0100               	movlb	0	; () banked
  5767  000FC0  19E6               	xorwf	run_I2C@mode& (0+255),w,b
  5768  000FC2  A4D8               	btfss	status,2,c
  5769  000FC4  D00B               	goto	l8397
  5770                           
  5771                           ; BSR set to: 0
  5772                           ;HX_I2C.c: 92: {
  5773                           ;HX_I2C.c: 93: hx_mainData[0] = 0x10;
  5774  000FC6  0E10               	movlw	16
  5775  000FC8  0100               	movlb	0	; () banked
  5776  000FCA  6F72               	movwf	_hx_mainData& (0+255),b
  5777                           
  5778                           ;HX_I2C.c: 94: hx_mainData[1] = 0xAA;
  5779  000FCC  0EAA               	movlw	170
  5780  000FCE  0100               	movlb	0	; () banked
  5781  000FD0  6F73               	movwf	(_hx_mainData+1)& (0+255),b
  5782                           
  5783                           ;HX_I2C.c: 95: hx_mainDataIndex = 2;
  5784  000FD2  0E02               	movlw	2
  5785  000FD4  6E38               	movwf	_hx_mainDataIndex,c
  5786                           
  5787                           ;HX_I2C.c: 96: hx_state = 0x10;
  5788  000FD6  0E10               	movlw	16
  5789  000FD8  6E3E               	movwf	_hx_state,c
  5790                           
  5791                           ;HX_I2C.c: 97: }
  5792  000FDA  0012               	return	
  5793  000FDC                     l8397:
  5794                           
  5795                           ; BSR set to: 0
  5796                           ;HX_I2C.c: 99: {
  5797                           ;HX_I2C.c: 100: *debugArr = 0xBB;
  5798  000FDC  0E31               	movlw	49
  5799  000FDE  0100               	movlb	0	; () banked
  5800  000FE0  19E6               	xorwf	run_I2C@mode& (0+255),w,b
  5801  000FE2  A4D8               	btfss	status,2,c
  5802  000FE4  D019               	goto	l8409
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;HX_I2C.c: 101: writeI2C(debugArr, 1, 0x5a);
  5806  000FE6  C0DC  F0CE         	movff	run_I2C@debugArr,writeI2C@txData
  5807  000FEA  C0DD  F0CF         	movff	run_I2C@debugArr+1,writeI2C@txData+1
  5808  000FEE  0E01               	movlw	1
  5809  000FF0  0100               	movlb	0	; () banked
  5810  000FF2  6FD0               	movwf	writeI2C@size& (0+255),b
  5811  000FF4  0E00               	movlw	0
  5812  000FF6  0100               	movlb	0	; () banked
  5813  000FF8  6FD2               	movwf	(writeI2C@slaveAddr+1)& (0+255),b
  5814  000FFA  0E5A               	movlw	90
  5815  000FFC  6FD1               	movwf	writeI2C@slaveAddr& (0+255),b
  5816  000FFE  ECB9  F010         	call	_writeI2C	;wreg free
  5817                           
  5818                           ;HX_I2C.c: 102: hx_mainData[0] = 0x10;
  5819  001002  0E10               	movlw	16
  5820  001004  0100               	movlb	0	; () banked
  5821  001006  6F72               	movwf	_hx_mainData& (0+255),b
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;HX_I2C.c: 103: hx_mainData[1] = 0xBB;
  5825  001008  0EBB               	movlw	187
  5826  00100A  0100               	movlb	0	; () banked
  5827  00100C  6F73               	movwf	(_hx_mainData+1)& (0+255),b
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;HX_I2C.c: 104: hx_mainDataIndex = 2;
  5831  00100E  0E02               	movlw	2
  5832  001010  6E38               	movwf	_hx_mainDataIndex,c
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;HX_I2C.c: 105: hx_state = 0x10;
  5836  001012  0E10               	movlw	16
  5837  001014  6E3E               	movwf	_hx_state,c
  5838                           
  5839                           ;HX_I2C.c: 106: }
  5840  001016  0012               	return	
  5841  001018                     l8409:
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;HX_I2C.c: 107: else if (mode == 0x32)
  5845  001018  0E32               	movlw	50
  5846  00101A  0100               	movlb	0	; () banked
  5847  00101C  19E6               	xorwf	run_I2C@mode& (0+255),w,b
  5848  00101E  A4D8               	btfss	status,2,c
  5849  001020  D018               	goto	l8419
  5850                           
  5851                           ; BSR set to: 0
  5852                           ;HX_I2C.c: 108: {
  5853                           ;HX_I2C.c: 109: readI2C(&hx_mainData[1], 1, 0x5a);
  5854  001022  0E73               	movlw	low (_hx_mainData+1)
  5855  001024  0100               	movlb	0	; () banked
  5856  001026  6FCE               	movwf	readI2C@rxData& (0+255),b
  5857  001028  0E00               	movlw	high (_hx_mainData+1)
  5858  00102A  0100               	movlb	0	; () banked
  5859  00102C  6FCF               	movwf	(readI2C@rxData+1)& (0+255),b
  5860  00102E  0E01               	movlw	1
  5861  001030  0100               	movlb	0	; () banked
  5862  001032  6FD0               	movwf	readI2C@numOfRx& (0+255),b
  5863  001034  0E00               	movlw	0
  5864  001036  0100               	movlb	0	; () banked
  5865  001038  6FD2               	movwf	(readI2C@slaveAddr+1)& (0+255),b
  5866  00103A  0E5A               	movlw	90
  5867  00103C  6FD1               	movwf	readI2C@slaveAddr& (0+255),b
  5868  00103E  EC93  F011         	call	_readI2C	;wreg free
  5869                           
  5870                           ;HX_I2C.c: 110: hx_mainData[0] = 0x10;
  5871  001042  0E10               	movlw	16
  5872  001044  0100               	movlb	0	; () banked
  5873  001046  6F72               	movwf	_hx_mainData& (0+255),b
  5874                           
  5875                           ; BSR set to: 0
  5876                           ;HX_I2C.c: 111: hx_mainDataIndex = 2;
  5877  001048  0E02               	movlw	2
  5878  00104A  6E38               	movwf	_hx_mainDataIndex,c
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;HX_I2C.c: 112: hx_state = 0x10;
  5882  00104C  0E10               	movlw	16
  5883  00104E  6E3E               	movwf	_hx_state,c
  5884                           
  5885                           ;HX_I2C.c: 113: }
  5886  001050  0012               	return	
  5887  001052                     l8419:
  5888                           
  5889                           ; BSR set to: 0
  5890                           ;HX_I2C.c: 114: else
  5891                           ;HX_I2C.c: 115: {
  5892                           ;HX_I2C.c: 116: hx_state = 0x20;
  5893  001052  0E20               	movlw	32
  5894  001054  6E3E               	movwf	_hx_state,c
  5895                           
  5896                           ; BSR set to: 0
  5897                           
  5898                           ; BSR set to: 0
  5899                           
  5900                           ; BSR set to: 0
  5901                           
  5902                           ; BSR set to: 0
  5903                           
  5904                           ; BSR set to: 0
  5905                           
  5906                           ; BSR set to: 0
  5907                           ;HX_I2C.c: 117: return;
  5908  001056  0012               	return	
  5909  001058                     __end_of_run_I2C:
  5910                           	opt stack 0
  5911                           tblptru	equ	0xFF8
  5912                           tblptrh	equ	0xFF7
  5913                           tblptrl	equ	0xFF6
  5914                           tablat	equ	0xFF5
  5915                           prodh	equ	0xFF4
  5916                           prodl	equ	0xFF3
  5917                           intcon	equ	0xFF2
  5918                           postinc0	equ	0xFEE
  5919                           wreg	equ	0xFE8
  5920                           postinc1	equ	0xFE6
  5921                           fsr1h	equ	0xFE2
  5922                           fsr1l	equ	0xFE1
  5923                           indf2	equ	0xFDF
  5924                           postinc2	equ	0xFDE
  5925                           fsr2h	equ	0xFDA
  5926                           fsr2l	equ	0xFD9
  5927                           status	equ	0xFD8
  5928                           
  5929 ;; *************** function _run_ASLBoron *****************
  5930 ;; Defined at:
  5931 ;;		line 14 in file "HX_ASL_BORON.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;  hx_inData       2   59[BANK0 ] PTR unsigned char 
  5934 ;;		 -> hx_inData(64), 
  5935 ;;  size            1   61[BANK0 ] unsigned char 
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;  i               1   13[BANK1 ] unsigned char 
  5938 ;;  cnfg_arr      256    0[BANK3 ] unsigned char [256]
  5939 ;;  data_index      2   16[BANK1 ] unsigned int 
  5940 ;;  rpt_run         2    7[BANK1 ] unsigned char [2]
  5941 ;;  mode_run        1   15[BANK1 ] unsigned char 
  5942 ;;  cnfg_cnt        1   14[BANK1 ] unsigned char 
  5943 ;;  calc_checksu    1   12[BANK1 ] unsigned char 
  5944 ;;  checksum        1   11[BANK1 ] unsigned char 
  5945 ;;  cnfg_run        1   10[BANK1 ] unsigned char 
  5946 ;;  test_run        1    9[BANK1 ] unsigned char 
  5947 ;; Return value:  Size  Location     Type
  5948 ;;                  1    wreg      void 
  5949 ;; Registers used:
  5950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5951 ;; Tracked objects:
  5952 ;;		On entry : 0/0
  5953 ;;		On exit  : 0/0
  5954 ;;		Unchanged: 0/0
  5955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5956 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5957 ;;      Locals:         0       0      15       0     256       0       0       0       0       0       0       0       
      +0       0       0       0
  5958 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5959 ;;      Totals:         0       3      18       0     256       0       0       0       0       0       0       0       
      +0       0       0       0
  5960 ;;Total ram usage:      277 bytes
  5961 ;; Hardware stack levels used:    1
  5962 ;; Hardware stack levels required when called:   12
  5963 ;; This function calls:
  5964 ;;		_calcChecksum
  5965 ;;		_write_ASLBoron_cnfg
  5966 ;;		_write_ASLBoron_cstm_cnfg
  5967 ;;		_write_ASLBoron_test
  5968 ;; This function is called by:
  5969 ;;		_main
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           	psect	text11
  5974  001058                     __ptext11:
  5975                           	opt stack 0
  5976  001058                     _run_ASLBoron:
  5977                           	opt stack 18
  5978                           
  5979                           ;HX_ASL_BORON.c: 16: uint8_t mode_run = 0;
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;incstack = 0
  5983  001058  0E00               	movlw	0
  5984  00105A  0101               	movlb	1	; () banked
  5985  00105C  6F0F               	movwf	run_ASLBoron@mode_run& (0+255),b
  5986                           
  5987                           ;HX_ASL_BORON.c: 17: uint8_t test_run = 0;
  5988  00105E  0E00               	movlw	0
  5989  001060  0101               	movlb	1	; () banked
  5990  001062  6F09               	movwf	run_ASLBoron@test_run& (0+255),b
  5991                           
  5992                           ;HX_ASL_BORON.c: 18: uint8_t cnfg_run = 0;
  5993  001064  0E00               	movlw	0
  5994  001066  0101               	movlb	1	; () banked
  5995  001068  6F0A               	movwf	run_ASLBoron@cnfg_run& (0+255),b
  5996                           
  5997                           ;HX_ASL_BORON.c: 19: uint8_t cnfg_cnt = 0;
  5998  00106A  0E00               	movlw	0
  5999  00106C  0101               	movlb	1	; () banked
  6000  00106E  6F0E               	movwf	run_ASLBoron@cnfg_cnt& (0+255),b
  6001                           
  6002                           ;HX_ASL_BORON.c: 20: uint8_t cnfg_arr[256];
  6003                           ;HX_ASL_BORON.c: 21: uint16_t data_index = 0;
  6004  001070  0E00               	movlw	0
  6005  001072  0101               	movlb	1	; () banked
  6006  001074  6F11               	movwf	(run_ASLBoron@data_index+1)& (0+255),b
  6007  001076  0E00               	movlw	0
  6008  001078  6F10               	movwf	run_ASLBoron@data_index& (0+255),b
  6009                           
  6010                           ;HX_ASL_BORON.c: 22: uint8_t rpt_run[2];
  6011                           ;HX_ASL_BORON.c: 23: uint8_t checksum = 0;
  6012  00107A  0E00               	movlw	0
  6013  00107C  0101               	movlb	1	; () banked
  6014  00107E  6F0B               	movwf	run_ASLBoron@checksum& (0+255),b
  6015                           
  6016                           ;HX_ASL_BORON.c: 24: uint8_t calc_checksum = 0;
  6017  001080  0E00               	movlw	0
  6018  001082  0101               	movlb	1	; () banked
  6019  001084  6F0C               	movwf	run_ASLBoron@calc_checksum& (0+255),b
  6020                           
  6021                           ; BSR set to: 1
  6022                           ;HX_ASL_BORON.c: 27: mode_run = hx_inData[data_index++];
  6023  001086  0101               	movlb	1	; () banked
  6024  001088  5110               	movf	run_ASLBoron@data_index& (0+255),w,b
  6025  00108A  0100               	movlb	0	; () banked
  6026  00108C  25F9               	addwf	run_ASLBoron@hx_inData& (0+255),w,b
  6027  00108E  6ED9               	movwf	fsr2l,c
  6028  001090  0101               	movlb	1	; () banked
  6029  001092  5111               	movf	(run_ASLBoron@data_index+1)& (0+255),w,b
  6030  001094  0100               	movlb	0	; () banked
  6031  001096  21FA               	addwfc	(run_ASLBoron@hx_inData+1)& (0+255),w,b
  6032  001098  6EDA               	movwf	fsr2h,c
  6033  00109A  50DF               	movf	indf2,w,c
  6034  00109C  0101               	movlb	1	; () banked
  6035  00109E  6F0F               	movwf	run_ASLBoron@mode_run& (0+255),b
  6036                           
  6037                           ; BSR set to: 1
  6038  0010A0  0101               	movlb	1	; () banked
  6039  0010A2  4B10               	infsnz	run_ASLBoron@data_index& (0+255),f,b
  6040  0010A4  2B11               	incf	(run_ASLBoron@data_index+1)& (0+255),f,b
  6041                           
  6042                           ; BSR set to: 1
  6043                           ;HX_ASL_BORON.c: 28: if (!(mode_run == 0x00 ||
  6044                           ;HX_ASL_BORON.c: 29: mode_run == 0x01 ||
  6045                           ;HX_ASL_BORON.c: 30: mode_run == 0x02 ))
  6046  0010A6  0101               	movlb	1	; () banked
  6047  0010A8  510F               	movf	run_ASLBoron@mode_run& (0+255),w,b
  6048  0010AA  0101               	movlb	1	; () banked
  6049  0010AC  B4D8               	btfsc	status,2,c
  6050  0010AE  D00C               	goto	l8213
  6051                           
  6052                           ; BSR set to: 1
  6053  0010B0  0101               	movlb	1	; () banked
  6054  0010B2  050F               	decf	run_ASLBoron@mode_run& (0+255),w,b
  6055  0010B4  B4D8               	btfsc	status,2,c
  6056  0010B6  D008               	goto	l8213
  6057                           
  6058                           ; BSR set to: 1
  6059  0010B8  0E02               	movlw	2
  6060  0010BA  0101               	movlb	1	; () banked
  6061  0010BC  190F               	xorwf	run_ASLBoron@mode_run& (0+255),w,b
  6062  0010BE  B4D8               	btfsc	status,2,c
  6063  0010C0  D003               	goto	l8213
  6064                           
  6065                           ; BSR set to: 1
  6066                           ;HX_ASL_BORON.c: 31: {
  6067                           ;HX_ASL_BORON.c: 32: hx_state = 0x21;
  6068  0010C2  0E21               	movlw	33
  6069  0010C4  6E3E               	movwf	_hx_state,c
  6070                           
  6071                           ; BSR set to: 1
  6072                           ;HX_ASL_BORON.c: 34: }
  6073                           
  6074                           ; BSR set to: 1
  6075                           ;HX_ASL_BORON.c: 33: return;
  6076  0010C6  0012               	return	
  6077  0010C8                     l8213:
  6078                           
  6079                           ; BSR set to: 1
  6080                           ;HX_ASL_BORON.c: 35: else
  6081                           ;HX_ASL_BORON.c: 36: {
  6082                           ;HX_ASL_BORON.c: 37: test_run = hx_inData[data_index++];
  6083  0010C8  0101               	movlb	1	; () banked
  6084  0010CA  5110               	movf	run_ASLBoron@data_index& (0+255),w,b
  6085  0010CC  0100               	movlb	0	; () banked
  6086  0010CE  25F9               	addwf	run_ASLBoron@hx_inData& (0+255),w,b
  6087  0010D0  6ED9               	movwf	fsr2l,c
  6088  0010D2  0101               	movlb	1	; () banked
  6089  0010D4  5111               	movf	(run_ASLBoron@data_index+1)& (0+255),w,b
  6090  0010D6  0100               	movlb	0	; () banked
  6091  0010D8  21FA               	addwfc	(run_ASLBoron@hx_inData+1)& (0+255),w,b
  6092  0010DA  6EDA               	movwf	fsr2h,c
  6093  0010DC  50DF               	movf	indf2,w,c
  6094  0010DE  0101               	movlb	1	; () banked
  6095  0010E0  6F09               	movwf	run_ASLBoron@test_run& (0+255),b
  6096                           
  6097                           ; BSR set to: 1
  6098  0010E2  0101               	movlb	1	; () banked
  6099  0010E4  4B10               	infsnz	run_ASLBoron@data_index& (0+255),f,b
  6100  0010E6  2B11               	incf	(run_ASLBoron@data_index+1)& (0+255),f,b
  6101                           
  6102                           ; BSR set to: 1
  6103                           ;HX_ASL_BORON.c: 38: if (mode_run == 0x02)
  6104  0010E8  0E02               	movlw	2
  6105  0010EA  0101               	movlb	1	; () banked
  6106  0010EC  190F               	xorwf	run_ASLBoron@mode_run& (0+255),w,b
  6107  0010EE  A4D8               	btfss	status,2,c
  6108  0010F0  D057               	goto	l8241
  6109                           
  6110                           ; BSR set to: 1
  6111                           ;HX_ASL_BORON.c: 39: {
  6112                           ;HX_ASL_BORON.c: 40: cnfg_cnt = hx_inData[data_index++];
  6113  0010F2  0101               	movlb	1	; () banked
  6114  0010F4  5110               	movf	run_ASLBoron@data_index& (0+255),w,b
  6115  0010F6  0100               	movlb	0	; () banked
  6116  0010F8  25F9               	addwf	run_ASLBoron@hx_inData& (0+255),w,b
  6117  0010FA  6ED9               	movwf	fsr2l,c
  6118  0010FC  0101               	movlb	1	; () banked
  6119  0010FE  5111               	movf	(run_ASLBoron@data_index+1)& (0+255),w,b
  6120  001100  0100               	movlb	0	; () banked
  6121  001102  21FA               	addwfc	(run_ASLBoron@hx_inData+1)& (0+255),w,b
  6122  001104  6EDA               	movwf	fsr2h,c
  6123  001106  50DF               	movf	indf2,w,c
  6124  001108  0101               	movlb	1	; () banked
  6125  00110A  6F0E               	movwf	run_ASLBoron@cnfg_cnt& (0+255),b
  6126                           
  6127                           ; BSR set to: 1
  6128  00110C  0101               	movlb	1	; () banked
  6129  00110E  4B10               	infsnz	run_ASLBoron@data_index& (0+255),f,b
  6130  001110  2B11               	incf	(run_ASLBoron@data_index+1)& (0+255),f,b
  6131                           
  6132                           ; BSR set to: 1
  6133                           ;HX_ASL_BORON.c: 41: if ((3*cnfg_cnt > 256) || (cnfg_cnt < 1))
  6134  001112  0101               	movlb	1	; () banked
  6135  001114  510E               	movf	run_ASLBoron@cnfg_cnt& (0+255),w,b
  6136  001116  0D03               	mullw	3
  6137  001118  BEF4               	btfsc	prodh,7,c
  6138  00111A  D005               	goto	l8225
  6139  00111C  04F3               	decf	prodl,w,c
  6140  00111E  0E01               	movlw	1
  6141  001120  58F4               	subwfb	prodh,w,c
  6142  001122  B0D8               	btfsc	status,0,c
  6143  001124  D005               	goto	l8227
  6144  001126                     l8225:
  6145                           
  6146                           ; BSR set to: 1
  6147  001126  0101               	movlb	1	; () banked
  6148  001128  510E               	movf	run_ASLBoron@cnfg_cnt& (0+255),w,b
  6149  00112A  0101               	movlb	1	; () banked
  6150  00112C  A4D8               	btfss	status,2,c
  6151  00112E  D003               	goto	l8231
  6152  001130                     l8227:
  6153                           
  6154                           ; BSR set to: 1
  6155                           ;HX_ASL_BORON.c: 42: {
  6156                           ;HX_ASL_BORON.c: 43: hx_state = 0x40;
  6157  001130  0E40               	movlw	64
  6158  001132  6E3E               	movwf	_hx_state,c
  6159                           
  6160                           ; BSR set to: 1
  6161                           ;HX_ASL_BORON.c: 44: return;
  6162  001134  0012               	return	
  6163  001136                     l8231:
  6164                           
  6165                           ; BSR set to: 1
  6166                           ;HX_ASL_BORON.c: 45: }
  6167                           ;HX_ASL_BORON.c: 46: for (uint8_t i = 0; i < 3*cnfg_cnt; i++)
  6168  001136  0E00               	movlw	0
  6169  001138  0101               	movlb	1	; () banked
  6170  00113A  6F0D               	movwf	run_ASLBoron@i& (0+255),b
  6171  00113C  D01A               	goto	l8239
  6172  00113E                     l8233:
  6173                           
  6174                           ; BSR set to: 1
  6175                           ;HX_ASL_BORON.c: 47: {
  6176                           ;HX_ASL_BORON.c: 48: cnfg_arr[i] = hx_inData[data_index++];
  6177  00113E  0101               	movlb	1	; () banked
  6178  001140  5110               	movf	run_ASLBoron@data_index& (0+255),w,b
  6179  001142  0100               	movlb	0	; () banked
  6180  001144  25F9               	addwf	run_ASLBoron@hx_inData& (0+255),w,b
  6181  001146  6ED9               	movwf	fsr2l,c
  6182  001148  0101               	movlb	1	; () banked
  6183  00114A  5111               	movf	(run_ASLBoron@data_index+1)& (0+255),w,b
  6184  00114C  0100               	movlb	0	; () banked
  6185  00114E  21FA               	addwfc	(run_ASLBoron@hx_inData+1)& (0+255),w,b
  6186  001150  6EDA               	movwf	fsr2h,c
  6187  001152  0101               	movlb	1	; () banked
  6188  001154  510D               	movf	run_ASLBoron@i& (0+255),w,b
  6189  001156  0D01               	mullw	1
  6190  001158  0E00               	movlw	low run_ASLBoron@cnfg_arr
  6191  00115A  24F3               	addwf	prodl,w,c
  6192  00115C  6EE1               	movwf	fsr1l,c
  6193  00115E  0E03               	movlw	high run_ASLBoron@cnfg_arr
  6194  001160  20F4               	addwfc	prodh,w,c
  6195  001162  6EE2               	movwf	fsr1h,c
  6196  001164  CFDF FFE7          	movff	indf2,indf1
  6197                           
  6198                           ; BSR set to: 1
  6199  001168  0101               	movlb	1	; () banked
  6200  00116A  4B10               	infsnz	run_ASLBoron@data_index& (0+255),f,b
  6201  00116C  2B11               	incf	(run_ASLBoron@data_index+1)& (0+255),f,b
  6202                           
  6203                           ; BSR set to: 1
  6204  00116E  0101               	movlb	1	; () banked
  6205  001170  2B0D               	incf	run_ASLBoron@i& (0+255),f,b
  6206  001172                     l8239:
  6207                           
  6208                           ; BSR set to: 1
  6209  001172  0101               	movlb	1	; () banked
  6210  001174  510E               	movf	run_ASLBoron@cnfg_cnt& (0+255),w,b
  6211  001176  0D03               	mullw	3
  6212  001178  0101               	movlb	1	; () banked
  6213  00117A  510D               	movf	run_ASLBoron@i& (0+255),w,b
  6214  00117C  0101               	movlb	1	; () banked
  6215  00117E  6F00               	movwf	??_run_ASLBoron& (0+255),b
  6216  001180  6B01               	clrf	(??_run_ASLBoron+1)& (0+255),b
  6217  001182  50F3               	movf	prodl,w,c
  6218  001184  0101               	movlb	1	; () banked
  6219  001186  5D00               	subwf	??_run_ASLBoron& (0+255),w,b
  6220  001188  0101               	movlb	1	; () banked
  6221  00118A  5101               	movf	(??_run_ASLBoron+1)& (0+255),w,b
  6222  00118C  0A80               	xorlw	128
  6223  00118E  0101               	movlb	1	; () banked
  6224  001190  6F02               	movwf	(??_run_ASLBoron+2)& (0+255),b
  6225  001192  50F4               	movf	prodh,w,c
  6226  001194  0A80               	xorlw	128
  6227  001196  0101               	movlb	1	; () banked
  6228  001198  5902               	subwfb	(??_run_ASLBoron+2)& (0+255),w,b
  6229  00119A  B0D8               	btfsc	status,0,c
  6230  00119C  D011               	goto	l8245
  6231  00119E  D7CF               	goto	l8233
  6232  0011A0                     l8241:
  6233                           
  6234                           ; BSR set to: 1
  6235                           ;HX_ASL_BORON.c: 51: else
  6236                           ;HX_ASL_BORON.c: 52: {
  6237                           ;HX_ASL_BORON.c: 53: cnfg_run = hx_inData[data_index++];
  6238  0011A0  0101               	movlb	1	; () banked
  6239  0011A2  5110               	movf	run_ASLBoron@data_index& (0+255),w,b
  6240  0011A4  0100               	movlb	0	; () banked
  6241  0011A6  25F9               	addwf	run_ASLBoron@hx_inData& (0+255),w,b
  6242  0011A8  6ED9               	movwf	fsr2l,c
  6243  0011AA  0101               	movlb	1	; () banked
  6244  0011AC  5111               	movf	(run_ASLBoron@data_index+1)& (0+255),w,b
  6245  0011AE  0100               	movlb	0	; () banked
  6246  0011B0  21FA               	addwfc	(run_ASLBoron@hx_inData+1)& (0+255),w,b
  6247  0011B2  6EDA               	movwf	fsr2h,c
  6248  0011B4  50DF               	movf	indf2,w,c
  6249  0011B6  0101               	movlb	1	; () banked
  6250  0011B8  6F0A               	movwf	run_ASLBoron@cnfg_run& (0+255),b
  6251                           
  6252                           ; BSR set to: 1
  6253  0011BA  0101               	movlb	1	; () banked
  6254  0011BC  4B10               	infsnz	run_ASLBoron@data_index& (0+255),f,b
  6255  0011BE  2B11               	incf	(run_ASLBoron@data_index+1)& (0+255),f,b
  6256  0011C0                     l8245:
  6257                           
  6258                           ; BSR set to: 1
  6259                           ;HX_ASL_BORON.c: 54: }
  6260                           ;HX_ASL_BORON.c: 55: rpt_run[0] = hx_inData[data_index] == 0 ? 1 : hx_inData[data_index]
      +                          ;
  6261  0011C0  0101               	movlb	1	; () banked
  6262  0011C2  5110               	movf	run_ASLBoron@data_index& (0+255),w,b
  6263  0011C4  0100               	movlb	0	; () banked
  6264  0011C6  25F9               	addwf	run_ASLBoron@hx_inData& (0+255),w,b
  6265  0011C8  6ED9               	movwf	fsr2l,c
  6266  0011CA  0101               	movlb	1	; () banked
  6267  0011CC  5111               	movf	(run_ASLBoron@data_index+1)& (0+255),w,b
  6268  0011CE  0100               	movlb	0	; () banked
  6269  0011D0  21FA               	addwfc	(run_ASLBoron@hx_inData+1)& (0+255),w,b
  6270  0011D2  6EDA               	movwf	fsr2h,c
  6271  0011D4  50DF               	movf	indf2,w,c
  6272  0011D6  B4D8               	btfsc	status,2,c
  6273  0011D8  D013               	goto	l8249
  6274                           
  6275                           ; BSR set to: 0
  6276  0011DA  0101               	movlb	1	; () banked
  6277  0011DC  5110               	movf	run_ASLBoron@data_index& (0+255),w,b
  6278  0011DE  0100               	movlb	0	; () banked
  6279  0011E0  25F9               	addwf	run_ASLBoron@hx_inData& (0+255),w,b
  6280  0011E2  6ED9               	movwf	fsr2l,c
  6281  0011E4  0101               	movlb	1	; () banked
  6282  0011E6  5111               	movf	(run_ASLBoron@data_index+1)& (0+255),w,b
  6283  0011E8  0100               	movlb	0	; () banked
  6284  0011EA  21FA               	addwfc	(run_ASLBoron@hx_inData+1)& (0+255),w,b
  6285  0011EC  6EDA               	movwf	fsr2h,c
  6286  0011EE  50DF               	movf	indf2,w,c
  6287  0011F0  0101               	movlb	1	; () banked
  6288  0011F2  6F00               	movwf	??_run_ASLBoron& (0+255),b
  6289  0011F4  0101               	movlb	1	; () banked
  6290  0011F6  5100               	movf	??_run_ASLBoron& (0+255),w,b
  6291  0011F8  0101               	movlb	1	; () banked
  6292  0011FA  6F03               	movwf	_run_ASLBoron$863& (0+255),b
  6293  0011FC  6B04               	clrf	(_run_ASLBoron$863+1)& (0+255),b
  6294  0011FE  D005               	goto	l8251
  6295  001200                     l8249:
  6296  001200  0E00               	movlw	0
  6297  001202  0101               	movlb	1	; () banked
  6298  001204  6F04               	movwf	(_run_ASLBoron$863+1)& (0+255),b
  6299  001206  0E01               	movlw	1
  6300  001208  6F03               	movwf	_run_ASLBoron$863& (0+255),b
  6301  00120A                     l8251:
  6302                           
  6303                           ; BSR set to: 1
  6304  00120A  C103  F107         	movff	_run_ASLBoron$863,run_ASLBoron@rpt_run
  6305                           
  6306                           ; BSR set to: 1
  6307                           ;HX_ASL_BORON.c: 56: data_index++;
  6308  00120E  0101               	movlb	1	; () banked
  6309  001210  4B10               	infsnz	run_ASLBoron@data_index& (0+255),f,b
  6310  001212  2B11               	incf	(run_ASLBoron@data_index+1)& (0+255),f,b
  6311                           
  6312                           ; BSR set to: 1
  6313                           ;HX_ASL_BORON.c: 57: rpt_run[1] = hx_inData[data_index] == 0 ? 1 : hx_inData[data_index]
      +                          ;
  6314  001214  0101               	movlb	1	; () banked
  6315  001216  5110               	movf	run_ASLBoron@data_index& (0+255),w,b
  6316  001218  0100               	movlb	0	; () banked
  6317  00121A  25F9               	addwf	run_ASLBoron@hx_inData& (0+255),w,b
  6318  00121C  6ED9               	movwf	fsr2l,c
  6319  00121E  0101               	movlb	1	; () banked
  6320  001220  5111               	movf	(run_ASLBoron@data_index+1)& (0+255),w,b
  6321  001222  0100               	movlb	0	; () banked
  6322  001224  21FA               	addwfc	(run_ASLBoron@hx_inData+1)& (0+255),w,b
  6323  001226  6EDA               	movwf	fsr2h,c
  6324  001228  50DF               	movf	indf2,w,c
  6325  00122A  B4D8               	btfsc	status,2,c
  6326  00122C  D013               	goto	l8259
  6327                           
  6328                           ; BSR set to: 0
  6329  00122E  0101               	movlb	1	; () banked
  6330  001230  5110               	movf	run_ASLBoron@data_index& (0+255),w,b
  6331  001232  0100               	movlb	0	; () banked
  6332  001234  25F9               	addwf	run_ASLBoron@hx_inData& (0+255),w,b
  6333  001236  6ED9               	movwf	fsr2l,c
  6334  001238  0101               	movlb	1	; () banked
  6335  00123A  5111               	movf	(run_ASLBoron@data_index+1)& (0+255),w,b
  6336  00123C  0100               	movlb	0	; () banked
  6337  00123E  21FA               	addwfc	(run_ASLBoron@hx_inData+1)& (0+255),w,b
  6338  001240  6EDA               	movwf	fsr2h,c
  6339  001242  50DF               	movf	indf2,w,c
  6340  001244  0101               	movlb	1	; () banked
  6341  001246  6F00               	movwf	??_run_ASLBoron& (0+255),b
  6342  001248  0101               	movlb	1	; () banked
  6343  00124A  5100               	movf	??_run_ASLBoron& (0+255),w,b
  6344  00124C  0101               	movlb	1	; () banked
  6345  00124E  6F05               	movwf	_run_ASLBoron$864& (0+255),b
  6346  001250  6B06               	clrf	(_run_ASLBoron$864+1)& (0+255),b
  6347  001252  D005               	goto	l8261
  6348  001254                     l8259:
  6349  001254  0E00               	movlw	0
  6350  001256  0101               	movlb	1	; () banked
  6351  001258  6F06               	movwf	(_run_ASLBoron$864+1)& (0+255),b
  6352  00125A  0E01               	movlw	1
  6353  00125C  6F05               	movwf	_run_ASLBoron$864& (0+255),b
  6354  00125E                     l8261:
  6355                           
  6356                           ; BSR set to: 1
  6357  00125E  C105  F108         	movff	_run_ASLBoron$864,run_ASLBoron@rpt_run+1
  6358                           
  6359                           ; BSR set to: 1
  6360                           ;HX_ASL_BORON.c: 58: data_index++;
  6361  001262  0101               	movlb	1	; () banked
  6362  001264  4B10               	infsnz	run_ASLBoron@data_index& (0+255),f,b
  6363  001266  2B11               	incf	(run_ASLBoron@data_index+1)& (0+255),f,b
  6364                           
  6365                           ; BSR set to: 1
  6366                           ;HX_ASL_BORON.c: 59: checksum = hx_inData[data_index++];
  6367  001268  0101               	movlb	1	; () banked
  6368  00126A  5110               	movf	run_ASLBoron@data_index& (0+255),w,b
  6369  00126C  0100               	movlb	0	; () banked
  6370  00126E  25F9               	addwf	run_ASLBoron@hx_inData& (0+255),w,b
  6371  001270  6ED9               	movwf	fsr2l,c
  6372  001272  0101               	movlb	1	; () banked
  6373  001274  5111               	movf	(run_ASLBoron@data_index+1)& (0+255),w,b
  6374  001276  0100               	movlb	0	; () banked
  6375  001278  21FA               	addwfc	(run_ASLBoron@hx_inData+1)& (0+255),w,b
  6376  00127A  6EDA               	movwf	fsr2h,c
  6377  00127C  50DF               	movf	indf2,w,c
  6378  00127E  0101               	movlb	1	; () banked
  6379  001280  6F0B               	movwf	run_ASLBoron@checksum& (0+255),b
  6380                           
  6381                           ; BSR set to: 1
  6382  001282  0101               	movlb	1	; () banked
  6383  001284  4B10               	infsnz	run_ASLBoron@data_index& (0+255),f,b
  6384  001286  2B11               	incf	(run_ASLBoron@data_index+1)& (0+255),f,b
  6385                           
  6386                           ; BSR set to: 1
  6387                           ;HX_ASL_BORON.c: 60: calc_checksum = calcChecksum(hx_inData, data_index-1);
  6388  001288  C0F9  F0BE         	movff	run_ASLBoron@hx_inData,calcChecksum@data
  6389  00128C  C0FA  F0BF         	movff	run_ASLBoron@hx_inData+1,calcChecksum@data+1
  6390  001290  0101               	movlb	1	; () banked
  6391  001292  0510               	decf	run_ASLBoron@data_index& (0+255),w,b
  6392  001294  0100               	movlb	0	; () banked
  6393  001296  6FC0               	movwf	calcChecksum@size& (0+255),b
  6394  001298  ECE0  F012         	call	_calcChecksum	;wreg free
  6395  00129C  0101               	movlb	1	; () banked
  6396  00129E  6F0C               	movwf	run_ASLBoron@calc_checksum& (0+255),b
  6397                           
  6398                           ; BSR set to: 1
  6399                           ;HX_ASL_BORON.c: 61: if (calc_checksum != checksum)
  6400  0012A0  0101               	movlb	1	; () banked
  6401  0012A2  510B               	movf	run_ASLBoron@checksum& (0+255),w,b
  6402  0012A4  0101               	movlb	1	; () banked
  6403  0012A6  190C               	xorwf	run_ASLBoron@calc_checksum& (0+255),w,b
  6404  0012A8  B4D8               	btfsc	status,2,c
  6405  0012AA  D044               	goto	l8301
  6406                           
  6407                           ; BSR set to: 1
  6408                           ;HX_ASL_BORON.c: 62: {
  6409                           ;HX_ASL_BORON.c: 63: hx_state = 0x20;
  6410  0012AC  0E20               	movlw	32
  6411  0012AE  6E3E               	movwf	_hx_state,c
  6412                           
  6413                           ; BSR set to: 1
  6414                           ;HX_ASL_BORON.c: 65: }
  6415                           
  6416                           ; BSR set to: 1
  6417                           ;HX_ASL_BORON.c: 64: return;
  6418  0012B0  0012               	return	
  6419  0012B2                     l8279:
  6420                           
  6421                           ; BSR set to: 1
  6422                           ;HX_ASL_BORON.c: 71: hx_mainDataIndex = 1;
  6423  0012B2  0E01               	movlw	1
  6424  0012B4  6E38               	movwf	_hx_mainDataIndex,c
  6425                           
  6426                           ; BSR set to: 1
  6427                           ;HX_ASL_BORON.c: 72: write_ASLBoron_test(test_run, rpt_run, hx_mainData);
  6428  0012B6  0E07               	movlw	low run_ASLBoron@rpt_run
  6429  0012B8  0100               	movlb	0	; () banked
  6430  0012BA  6FED               	movwf	write_ASLBoron_test@run_rpt& (0+255),b
  6431  0012BC  0E01               	movlw	high run_ASLBoron@rpt_run
  6432  0012BE  0100               	movlb	0	; () banked
  6433  0012C0  6FEE               	movwf	(write_ASLBoron_test@run_rpt+1)& (0+255),b
  6434  0012C2  0E72               	movlw	low _hx_mainData
  6435  0012C4  0100               	movlb	0	; () banked
  6436  0012C6  6FEF               	movwf	write_ASLBoron_test@rxBuffer& (0+255),b
  6437  0012C8  0E00               	movlw	high _hx_mainData
  6438  0012CA  0100               	movlb	0	; () banked
  6439  0012CC  6FF0               	movwf	(write_ASLBoron_test@rxBuffer+1)& (0+255),b
  6440  0012CE  0101               	movlb	1	; () banked
  6441  0012D0  5109               	movf	run_ASLBoron@test_run& (0+255),w,b
  6442  0012D2  EC54  F00D         	call	_write_ASLBoron_test
  6443                           
  6444                           ;HX_ASL_BORON.c: 73: hx_state = 0x10;
  6445  0012D6  0E10               	movlw	16
  6446  0012D8  6E3E               	movwf	_hx_state,c
  6447                           
  6448                           ;HX_ASL_BORON.c: 74: break;
  6449  0012DA  0012               	return	
  6450  0012DC                     l8285:
  6451                           
  6452                           ;HX_ASL_BORON.c: 77: hx_mainDataIndex = 1;
  6453  0012DC  0E01               	movlw	1
  6454  0012DE  6E38               	movwf	_hx_mainDataIndex,c
  6455                           
  6456                           ;HX_ASL_BORON.c: 78: write_ASLBoron_cnfg(cnfg_run, hx_mainData);
  6457  0012E0  0E72               	movlw	low _hx_mainData
  6458  0012E2  0100               	movlb	0	; () banked
  6459  0012E4  6FC0               	movwf	write_ASLBoron_cnfg@rxBuffer& (0+255),b
  6460  0012E6  0E00               	movlw	high _hx_mainData
  6461  0012E8  0100               	movlb	0	; () banked
  6462  0012EA  6FC1               	movwf	(write_ASLBoron_cnfg@rxBuffer+1)& (0+255),b
  6463  0012EC  0101               	movlb	1	; () banked
  6464  0012EE  510A               	movf	run_ASLBoron@cnfg_run& (0+255),w,b
  6465  0012F0  ECF2  F010         	call	_write_ASLBoron_cnfg
  6466                           
  6467                           ;HX_ASL_BORON.c: 79: hx_state = 0x10;
  6468  0012F4  0E10               	movlw	16
  6469  0012F6  6E3E               	movwf	_hx_state,c
  6470                           
  6471                           ;HX_ASL_BORON.c: 80: break;
  6472  0012F8  0012               	return	
  6473  0012FA                     l8291:
  6474                           
  6475                           ;HX_ASL_BORON.c: 83: hx_mainDataIndex = 1;
  6476  0012FA  0E01               	movlw	1
  6477  0012FC  6E38               	movwf	_hx_mainDataIndex,c
  6478                           
  6479                           ;HX_ASL_BORON.c: 84: write_ASLBoron_cstm_cnfg(cnfg_arr, 3*cnfg_cnt, hx_mainData);
  6480  0012FE  0E00               	movlw	low run_ASLBoron@cnfg_arr
  6481  001300  0100               	movlb	0	; () banked
  6482  001302  6FBE               	movwf	write_ASLBoron_cstm_cnfg@cnfg_arr& (0+255),b
  6483  001304  0E03               	movlw	high run_ASLBoron@cnfg_arr
  6484  001306  0100               	movlb	0	; () banked
  6485  001308  6FBF               	movwf	(write_ASLBoron_cstm_cnfg@cnfg_arr+1)& (0+255),b
  6486  00130A  0101               	movlb	1	; () banked
  6487  00130C  510E               	movf	run_ASLBoron@cnfg_cnt& (0+255),w,b
  6488  00130E  0D03               	mullw	3
  6489  001310  CFF3 F0C0          	movff	prodl,write_ASLBoron_cstm_cnfg@cnfg_arr_size
  6490  001314  CFF4 F0C1          	movff	prodh,write_ASLBoron_cstm_cnfg@cnfg_arr_size+1
  6491  001318  0E72               	movlw	low _hx_mainData
  6492  00131A  0100               	movlb	0	; () banked
  6493  00131C  6FC2               	movwf	write_ASLBoron_cstm_cnfg@rxBuffer& (0+255),b
  6494  00131E  0E00               	movlw	high _hx_mainData
  6495  001320  0100               	movlb	0	; () banked
  6496  001322  6FC3               	movwf	(write_ASLBoron_cstm_cnfg@rxBuffer+1)& (0+255),b
  6497  001324  ECEF  F00F         	call	_write_ASLBoron_cstm_cnfg	;wreg free
  6498                           
  6499                           ;HX_ASL_BORON.c: 85: hx_state = 0x10;
  6500  001328  0E10               	movlw	16
  6501  00132A  6E3E               	movwf	_hx_state,c
  6502                           
  6503                           ;HX_ASL_BORON.c: 86: break;
  6504  00132C  0012               	return	
  6505  00132E                     l8297:
  6506                           
  6507                           ;HX_ASL_BORON.c: 89: hx_state = 0x40;
  6508  00132E  0E40               	movlw	64
  6509  001330  6E3E               	movwf	_hx_state,c
  6510                           
  6511                           ;HX_ASL_BORON.c: 91: }
  6512                           
  6513                           ;HX_ASL_BORON.c: 90: break;
  6514  001332  0012               	return	
  6515  001334                     l8301:
  6516  001334  0101               	movlb	1	; () banked
  6517  001336  510F               	movf	run_ASLBoron@mode_run& (0+255),w,b
  6518                           
  6519                           ; Switch size 1, requested type "space"
  6520                           ; Number of cases is 3, Range of values is 0 to 2
  6521                           ; switch strategies available:
  6522                           ; Name         Instructions Cycles
  6523                           ; simple_byte           10     6 (average)
  6524                           ;	Chosen strategy is simple_byte
  6525  001338  0A00               	xorlw	0	; case 0
  6526  00133A  B4D8               	btfsc	status,2,c
  6527  00133C  D7BA               	goto	l8279
  6528  00133E  0A01               	xorlw	1	; case 1
  6529  001340  B4D8               	btfsc	status,2,c
  6530  001342  D7CC               	goto	l8285
  6531  001344  0A03               	xorlw	3	; case 2
  6532  001346  B4D8               	btfsc	status,2,c
  6533  001348  D7D8               	goto	l8291
  6534  00134A  D7F1               	goto	l8297
  6535  00134C                     __end_of_run_ASLBoron:
  6536                           	opt stack 0
  6537                           tblptru	equ	0xFF8
  6538                           tblptrh	equ	0xFF7
  6539                           tblptrl	equ	0xFF6
  6540                           tablat	equ	0xFF5
  6541                           prodh	equ	0xFF4
  6542                           prodl	equ	0xFF3
  6543                           intcon	equ	0xFF2
  6544                           postinc0	equ	0xFEE
  6545                           wreg	equ	0xFE8
  6546                           indf1	equ	0xFE7
  6547                           postinc1	equ	0xFE6
  6548                           fsr1h	equ	0xFE2
  6549                           fsr1l	equ	0xFE1
  6550                           indf2	equ	0xFDF
  6551                           postinc2	equ	0xFDE
  6552                           fsr2h	equ	0xFDA
  6553                           fsr2l	equ	0xFD9
  6554                           status	equ	0xFD8
  6555                           
  6556 ;; *************** function _write_ASLBoron_test *****************
  6557 ;; Defined at:
  6558 ;;		line 96 in file "HX_ASL_BORON.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;  run_test        1    wreg     unsigned char 
  6561 ;;  run_rpt         2   47[BANK0 ] PTR unsigned char 
  6562 ;;		 -> run_ASLBoron@rpt_run(2), 
  6563 ;;  rxBuffer        2   49[BANK0 ] PTR unsigned char 
  6564 ;;		 -> hx_mainData(61), 
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;  run_test        1   54[BANK0 ] unsigned char 
  6567 ;;  j               2   57[BANK0 ] int 
  6568 ;;  i               2   55[BANK0 ] int 
  6569 ;; Return value:  Size  Location     Type
  6570 ;;                  1    wreg      void 
  6571 ;; Registers used:
  6572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6578 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6579 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6580 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6581 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6582 ;;Total ram usage:       12 bytes
  6583 ;; Hardware stack levels used:    1
  6584 ;; Hardware stack levels required when called:   11
  6585 ;; This function calls:
  6586 ;;		_ARDUINO_test_debug
  6587 ;;		_ASLB_test0
  6588 ;;		_ASLB_test1
  6589 ;; This function is called by:
  6590 ;;		_run_ASLBoron
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594                           	psect	text12
  6595  001AA8                     __ptext12:
  6596                           	opt stack 0
  6597  001AA8                     _write_ASLBoron_test:
  6598                           	opt stack 18
  6599                           
  6600                           ;incstack = 0
  6601                           ;write_ASLBoron_test@run_test stored from wreg
  6602  001AA8  0100               	movlb	0	; () banked
  6603  001AAA  6FF4               	movwf	write_ASLBoron_test@run_test& (0+255),b
  6604                           
  6605                           ;HX_ASL_BORON.c: 98: int i,j;
  6606                           ;HX_ASL_BORON.c: 100: for (i = 0; i < run_rpt[0]; i++)
  6607  001AAC  0E00               	movlw	0
  6608  001AAE  0100               	movlb	0	; () banked
  6609  001AB0  6FF6               	movwf	(write_ASLBoron_test@i+1)& (0+255),b
  6610  001AB2  0E00               	movlw	0
  6611  001AB4  6FF5               	movwf	write_ASLBoron_test@i& (0+255),b
  6612  001AB6  D068               	goto	l8009
  6613  001AB8                     l7981:
  6614                           
  6615                           ; BSR set to: 0
  6616                           ;HX_ASL_BORON.c: 101: {
  6617                           ;HX_ASL_BORON.c: 102: for (j = 0; j < run_rpt[1]; j++)
  6618  001AB8  0E00               	movlw	0
  6619  001ABA  0100               	movlb	0	; () banked
  6620  001ABC  6FF8               	movwf	(write_ASLBoron_test@j+1)& (0+255),b
  6621  001ABE  0E00               	movlw	0
  6622  001AC0  6FF7               	movwf	write_ASLBoron_test@j& (0+255),b
  6623  001AC2  D044               	goto	l8005
  6624  001AC4                     l7983:
  6625                           
  6626                           ; BSR set to: 0
  6627                           ;HX_ASL_BORON.c: 107: ASLB_test0(&rxBuffer[1]);
  6628  001AC4  0E01               	movlw	1
  6629  001AC6  0100               	movlb	0	; () banked
  6630  001AC8  25EF               	addwf	write_ASLBoron_test@rxBuffer& (0+255),w,b
  6631  001ACA  0100               	movlb	0	; () banked
  6632  001ACC  6FBE               	movwf	ASLB_test0@rxBuffer& (0+255),b
  6633  001ACE  0E00               	movlw	0
  6634  001AD0  0100               	movlb	0	; () banked
  6635  001AD2  21F0               	addwfc	(write_ASLBoron_test@rxBuffer+1)& (0+255),w,b
  6636  001AD4  0100               	movlb	0	; () banked
  6637  001AD6  6FBF               	movwf	(ASLB_test0@rxBuffer+1)& (0+255),b
  6638  001AD8  EC56  F014         	call	_ASLB_test0	;wreg free
  6639  001ADC  D019               	goto	l7993
  6640  001ADE                     l7987:
  6641                           
  6642                           ;HX_ASL_BORON.c: 112: ASLB_test1(&rxBuffer[1]);
  6643  001ADE  0E01               	movlw	1
  6644  001AE0  0100               	movlb	0	; () banked
  6645  001AE2  25EF               	addwf	write_ASLBoron_test@rxBuffer& (0+255),w,b
  6646  001AE4  0100               	movlb	0	; () banked
  6647  001AE6  6FD6               	movwf	ASLB_test1@rxBuffer& (0+255),b
  6648  001AE8  0E00               	movlw	0
  6649  001AEA  0100               	movlb	0	; () banked
  6650  001AEC  21F0               	addwfc	(write_ASLBoron_test@rxBuffer+1)& (0+255),w,b
  6651  001AEE  0100               	movlb	0	; () banked
  6652  001AF0  6FD7               	movwf	(ASLB_test1@rxBuffer+1)& (0+255),b
  6653  001AF2  EC3D  F002         	call	_ASLB_test1	;wreg free
  6654  001AF6  D00C               	goto	l7993
  6655  001AF8                     l7991:
  6656                           
  6657                           ;HX_ASL_BORON.c: 117: ARDUINO_test_debug(&rxBuffer[1]);
  6658  001AF8  0E01               	movlw	1
  6659  001AFA  0100               	movlb	0	; () banked
  6660  001AFC  25EF               	addwf	write_ASLBoron_test@rxBuffer& (0+255),w,b
  6661  001AFE  0100               	movlb	0	; () banked
  6662  001B00  6FD6               	movwf	ARDUINO_test_debug@rxBuffer& (0+255),b
  6663  001B02  0E00               	movlw	0
  6664  001B04  0100               	movlb	0	; () banked
  6665  001B06  21F0               	addwfc	(write_ASLBoron_test@rxBuffer+1)& (0+255),w,b
  6666  001B08  0100               	movlb	0	; () banked
  6667  001B0A  6FD7               	movwf	(ARDUINO_test_debug@rxBuffer+1)& (0+255),b
  6668  001B0C  EC3A  F010         	call	_ARDUINO_test_debug	;wreg free
  6669  001B10                     l7993:
  6670                           
  6671                           ;HX_ASL_BORON.c: 118: rxBuffer[0] = 0x10;
  6672  001B10  C0EF  FFD9         	movff	write_ASLBoron_test@rxBuffer,fsr2l
  6673  001B14  C0F0  FFDA         	movff	write_ASLBoron_test@rxBuffer+1,fsr2h
  6674  001B18  0E10               	movlw	16
  6675  001B1A  D007               	goto	L26
  6676  001B1C                     l7995:
  6677                           
  6678                           ;HX_ASL_BORON.c: 122: hx_state = 0x40;
  6679  001B1C  0E40               	movlw	64
  6680  001B1E  6E3E               	movwf	_hx_state,c
  6681                           
  6682                           ;HX_ASL_BORON.c: 123: rxBuffer[0] = 0x00;
  6683  001B20  C0EF  FFD9         	movff	write_ASLBoron_test@rxBuffer,fsr2l
  6684  001B24  C0F0  FFDA         	movff	write_ASLBoron_test@rxBuffer+1,fsr2h
  6685  001B28  0E00               	movlw	0
  6686  001B2A                     L26:
  6687  001B2A  6EDF               	movwf	indf2,c
  6688                           
  6689                           ;HX_ASL_BORON.c: 125: }
  6690                           
  6691                           ;HX_ASL_BORON.c: 124: break;
  6692  001B2C  D00C               	goto	l8003
  6693  001B2E                     l8001:
  6694  001B2E  0100               	movlb	0	; () banked
  6695  001B30  51F4               	movf	write_ASLBoron_test@run_test& (0+255),w,b
  6696                           
  6697                           ; Switch size 1, requested type "space"
  6698                           ; Number of cases is 3, Range of values is 0 to 240
  6699                           ; switch strategies available:
  6700                           ; Name         Instructions Cycles
  6701                           ; simple_byte           10     6 (average)
  6702                           ;	Chosen strategy is simple_byte
  6703  001B32  0A00               	xorlw	0	; case 0
  6704  001B34  B4D8               	btfsc	status,2,c
  6705  001B36  D7C6               	goto	l7983
  6706  001B38  0A01               	xorlw	1	; case 1
  6707  001B3A  B4D8               	btfsc	status,2,c
  6708  001B3C  D7D0               	goto	l7987
  6709  001B3E  0AF1               	xorlw	241	; case 240
  6710  001B40  B4D8               	btfsc	status,2,c
  6711  001B42  D7DA               	goto	l7991
  6712  001B44  D7EB               	goto	l7995
  6713  001B46                     l8003:
  6714  001B46  0100               	movlb	0	; () banked
  6715  001B48  4BF7               	infsnz	write_ASLBoron_test@j& (0+255),f,b
  6716  001B4A  2BF8               	incf	(write_ASLBoron_test@j+1)& (0+255),f,b
  6717  001B4C                     l8005:
  6718                           
  6719                           ; BSR set to: 0
  6720  001B4C  0100               	movlb	0	; () banked
  6721  001B4E  EE20 F001          	lfsr	2,1
  6722  001B52  51ED               	movf	write_ASLBoron_test@run_rpt& (0+255),w,b
  6723  001B54  26D9               	addwf	fsr2l,f,c
  6724  001B56  51EE               	movf	(write_ASLBoron_test@run_rpt+1)& (0+255),w,b
  6725  001B58  22DA               	addwfc	fsr2h,f,c
  6726  001B5A  50DF               	movf	indf2,w,c
  6727  001B5C  0100               	movlb	0	; () banked
  6728  001B5E  6FF1               	movwf	??_write_ASLBoron_test& (0+255),b
  6729  001B60  6BF2               	clrf	(??_write_ASLBoron_test+1)& (0+255),b
  6730  001B62  0100               	movlb	0	; () banked
  6731  001B64  51F1               	movf	??_write_ASLBoron_test& (0+255),w,b
  6732  001B66  0100               	movlb	0	; () banked
  6733  001B68  5DF7               	subwf	write_ASLBoron_test@j& (0+255),w,b
  6734  001B6A  0100               	movlb	0	; () banked
  6735  001B6C  51F8               	movf	(write_ASLBoron_test@j+1)& (0+255),w,b
  6736  001B6E  0A80               	xorlw	128
  6737  001B70  0100               	movlb	0	; () banked
  6738  001B72  6FF3               	movwf	(??_write_ASLBoron_test+2)& (0+255),b
  6739  001B74  0100               	movlb	0	; () banked
  6740  001B76  51F2               	movf	(??_write_ASLBoron_test+1)& (0+255),w,b
  6741  001B78  0A80               	xorlw	128
  6742  001B7A  0100               	movlb	0	; () banked
  6743  001B7C  59F3               	subwfb	(??_write_ASLBoron_test+2)& (0+255),w,b
  6744  001B7E  A0D8               	btfss	status,0,c
  6745  001B80  D7D6               	goto	l8001
  6746                           
  6747                           ; BSR set to: 0
  6748                           
  6749                           ; BSR set to: 0
  6750  001B82  0100               	movlb	0	; () banked
  6751  001B84  4BF5               	infsnz	write_ASLBoron_test@i& (0+255),f,b
  6752  001B86  2BF6               	incf	(write_ASLBoron_test@i+1)& (0+255),f,b
  6753  001B88                     l8009:
  6754                           
  6755                           ; BSR set to: 0
  6756  001B88  C0ED  FFD9         	movff	write_ASLBoron_test@run_rpt,fsr2l
  6757  001B8C  C0EE  FFDA         	movff	write_ASLBoron_test@run_rpt+1,fsr2h
  6758  001B90  50DF               	movf	indf2,w,c
  6759  001B92  0100               	movlb	0	; () banked
  6760  001B94  6FF1               	movwf	??_write_ASLBoron_test& (0+255),b
  6761  001B96  6BF2               	clrf	(??_write_ASLBoron_test+1)& (0+255),b
  6762  001B98  0100               	movlb	0	; () banked
  6763  001B9A  51F1               	movf	??_write_ASLBoron_test& (0+255),w,b
  6764  001B9C  0100               	movlb	0	; () banked
  6765  001B9E  5DF5               	subwf	write_ASLBoron_test@i& (0+255),w,b
  6766  001BA0  0100               	movlb	0	; () banked
  6767  001BA2  51F6               	movf	(write_ASLBoron_test@i+1)& (0+255),w,b
  6768  001BA4  0A80               	xorlw	128
  6769  001BA6  0100               	movlb	0	; () banked
  6770  001BA8  6FF3               	movwf	(??_write_ASLBoron_test+2)& (0+255),b
  6771  001BAA  0100               	movlb	0	; () banked
  6772  001BAC  51F2               	movf	(??_write_ASLBoron_test+1)& (0+255),w,b
  6773  001BAE  0A80               	xorlw	128
  6774  001BB0  0100               	movlb	0	; () banked
  6775  001BB2  59F3               	subwfb	(??_write_ASLBoron_test+2)& (0+255),w,b
  6776  001BB4  B0D8               	btfsc	status,0,c
  6777  001BB6  0012               	return	
  6778  001BB8  D77F               	goto	l7981
  6779  001BBA                     __end_of_write_ASLBoron_test:
  6780                           	opt stack 0
  6781                           tblptru	equ	0xFF8
  6782                           tblptrh	equ	0xFF7
  6783                           tblptrl	equ	0xFF6
  6784                           tablat	equ	0xFF5
  6785                           prodh	equ	0xFF4
  6786                           prodl	equ	0xFF3
  6787                           intcon	equ	0xFF2
  6788                           postinc0	equ	0xFEE
  6789                           wreg	equ	0xFE8
  6790                           indf1	equ	0xFE7
  6791                           postinc1	equ	0xFE6
  6792                           fsr1h	equ	0xFE2
  6793                           fsr1l	equ	0xFE1
  6794                           indf2	equ	0xFDF
  6795                           postinc2	equ	0xFDE
  6796                           fsr2h	equ	0xFDA
  6797                           fsr2l	equ	0xFD9
  6798                           status	equ	0xFD8
  6799                           
  6800 ;; *************** function _ASLB_test1 *****************
  6801 ;; Defined at:
  6802 ;;		line 173 in file "HX_ASL_BORON.c"
  6803 ;; Parameters:    Size  Location     Type
  6804 ;;  rxBuffer        2   24[BANK0 ] PTR unsigned char 
  6805 ;;		 -> hx_mainData(61), 
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;  ramWrMsg        6   31[BANK0 ] unsigned char [6]
  6808 ;;  ramRdMsg        5   37[BANK0 ] unsigned char [5]
  6809 ;;  ramReadback     4   26[BANK0 ] unsigned char [4]
  6810 ;;  rx_index        1   46[BANK0 ] unsigned char 
  6811 ;;  rd_status       1   45[BANK0 ] unsigned char 
  6812 ;;  wr_status       1   44[BANK0 ] unsigned char 
  6813 ;;  ramAddrLow      1   43[BANK0 ] unsigned char 
  6814 ;;  ramAddrHigh     1   42[BANK0 ] unsigned char 
  6815 ;;  ramData         1   30[BANK0 ] unsigned char 
  6816 ;; Return value:  Size  Location     Type
  6817 ;;                  1    wreg      void 
  6818 ;; Registers used:
  6819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6820 ;; Tracked objects:
  6821 ;;		On entry : 0/0
  6822 ;;		On exit  : 0/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6825 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6826 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6828 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6829 ;;Total ram usage:       23 bytes
  6830 ;; Hardware stack levels used:    1
  6831 ;; Hardware stack levels required when called:   10
  6832 ;; This function calls:
  6833 ;;		_calcChecksum
  6834 ;;		_readI2C
  6835 ;;		_writeI2C
  6836 ;; This function is called by:
  6837 ;;		_write_ASLBoron_test
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           	psect	text13
  6842  00047A                     __ptext13:
  6843                           	opt stack 0
  6844  00047A                     _ASLB_test1:
  6845                           	opt stack 18
  6846                           
  6847                           ;HX_ASL_BORON.c: 175: uint8_t wr_status;
  6848                           ;HX_ASL_BORON.c: 176: uint8_t rd_status;
  6849                           ;HX_ASL_BORON.c: 177: uint8_t rx_index = 0;
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;incstack = 0
  6853  00047A  0E00               	movlw	0
  6854  00047C  0100               	movlb	0	; () banked
  6855  00047E  6FEC               	movwf	ASLB_test1@rx_index& (0+255),b
  6856                           
  6857                           ;HX_ASL_BORON.c: 180: uint8_t ramAddrHigh = 0x00;
  6858  000480  0E00               	movlw	0
  6859  000482  0100               	movlb	0	; () banked
  6860  000484  6FE8               	movwf	ASLB_test1@ramAddrHigh& (0+255),b
  6861                           
  6862                           ;HX_ASL_BORON.c: 181: uint8_t ramAddrLow = 0x30;
  6863  000486  0E30               	movlw	48
  6864  000488  0100               	movlb	0	; () banked
  6865  00048A  6FE9               	movwf	ASLB_test1@ramAddrLow& (0+255),b
  6866                           
  6867                           ;HX_ASL_BORON.c: 182: uint8_t ramData = 0xBB;
  6868  00048C  0EBB               	movlw	187
  6869  00048E  0100               	movlb	0	; () banked
  6870  000490  6FDC               	movwf	ASLB_test1@ramData& (0+255),b
  6871                           
  6872                           ;HX_ASL_BORON.c: 184: uint8_t ramWrMsg[6];
  6873                           ;HX_ASL_BORON.c: 185: ramWrMsg[0] = 0x32;
  6874  000492  0E32               	movlw	50
  6875  000494  0100               	movlb	0	; () banked
  6876  000496  6FDD               	movwf	ASLB_test1@ramWrMsg& (0+255),b
  6877                           
  6878                           ; BSR set to: 0
  6879                           ;HX_ASL_BORON.c: 186: ramWrMsg[1] = ramAddrLow;
  6880  000498  C0E9  F0DE         	movff	ASLB_test1@ramAddrLow,ASLB_test1@ramWrMsg+1
  6881                           
  6882                           ; BSR set to: 0
  6883                           ;HX_ASL_BORON.c: 187: ramWrMsg[2] = ramAddrHigh;
  6884  00049C  C0E8  F0DF         	movff	ASLB_test1@ramAddrHigh,ASLB_test1@ramWrMsg+2
  6885                           
  6886                           ;HX_ASL_BORON.c: 188: ramWrMsg[3] = 1;
  6887  0004A0  0E01               	movlw	1
  6888  0004A2  0100               	movlb	0	; () banked
  6889  0004A4  6FE0               	movwf	(ASLB_test1@ramWrMsg+3)& (0+255),b
  6890                           
  6891                           ; BSR set to: 0
  6892                           ;HX_ASL_BORON.c: 189: ramWrMsg[4] = ramData;
  6893  0004A6  C0DC  F0E1         	movff	ASLB_test1@ramData,ASLB_test1@ramWrMsg+4
  6894                           
  6895                           ; BSR set to: 0
  6896                           ;HX_ASL_BORON.c: 190: ramWrMsg[5] = calcChecksum(ramWrMsg, 5);
  6897  0004AA  0EDD               	movlw	low ASLB_test1@ramWrMsg
  6898  0004AC  0100               	movlb	0	; () banked
  6899  0004AE  6FBE               	movwf	calcChecksum@data& (0+255),b
  6900  0004B0  0E00               	movlw	high ASLB_test1@ramWrMsg
  6901  0004B2  0100               	movlb	0	; () banked
  6902  0004B4  6FBF               	movwf	(calcChecksum@data+1)& (0+255),b
  6903  0004B6  0E05               	movlw	5
  6904  0004B8  0100               	movlb	0	; () banked
  6905  0004BA  6FC0               	movwf	calcChecksum@size& (0+255),b
  6906  0004BC  ECE0  F012         	call	_calcChecksum	;wreg free
  6907  0004C0  0100               	movlb	0	; () banked
  6908  0004C2  6FE2               	movwf	(ASLB_test1@ramWrMsg+5)& (0+255),b
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;HX_ASL_BORON.c: 192: uint8_t ramRdMsg[5];
  6912                           ;HX_ASL_BORON.c: 193: ramRdMsg[0] = 0x22;
  6913  0004C4  0E22               	movlw	34
  6914  0004C6  0100               	movlb	0	; () banked
  6915  0004C8  6FE3               	movwf	ASLB_test1@ramRdMsg& (0+255),b
  6916                           
  6917                           ; BSR set to: 0
  6918                           ;HX_ASL_BORON.c: 194: ramRdMsg[1] = ramAddrLow;
  6919  0004CA  C0E9  F0E4         	movff	ASLB_test1@ramAddrLow,ASLB_test1@ramRdMsg+1
  6920                           
  6921                           ; BSR set to: 0
  6922                           ;HX_ASL_BORON.c: 195: ramRdMsg[2] = ramAddrHigh;
  6923  0004CE  C0E8  F0E5         	movff	ASLB_test1@ramAddrHigh,ASLB_test1@ramRdMsg+2
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;HX_ASL_BORON.c: 196: ramRdMsg[3] = 1;
  6927  0004D2  0E01               	movlw	1
  6928  0004D4  0100               	movlb	0	; () banked
  6929  0004D6  6FE6               	movwf	(ASLB_test1@ramRdMsg+3)& (0+255),b
  6930                           
  6931                           ; BSR set to: 0
  6932                           ;HX_ASL_BORON.c: 197: ramRdMsg[4] = calcChecksum(ramRdMsg, 4);
  6933  0004D8  0EE3               	movlw	low ASLB_test1@ramRdMsg
  6934  0004DA  0100               	movlb	0	; () banked
  6935  0004DC  6FBE               	movwf	calcChecksum@data& (0+255),b
  6936  0004DE  0E00               	movlw	high ASLB_test1@ramRdMsg
  6937  0004E0  0100               	movlb	0	; () banked
  6938  0004E2  6FBF               	movwf	(calcChecksum@data+1)& (0+255),b
  6939  0004E4  0E04               	movlw	4
  6940  0004E6  0100               	movlb	0	; () banked
  6941  0004E8  6FC0               	movwf	calcChecksum@size& (0+255),b
  6942  0004EA  ECE0  F012         	call	_calcChecksum	;wreg free
  6943  0004EE  0100               	movlb	0	; () banked
  6944  0004F0  6FE7               	movwf	(ASLB_test1@ramRdMsg+4)& (0+255),b
  6945                           
  6946                           ; BSR set to: 0
  6947                           ;HX_ASL_BORON.c: 199: uint8_t ramReadback[4];
  6948                           ;HX_ASL_BORON.c: 202: wr_status = writeI2C(ramWrMsg, 6, 0x5A);
  6949  0004F2  0EDD               	movlw	low ASLB_test1@ramWrMsg
  6950  0004F4  0100               	movlb	0	; () banked
  6951  0004F6  6FCE               	movwf	writeI2C@txData& (0+255),b
  6952  0004F8  0E00               	movlw	high ASLB_test1@ramWrMsg
  6953  0004FA  0100               	movlb	0	; () banked
  6954  0004FC  6FCF               	movwf	(writeI2C@txData+1)& (0+255),b
  6955  0004FE  0E06               	movlw	6
  6956  000500  0100               	movlb	0	; () banked
  6957  000502  6FD0               	movwf	writeI2C@size& (0+255),b
  6958  000504  0E00               	movlw	0
  6959  000506  0100               	movlb	0	; () banked
  6960  000508  6FD2               	movwf	(writeI2C@slaveAddr+1)& (0+255),b
  6961  00050A  0E5A               	movlw	90
  6962  00050C  6FD1               	movwf	writeI2C@slaveAddr& (0+255),b
  6963  00050E  ECB9  F010         	call	_writeI2C	;wreg free
  6964  000512  0100               	movlb	0	; () banked
  6965  000514  6FEA               	movwf	ASLB_test1@wr_status& (0+255),b
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;HX_ASL_BORON.c: 203: if (wr_status != 0)
  6969  000516  0100               	movlb	0	; () banked
  6970  000518  51EA               	movf	ASLB_test1@wr_status& (0+255),w,b
  6971  00051A  0100               	movlb	0	; () banked
  6972  00051C  B4D8               	btfsc	status,2,c
  6973  00051E  D02E               	goto	l7483
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;HX_ASL_BORON.c: 204: {
  6977                           ;HX_ASL_BORON.c: 205: rxBuffer[rx_index++] = 0x41;
  6978  000520  0100               	movlb	0	; () banked
  6979  000522  51EC               	movf	ASLB_test1@rx_index& (0+255),w,b
  6980  000524  0D01               	mullw	1
  6981  000526  50F3               	movf	prodl,w,c
  6982  000528  0100               	movlb	0	; () banked
  6983  00052A  25D6               	addwf	ASLB_test1@rxBuffer& (0+255),w,b
  6984  00052C  6ED9               	movwf	fsr2l,c
  6985  00052E  50F4               	movf	prodh,w,c
  6986  000530  0100               	movlb	0	; () banked
  6987  000532  21D7               	addwfc	(ASLB_test1@rxBuffer+1)& (0+255),w,b
  6988  000534  6EDA               	movwf	fsr2h,c
  6989  000536  0E41               	movlw	65
  6990  000538  6EDF               	movwf	indf2,c
  6991                           
  6992                           ; BSR set to: 0
  6993  00053A  0100               	movlb	0	; () banked
  6994  00053C  2BEC               	incf	ASLB_test1@rx_index& (0+255),f,b
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;HX_ASL_BORON.c: 206: rxBuffer[rx_index++] = 0x00;
  6998  00053E  0100               	movlb	0	; () banked
  6999  000540  51EC               	movf	ASLB_test1@rx_index& (0+255),w,b
  7000  000542  0D01               	mullw	1
  7001  000544  50F3               	movf	prodl,w,c
  7002  000546  0100               	movlb	0	; () banked
  7003  000548  25D6               	addwf	ASLB_test1@rxBuffer& (0+255),w,b
  7004  00054A  6ED9               	movwf	fsr2l,c
  7005  00054C  50F4               	movf	prodh,w,c
  7006  00054E  0100               	movlb	0	; () banked
  7007  000550  21D7               	addwfc	(ASLB_test1@rxBuffer+1)& (0+255),w,b
  7008  000552  6EDA               	movwf	fsr2h,c
  7009  000554  0E00               	movlw	0
  7010  000556  6EDF               	movwf	indf2,c
  7011  000558  0100               	movlb	0	; () banked
  7012  00055A  2BEC               	incf	ASLB_test1@rx_index& (0+255),f,b
  7013                           
  7014                           ; BSR set to: 0
  7015                           ;HX_ASL_BORON.c: 207: rxBuffer[rx_index++] = wr_status;
  7016  00055C  0100               	movlb	0	; () banked
  7017  00055E  51EC               	movf	ASLB_test1@rx_index& (0+255),w,b
  7018  000560  0D01               	mullw	1
  7019  000562  50F3               	movf	prodl,w,c
  7020  000564  0100               	movlb	0	; () banked
  7021  000566  25D6               	addwf	ASLB_test1@rxBuffer& (0+255),w,b
  7022  000568  6ED9               	movwf	fsr2l,c
  7023  00056A  50F4               	movf	prodh,w,c
  7024  00056C  0100               	movlb	0	; () banked
  7025  00056E  21D7               	addwfc	(ASLB_test1@rxBuffer+1)& (0+255),w,b
  7026  000570  6EDA               	movwf	fsr2h,c
  7027  000572  C0EA  FFDF         	movff	ASLB_test1@wr_status,indf2
  7028                           
  7029                           ; BSR set to: 0
  7030  000576  0100               	movlb	0	; () banked
  7031  000578  2BEC               	incf	ASLB_test1@rx_index& (0+255),f,b
  7032                           
  7033                           ; BSR set to: 0
  7034                           ;HX_ASL_BORON.c: 208: return;
  7035  00057A  0012               	return	
  7036  00057C                     l7483:
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;HX_ASL_BORON.c: 209: }
  7040                           ;HX_ASL_BORON.c: 210: rd_status = readI2C(ramReadback, 3, 0x5A);
  7041  00057C  0ED8               	movlw	low ASLB_test1@ramReadback
  7042  00057E  0100               	movlb	0	; () banked
  7043  000580  6FCE               	movwf	readI2C@rxData& (0+255),b
  7044  000582  0E00               	movlw	high ASLB_test1@ramReadback
  7045  000584  0100               	movlb	0	; () banked
  7046  000586  6FCF               	movwf	(readI2C@rxData+1)& (0+255),b
  7047  000588  0E03               	movlw	3
  7048  00058A  0100               	movlb	0	; () banked
  7049  00058C  6FD0               	movwf	readI2C@numOfRx& (0+255),b
  7050  00058E  0E00               	movlw	0
  7051  000590  0100               	movlb	0	; () banked
  7052  000592  6FD2               	movwf	(readI2C@slaveAddr+1)& (0+255),b
  7053  000594  0E5A               	movlw	90
  7054  000596  6FD1               	movwf	readI2C@slaveAddr& (0+255),b
  7055  000598  EC93  F011         	call	_readI2C	;wreg free
  7056  00059C  0100               	movlb	0	; () banked
  7057  00059E  6FEB               	movwf	ASLB_test1@rd_status& (0+255),b
  7058                           
  7059                           ; BSR set to: 0
  7060                           ;HX_ASL_BORON.c: 211: if (rd_status != 0)
  7061  0005A0  0100               	movlb	0	; () banked
  7062  0005A2  51EB               	movf	ASLB_test1@rd_status& (0+255),w,b
  7063  0005A4  0100               	movlb	0	; () banked
  7064  0005A6  B4D8               	btfsc	status,2,c
  7065  0005A8  D02E               	goto	l7499
  7066                           
  7067                           ; BSR set to: 0
  7068                           ;HX_ASL_BORON.c: 212: {
  7069                           ;HX_ASL_BORON.c: 213: rxBuffer[rx_index++] = 0x41;
  7070  0005AA  0100               	movlb	0	; () banked
  7071  0005AC  51EC               	movf	ASLB_test1@rx_index& (0+255),w,b
  7072  0005AE  0D01               	mullw	1
  7073  0005B0  50F3               	movf	prodl,w,c
  7074  0005B2  0100               	movlb	0	; () banked
  7075  0005B4  25D6               	addwf	ASLB_test1@rxBuffer& (0+255),w,b
  7076  0005B6  6ED9               	movwf	fsr2l,c
  7077  0005B8  50F4               	movf	prodh,w,c
  7078  0005BA  0100               	movlb	0	; () banked
  7079  0005BC  21D7               	addwfc	(ASLB_test1@rxBuffer+1)& (0+255),w,b
  7080  0005BE  6EDA               	movwf	fsr2h,c
  7081  0005C0  0E41               	movlw	65
  7082  0005C2  6EDF               	movwf	indf2,c
  7083                           
  7084                           ; BSR set to: 0
  7085  0005C4  0100               	movlb	0	; () banked
  7086  0005C6  2BEC               	incf	ASLB_test1@rx_index& (0+255),f,b
  7087                           
  7088                           ; BSR set to: 0
  7089                           ;HX_ASL_BORON.c: 214: rxBuffer[rx_index++] = 0x01;
  7090  0005C8  0100               	movlb	0	; () banked
  7091  0005CA  51EC               	movf	ASLB_test1@rx_index& (0+255),w,b
  7092  0005CC  0D01               	mullw	1
  7093  0005CE  50F3               	movf	prodl,w,c
  7094  0005D0  0100               	movlb	0	; () banked
  7095  0005D2  25D6               	addwf	ASLB_test1@rxBuffer& (0+255),w,b
  7096  0005D4  6ED9               	movwf	fsr2l,c
  7097  0005D6  50F4               	movf	prodh,w,c
  7098  0005D8  0100               	movlb	0	; () banked
  7099  0005DA  21D7               	addwfc	(ASLB_test1@rxBuffer+1)& (0+255),w,b
  7100  0005DC  6EDA               	movwf	fsr2h,c
  7101  0005DE  0E01               	movlw	1
  7102  0005E0  6EDF               	movwf	indf2,c
  7103  0005E2  0100               	movlb	0	; () banked
  7104  0005E4  2BEC               	incf	ASLB_test1@rx_index& (0+255),f,b
  7105                           
  7106                           ; BSR set to: 0
  7107                           ;HX_ASL_BORON.c: 215: rxBuffer[rx_index++] = rd_status;
  7108  0005E6  0100               	movlb	0	; () banked
  7109  0005E8  51EC               	movf	ASLB_test1@rx_index& (0+255),w,b
  7110  0005EA  0D01               	mullw	1
  7111  0005EC  50F3               	movf	prodl,w,c
  7112  0005EE  0100               	movlb	0	; () banked
  7113  0005F0  25D6               	addwf	ASLB_test1@rxBuffer& (0+255),w,b
  7114  0005F2  6ED9               	movwf	fsr2l,c
  7115  0005F4  50F4               	movf	prodh,w,c
  7116  0005F6  0100               	movlb	0	; () banked
  7117  0005F8  21D7               	addwfc	(ASLB_test1@rxBuffer+1)& (0+255),w,b
  7118  0005FA  6EDA               	movwf	fsr2h,c
  7119  0005FC  C0EB  FFDF         	movff	ASLB_test1@rd_status,indf2
  7120                           
  7121                           ; BSR set to: 0
  7122  000600  0100               	movlb	0	; () banked
  7123  000602  2BEC               	incf	ASLB_test1@rx_index& (0+255),f,b
  7124                           
  7125                           ; BSR set to: 0
  7126                           ;HX_ASL_BORON.c: 216: return;
  7127  000604  0012               	return	
  7128  000606                     l7499:
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;HX_ASL_BORON.c: 217: }
  7132                           ;HX_ASL_BORON.c: 220: wr_status = writeI2C(ramRdMsg, 5, 0x5A);
  7133  000606  0EE3               	movlw	low ASLB_test1@ramRdMsg
  7134  000608  0100               	movlb	0	; () banked
  7135  00060A  6FCE               	movwf	writeI2C@txData& (0+255),b
  7136  00060C  0E00               	movlw	high ASLB_test1@ramRdMsg
  7137  00060E  0100               	movlb	0	; () banked
  7138  000610  6FCF               	movwf	(writeI2C@txData+1)& (0+255),b
  7139  000612  0E05               	movlw	5
  7140  000614  0100               	movlb	0	; () banked
  7141  000616  6FD0               	movwf	writeI2C@size& (0+255),b
  7142  000618  0E00               	movlw	0
  7143  00061A  0100               	movlb	0	; () banked
  7144  00061C  6FD2               	movwf	(writeI2C@slaveAddr+1)& (0+255),b
  7145  00061E  0E5A               	movlw	90
  7146  000620  6FD1               	movwf	writeI2C@slaveAddr& (0+255),b
  7147  000622  ECB9  F010         	call	_writeI2C	;wreg free
  7148  000626  0100               	movlb	0	; () banked
  7149  000628  6FEA               	movwf	ASLB_test1@wr_status& (0+255),b
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;HX_ASL_BORON.c: 221: if (wr_status != 0)
  7153  00062A  0100               	movlb	0	; () banked
  7154  00062C  51EA               	movf	ASLB_test1@wr_status& (0+255),w,b
  7155  00062E  0100               	movlb	0	; () banked
  7156  000630  B4D8               	btfsc	status,2,c
  7157  000632  D02E               	goto	l7515
  7158                           
  7159                           ; BSR set to: 0
  7160                           ;HX_ASL_BORON.c: 222: {
  7161                           ;HX_ASL_BORON.c: 223: rxBuffer[rx_index++] = 0x41;
  7162  000634  0100               	movlb	0	; () banked
  7163  000636  51EC               	movf	ASLB_test1@rx_index& (0+255),w,b
  7164  000638  0D01               	mullw	1
  7165  00063A  50F3               	movf	prodl,w,c
  7166  00063C  0100               	movlb	0	; () banked
  7167  00063E  25D6               	addwf	ASLB_test1@rxBuffer& (0+255),w,b
  7168  000640  6ED9               	movwf	fsr2l,c
  7169  000642  50F4               	movf	prodh,w,c
  7170  000644  0100               	movlb	0	; () banked
  7171  000646  21D7               	addwfc	(ASLB_test1@rxBuffer+1)& (0+255),w,b
  7172  000648  6EDA               	movwf	fsr2h,c
  7173  00064A  0E41               	movlw	65
  7174  00064C  6EDF               	movwf	indf2,c
  7175                           
  7176                           ; BSR set to: 0
  7177  00064E  0100               	movlb	0	; () banked
  7178  000650  2BEC               	incf	ASLB_test1@rx_index& (0+255),f,b
  7179                           
  7180                           ; BSR set to: 0
  7181                           ;HX_ASL_BORON.c: 224: rxBuffer[rx_index++] = 0x02;
  7182  000652  0100               	movlb	0	; () banked
  7183  000654  51EC               	movf	ASLB_test1@rx_index& (0+255),w,b
  7184  000656  0D01               	mullw	1
  7185  000658  50F3               	movf	prodl,w,c
  7186  00065A  0100               	movlb	0	; () banked
  7187  00065C  25D6               	addwf	ASLB_test1@rxBuffer& (0+255),w,b
  7188  00065E  6ED9               	movwf	fsr2l,c
  7189  000660  50F4               	movf	prodh,w,c
  7190  000662  0100               	movlb	0	; () banked
  7191  000664  21D7               	addwfc	(ASLB_test1@rxBuffer+1)& (0+255),w,b
  7192  000666  6EDA               	movwf	fsr2h,c
  7193  000668  0E02               	movlw	2
  7194  00066A  6EDF               	movwf	indf2,c
  7195  00066C  0100               	movlb	0	; () banked
  7196  00066E  2BEC               	incf	ASLB_test1@rx_index& (0+255),f,b
  7197                           
  7198                           ; BSR set to: 0
  7199                           ;HX_ASL_BORON.c: 225: rxBuffer[rx_index++] = wr_status;
  7200  000670  0100               	movlb	0	; () banked
  7201  000672  51EC               	movf	ASLB_test1@rx_index& (0+255),w,b
  7202  000674  0D01               	mullw	1
  7203  000676  50F3               	movf	prodl,w,c
  7204  000678  0100               	movlb	0	; () banked
  7205  00067A  25D6               	addwf	ASLB_test1@rxBuffer& (0+255),w,b
  7206  00067C  6ED9               	movwf	fsr2l,c
  7207  00067E  50F4               	movf	prodh,w,c
  7208  000680  0100               	movlb	0	; () banked
  7209  000682  21D7               	addwfc	(ASLB_test1@rxBuffer+1)& (0+255),w,b
  7210  000684  6EDA               	movwf	fsr2h,c
  7211  000686  C0EA  FFDF         	movff	ASLB_test1@wr_status,indf2
  7212                           
  7213                           ; BSR set to: 0
  7214  00068A  0100               	movlb	0	; () banked
  7215  00068C  2BEC               	incf	ASLB_test1@rx_index& (0+255),f,b
  7216                           
  7217                           ; BSR set to: 0
  7218                           ;HX_ASL_BORON.c: 226: return;
  7219  00068E  0012               	return	
  7220  000690                     l7515:
  7221                           
  7222                           ; BSR set to: 0
  7223                           ;HX_ASL_BORON.c: 227: }
  7224                           ;HX_ASL_BORON.c: 228: rd_status = readI2C(ramReadback, 4, 0x5A);
  7225  000690  0ED8               	movlw	low ASLB_test1@ramReadback
  7226  000692  0100               	movlb	0	; () banked
  7227  000694  6FCE               	movwf	readI2C@rxData& (0+255),b
  7228  000696  0E00               	movlw	high ASLB_test1@ramReadback
  7229  000698  0100               	movlb	0	; () banked
  7230  00069A  6FCF               	movwf	(readI2C@rxData+1)& (0+255),b
  7231  00069C  0E04               	movlw	4
  7232  00069E  0100               	movlb	0	; () banked
  7233  0006A0  6FD0               	movwf	readI2C@numOfRx& (0+255),b
  7234  0006A2  0E00               	movlw	0
  7235  0006A4  0100               	movlb	0	; () banked
  7236  0006A6  6FD2               	movwf	(readI2C@slaveAddr+1)& (0+255),b
  7237  0006A8  0E5A               	movlw	90
  7238  0006AA  6FD1               	movwf	readI2C@slaveAddr& (0+255),b
  7239  0006AC  EC93  F011         	call	_readI2C	;wreg free
  7240  0006B0  0100               	movlb	0	; () banked
  7241  0006B2  6FEB               	movwf	ASLB_test1@rd_status& (0+255),b
  7242                           
  7243                           ; BSR set to: 0
  7244                           ;HX_ASL_BORON.c: 229: if (rd_status != 0)
  7245  0006B4  0100               	movlb	0	; () banked
  7246  0006B6  51EB               	movf	ASLB_test1@rd_status& (0+255),w,b
  7247  0006B8  0100               	movlb	0	; () banked
  7248  0006BA  B4D8               	btfsc	status,2,c
  7249  0006BC  D02E               	goto	l7531
  7250                           
  7251                           ; BSR set to: 0
  7252                           ;HX_ASL_BORON.c: 230: {
  7253                           ;HX_ASL_BORON.c: 231: rxBuffer[rx_index++] = 0x41;
  7254  0006BE  0100               	movlb	0	; () banked
  7255  0006C0  51EC               	movf	ASLB_test1@rx_index& (0+255),w,b
  7256  0006C2  0D01               	mullw	1
  7257  0006C4  50F3               	movf	prodl,w,c
  7258  0006C6  0100               	movlb	0	; () banked
  7259  0006C8  25D6               	addwf	ASLB_test1@rxBuffer& (0+255),w,b
  7260  0006CA  6ED9               	movwf	fsr2l,c
  7261  0006CC  50F4               	movf	prodh,w,c
  7262  0006CE  0100               	movlb	0	; () banked
  7263  0006D0  21D7               	addwfc	(ASLB_test1@rxBuffer+1)& (0+255),w,b
  7264  0006D2  6EDA               	movwf	fsr2h,c
  7265  0006D4  0E41               	movlw	65
  7266  0006D6  6EDF               	movwf	indf2,c
  7267                           
  7268                           ; BSR set to: 0
  7269  0006D8  0100               	movlb	0	; () banked
  7270  0006DA  2BEC               	incf	ASLB_test1@rx_index& (0+255),f,b
  7271                           
  7272                           ; BSR set to: 0
  7273                           ;HX_ASL_BORON.c: 232: rxBuffer[rx_index++] = 0x03;
  7274  0006DC  0100               	movlb	0	; () banked
  7275  0006DE  51EC               	movf	ASLB_test1@rx_index& (0+255),w,b
  7276  0006E0  0D01               	mullw	1
  7277  0006E2  50F3               	movf	prodl,w,c
  7278  0006E4  0100               	movlb	0	; () banked
  7279  0006E6  25D6               	addwf	ASLB_test1@rxBuffer& (0+255),w,b
  7280  0006E8  6ED9               	movwf	fsr2l,c
  7281  0006EA  50F4               	movf	prodh,w,c
  7282  0006EC  0100               	movlb	0	; () banked
  7283  0006EE  21D7               	addwfc	(ASLB_test1@rxBuffer+1)& (0+255),w,b
  7284  0006F0  6EDA               	movwf	fsr2h,c
  7285  0006F2  0E03               	movlw	3
  7286  0006F4  6EDF               	movwf	indf2,c
  7287  0006F6  0100               	movlb	0	; () banked
  7288  0006F8  2BEC               	incf	ASLB_test1@rx_index& (0+255),f,b
  7289                           
  7290                           ; BSR set to: 0
  7291                           ;HX_ASL_BORON.c: 233: rxBuffer[rx_index++] = rd_status;
  7292  0006FA  0100               	movlb	0	; () banked
  7293  0006FC  51EC               	movf	ASLB_test1@rx_index& (0+255),w,b
  7294  0006FE  0D01               	mullw	1
  7295  000700  50F3               	movf	prodl,w,c
  7296  000702  0100               	movlb	0	; () banked
  7297  000704  25D6               	addwf	ASLB_test1@rxBuffer& (0+255),w,b
  7298  000706  6ED9               	movwf	fsr2l,c
  7299  000708  50F4               	movf	prodh,w,c
  7300  00070A  0100               	movlb	0	; () banked
  7301  00070C  21D7               	addwfc	(ASLB_test1@rxBuffer+1)& (0+255),w,b
  7302  00070E  6EDA               	movwf	fsr2h,c
  7303  000710  C0EB  FFDF         	movff	ASLB_test1@rd_status,indf2
  7304                           
  7305                           ; BSR set to: 0
  7306  000714  0100               	movlb	0	; () banked
  7307  000716  2BEC               	incf	ASLB_test1@rx_index& (0+255),f,b
  7308                           
  7309                           ; BSR set to: 0
  7310                           ;HX_ASL_BORON.c: 234: return;
  7311  000718  0012               	return	
  7312  00071A                     l7531:
  7313                           
  7314                           ; BSR set to: 0
  7315                           ;HX_ASL_BORON.c: 235: }
  7316                           ;HX_ASL_BORON.c: 237: rxBuffer[rx_index++] = 0x01;
  7317  00071A  0100               	movlb	0	; () banked
  7318  00071C  51EC               	movf	ASLB_test1@rx_index& (0+255),w,b
  7319  00071E  0D01               	mullw	1
  7320  000720  50F3               	movf	prodl,w,c
  7321  000722  0100               	movlb	0	; () banked
  7322  000724  25D6               	addwf	ASLB_test1@rxBuffer& (0+255),w,b
  7323  000726  6ED9               	movwf	fsr2l,c
  7324  000728  50F4               	movf	prodh,w,c
  7325  00072A  0100               	movlb	0	; () banked
  7326  00072C  21D7               	addwfc	(ASLB_test1@rxBuffer+1)& (0+255),w,b
  7327  00072E  6EDA               	movwf	fsr2h,c
  7328  000730  0E01               	movlw	1
  7329  000732  6EDF               	movwf	indf2,c
  7330                           
  7331                           ; BSR set to: 0
  7332  000734  0100               	movlb	0	; () banked
  7333  000736  2BEC               	incf	ASLB_test1@rx_index& (0+255),f,b
  7334                           
  7335                           ; BSR set to: 0
  7336                           ;HX_ASL_BORON.c: 238: rxBuffer[rx_index++] = ramReadback[1];
  7337  000738  0100               	movlb	0	; () banked
  7338  00073A  51EC               	movf	ASLB_test1@rx_index& (0+255),w,b
  7339  00073C  0D01               	mullw	1
  7340  00073E  50F3               	movf	prodl,w,c
  7341  000740  0100               	movlb	0	; () banked
  7342  000742  25D6               	addwf	ASLB_test1@rxBuffer& (0+255),w,b
  7343  000744  6ED9               	movwf	fsr2l,c
  7344  000746  50F4               	movf	prodh,w,c
  7345  000748  0100               	movlb	0	; () banked
  7346  00074A  21D7               	addwfc	(ASLB_test1@rxBuffer+1)& (0+255),w,b
  7347  00074C  6EDA               	movwf	fsr2h,c
  7348  00074E  C0D9  FFDF         	movff	ASLB_test1@ramReadback+1,indf2
  7349  000752  0100               	movlb	0	; () banked
  7350  000754  2BEC               	incf	ASLB_test1@rx_index& (0+255),f,b
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;HX_ASL_BORON.c: 239: rxBuffer[rx_index++] = ramReadback[2];
  7354  000756  0100               	movlb	0	; () banked
  7355  000758  51EC               	movf	ASLB_test1@rx_index& (0+255),w,b
  7356  00075A  0D01               	mullw	1
  7357  00075C  50F3               	movf	prodl,w,c
  7358  00075E  0100               	movlb	0	; () banked
  7359  000760  25D6               	addwf	ASLB_test1@rxBuffer& (0+255),w,b
  7360  000762  6ED9               	movwf	fsr2l,c
  7361  000764  50F4               	movf	prodh,w,c
  7362  000766  0100               	movlb	0	; () banked
  7363  000768  21D7               	addwfc	(ASLB_test1@rxBuffer+1)& (0+255),w,b
  7364  00076A  6EDA               	movwf	fsr2h,c
  7365  00076C  C0DA  FFDF         	movff	ASLB_test1@ramReadback+2,indf2
  7366                           
  7367                           ; BSR set to: 0
  7368  000770  0100               	movlb	0	; () banked
  7369  000772  2BEC               	incf	ASLB_test1@rx_index& (0+255),f,b
  7370                           
  7371                           ; BSR set to: 0
  7372  000774  0012               	return		;funcret
  7373  000776                     __end_of_ASLB_test1:
  7374                           	opt stack 0
  7375                           tblptru	equ	0xFF8
  7376                           tblptrh	equ	0xFF7
  7377                           tblptrl	equ	0xFF6
  7378                           tablat	equ	0xFF5
  7379                           prodh	equ	0xFF4
  7380                           prodl	equ	0xFF3
  7381                           intcon	equ	0xFF2
  7382                           postinc0	equ	0xFEE
  7383                           wreg	equ	0xFE8
  7384                           indf1	equ	0xFE7
  7385                           postinc1	equ	0xFE6
  7386                           fsr1h	equ	0xFE2
  7387                           fsr1l	equ	0xFE1
  7388                           indf2	equ	0xFDF
  7389                           postinc2	equ	0xFDE
  7390                           fsr2h	equ	0xFDA
  7391                           fsr2l	equ	0xFD9
  7392                           status	equ	0xFD8
  7393                           
  7394 ;; *************** function _calcChecksum *****************
  7395 ;; Defined at:
  7396 ;;		line 76 in file "Utils.c"
  7397 ;; Parameters:    Size  Location     Type
  7398 ;;  data            2    0[BANK0 ] PTR unsigned char 
  7399 ;;		 -> ASLB_test1@ramRdMsg(5), ASLB_test1@ramWrMsg(6), hx_inData(64), 
  7400 ;;  size            1    2[BANK0 ] unsigned char 
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;  i               1    3[BANK0 ] unsigned char 
  7403 ;;  temp_checksu    1    4[BANK0 ] unsigned char 
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  1    wreg      unsigned char 
  7406 ;; Registers used:
  7407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7408 ;; Tracked objects:
  7409 ;;		On entry : 0/0
  7410 ;;		On exit  : 0/0
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7413 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7414 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7416 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7417 ;;Total ram usage:        5 bytes
  7418 ;; Hardware stack levels used:    1
  7419 ;; Hardware stack levels required when called:    7
  7420 ;; This function calls:
  7421 ;;		Nothing
  7422 ;; This function is called by:
  7423 ;;		_run_ASLBoron
  7424 ;;		_ASLB_test1
  7425 ;;		_run_I2C
  7426 ;; This function uses a non-reentrant model
  7427 ;;
  7428                           
  7429                           	psect	text14
  7430  0025C0                     __ptext14:
  7431                           	opt stack 0
  7432  0025C0                     _calcChecksum:
  7433                           	opt stack 22
  7434                           
  7435                           ;Utils.c: 78: uint8_t temp_checksum = 0;
  7436                           
  7437                           ; BSR set to: 0
  7438                           ;incstack = 0
  7439  0025C0  0E00               	movlw	0
  7440  0025C2  0100               	movlb	0	; () banked
  7441  0025C4  6FC2               	movwf	calcChecksum@temp_checksum& (0+255),b
  7442                           
  7443                           ;Utils.c: 79: for(uint8_t i = 0; i < size; i++)
  7444  0025C6  0E00               	movlw	0
  7445  0025C8  0100               	movlb	0	; () banked
  7446  0025CA  6FC1               	movwf	calcChecksum@i& (0+255),b
  7447  0025CC  D010               	goto	l7075
  7448  0025CE                     l7071:
  7449                           
  7450                           ; BSR set to: 0
  7451                           ;Utils.c: 80: {
  7452                           ;Utils.c: 81: temp_checksum += data[i];
  7453  0025CE  0100               	movlb	0	; () banked
  7454  0025D0  51C1               	movf	calcChecksum@i& (0+255),w,b
  7455  0025D2  0D01               	mullw	1
  7456  0025D4  50F3               	movf	prodl,w,c
  7457  0025D6  0100               	movlb	0	; () banked
  7458  0025D8  25BE               	addwf	calcChecksum@data& (0+255),w,b
  7459  0025DA  6ED9               	movwf	fsr2l,c
  7460  0025DC  50F4               	movf	prodh,w,c
  7461  0025DE  0100               	movlb	0	; () banked
  7462  0025E0  21BF               	addwfc	(calcChecksum@data+1)& (0+255),w,b
  7463  0025E2  6EDA               	movwf	fsr2h,c
  7464  0025E4  50DF               	movf	indf2,w,c
  7465  0025E6  0100               	movlb	0	; () banked
  7466  0025E8  27C2               	addwf	calcChecksum@temp_checksum& (0+255),f,b
  7467                           
  7468                           ; BSR set to: 0
  7469  0025EA  0100               	movlb	0	; () banked
  7470  0025EC  2BC1               	incf	calcChecksum@i& (0+255),f,b
  7471  0025EE                     l7075:
  7472                           
  7473                           ; BSR set to: 0
  7474  0025EE  0100               	movlb	0	; () banked
  7475  0025F0  51C0               	movf	calcChecksum@size& (0+255),w,b
  7476  0025F2  0100               	movlb	0	; () banked
  7477  0025F4  5DC1               	subwf	calcChecksum@i& (0+255),w,b
  7478  0025F6  A0D8               	btfss	status,0,c
  7479  0025F8  D7EA               	goto	l7071
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;Utils.c: 82: }
  7483                           ;Utils.c: 83: temp_checksum = (temp_checksum ^ 0xFF) + 1;
  7484                           
  7485                           ; BSR set to: 0
  7486  0025FA  0100               	movlb	0	; () banked
  7487  0025FC  6DC2               	negf	calcChecksum@temp_checksum& (0+255),b
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;Utils.c: 84: return temp_checksum;
  7491  0025FE  0100               	movlb	0	; () banked
  7492  002600  51C2               	movf	calcChecksum@temp_checksum& (0+255),w,b
  7493  002602  0012               	return	
  7494  002604                     __end_of_calcChecksum:
  7495                           	opt stack 0
  7496                           tblptru	equ	0xFF8
  7497                           tblptrh	equ	0xFF7
  7498                           tblptrl	equ	0xFF6
  7499                           tablat	equ	0xFF5
  7500                           prodh	equ	0xFF4
  7501                           prodl	equ	0xFF3
  7502                           intcon	equ	0xFF2
  7503                           postinc0	equ	0xFEE
  7504                           wreg	equ	0xFE8
  7505                           indf1	equ	0xFE7
  7506                           postinc1	equ	0xFE6
  7507                           fsr1h	equ	0xFE2
  7508                           fsr1l	equ	0xFE1
  7509                           indf2	equ	0xFDF
  7510                           postinc2	equ	0xFDE
  7511                           fsr2h	equ	0xFDA
  7512                           fsr2l	equ	0xFD9
  7513                           status	equ	0xFD8
  7514                           
  7515 ;; *************** function _ASLB_test0 *****************
  7516 ;; Defined at:
  7517 ;;		line 165 in file "HX_ASL_BORON.c"
  7518 ;; Parameters:    Size  Location     Type
  7519 ;;  rxBuffer        2    0[BANK0 ] PTR unsigned char 
  7520 ;;		 -> hx_mainData(61), 
  7521 ;; Auto vars:     Size  Location     Type
  7522 ;;  rx_index        1   31[COMRAM] unsigned char 
  7523 ;; Return value:  Size  Location     Type
  7524 ;;                  1    wreg      void 
  7525 ;; Registers used:
  7526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7527 ;; Tracked objects:
  7528 ;;		On entry : 0/0
  7529 ;;		On exit  : 0/0
  7530 ;;		Unchanged: 0/0
  7531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7532 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7533 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7535 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7536 ;;Total ram usage:        3 bytes
  7537 ;; Hardware stack levels used:    1
  7538 ;; Hardware stack levels required when called:    7
  7539 ;; This function calls:
  7540 ;;		Nothing
  7541 ;; This function is called by:
  7542 ;;		_write_ASLBoron_test
  7543 ;; This function uses a non-reentrant model
  7544 ;;
  7545                           
  7546                           	psect	text15
  7547  0028AC                     __ptext15:
  7548                           	opt stack 0
  7549  0028AC                     _ASLB_test0:
  7550                           	opt stack 21
  7551                           
  7552                           ;HX_ASL_BORON.c: 167: uint8_t rx_index = 0;
  7553                           
  7554                           ; BSR set to: 0
  7555                           ;incstack = 0
  7556  0028AC  0E00               	movlw	0
  7557  0028AE  6E20               	movwf	ASLB_test0@rx_index,c
  7558                           
  7559                           ;HX_ASL_BORON.c: 170: rxBuffer[rx_index++] = 0xAA;
  7560  0028B0  5020               	movf	ASLB_test0@rx_index,w,c
  7561  0028B2  0D01               	mullw	1
  7562  0028B4  50F3               	movf	prodl,w,c
  7563  0028B6  0100               	movlb	0	; () banked
  7564  0028B8  25BE               	addwf	ASLB_test0@rxBuffer& (0+255),w,b
  7565  0028BA  6ED9               	movwf	fsr2l,c
  7566  0028BC  50F4               	movf	prodh,w,c
  7567  0028BE  0100               	movlb	0	; () banked
  7568  0028C0  21BF               	addwfc	(ASLB_test0@rxBuffer+1)& (0+255),w,b
  7569  0028C2  6EDA               	movwf	fsr2h,c
  7570  0028C4  0EAA               	movlw	170
  7571  0028C6  6EDF               	movwf	indf2,c
  7572                           
  7573                           ; BSR set to: 0
  7574  0028C8  2A20               	incf	ASLB_test0@rx_index,f,c
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;HX_ASL_BORON.c: 171: hx_mainDataIndex++;
  7578  0028CA  2A38               	incf	_hx_mainDataIndex,f,c
  7579                           
  7580                           ; BSR set to: 0
  7581  0028CC  0012               	return		;funcret
  7582  0028CE                     __end_of_ASLB_test0:
  7583                           	opt stack 0
  7584                           tblptru	equ	0xFF8
  7585                           tblptrh	equ	0xFF7
  7586                           tblptrl	equ	0xFF6
  7587                           tablat	equ	0xFF5
  7588                           prodh	equ	0xFF4
  7589                           prodl	equ	0xFF3
  7590                           intcon	equ	0xFF2
  7591                           postinc0	equ	0xFEE
  7592                           wreg	equ	0xFE8
  7593                           indf1	equ	0xFE7
  7594                           postinc1	equ	0xFE6
  7595                           fsr1h	equ	0xFE2
  7596                           fsr1l	equ	0xFE1
  7597                           indf2	equ	0xFDF
  7598                           postinc2	equ	0xFDE
  7599                           fsr2h	equ	0xFDA
  7600                           fsr2l	equ	0xFD9
  7601                           status	equ	0xFD8
  7602                           
  7603 ;; *************** function _ARDUINO_test_debug *****************
  7604 ;; Defined at:
  7605 ;;		line 253 in file "HX_ASL_BORON.c"
  7606 ;; Parameters:    Size  Location     Type
  7607 ;;  rxBuffer        2   24[BANK0 ] PTR unsigned char 
  7608 ;;		 -> hx_mainData(61), 
  7609 ;; Auto vars:     Size  Location     Type
  7610 ;;  ardDebugVal     2   28[BANK0 ] PTR unsigned char 
  7611 ;; Return value:  Size  Location     Type
  7612 ;;                  1    wreg      void 
  7613 ;; Registers used:
  7614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7615 ;; Tracked objects:
  7616 ;;		On entry : 0/0
  7617 ;;		On exit  : 0/0
  7618 ;;		Unchanged: 0/0
  7619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7620 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7621 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7622 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7623 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7624 ;;Total ram usage:        6 bytes
  7625 ;; Hardware stack levels used:    1
  7626 ;; Hardware stack levels required when called:   10
  7627 ;; This function calls:
  7628 ;;		_readI2C
  7629 ;;		_writeI2C
  7630 ;; This function is called by:
  7631 ;;		_write_ASLBoron_test
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635                           	psect	text16
  7636  002074                     __ptext16:
  7637                           	opt stack 0
  7638  002074                     _ARDUINO_test_debug:
  7639                           	opt stack 18
  7640                           
  7641                           ;HX_ASL_BORON.c: 263: }
  7642                           ;HX_ASL_BORON.c: 264: writeI2C(ardDebugVal, 1, 0x2A);
  7643                           
  7644                           ;HX_ASL_BORON.c: 261: {
  7645                           ;HX_ASL_BORON.c: 262: *ardDebugVal = 0x30;
  7646                           
  7647                           ; BSR set to: 0
  7648                           ;incstack = 0
  7649  002074  C0DA  F0CE         	movff	ARDUINO_test_debug@ardDebugVal,writeI2C@txData
  7650  002078  C0DB  F0CF         	movff	ARDUINO_test_debug@ardDebugVal+1,writeI2C@txData+1
  7651  00207C  0E01               	movlw	1
  7652  00207E  0100               	movlb	0	; () banked
  7653  002080  6FD0               	movwf	writeI2C@size& (0+255),b
  7654  002082  0E00               	movlw	0
  7655  002084  0100               	movlb	0	; () banked
  7656  002086  6FD2               	movwf	(writeI2C@slaveAddr+1)& (0+255),b
  7657  002088  0E2A               	movlw	42
  7658  00208A  6FD1               	movwf	writeI2C@slaveAddr& (0+255),b
  7659  00208C  ECB9  F010         	call	_writeI2C	;wreg free
  7660                           
  7661                           ;HX_ASL_BORON.c: 266: _delay((unsigned long)((50)*(64000000/4000.0)));
  7662  002090  0E05               	movlw	5
  7663  002092  0100               	movlb	0	; () banked
  7664  002094  6FD9               	movwf	(??_ARDUINO_test_debug+1)& (0+255),b
  7665  002096  0E0F               	movlw	15
  7666  002098  0100               	movlb	0	; () banked
  7667  00209A  6FD8               	movwf	??_ARDUINO_test_debug& (0+255),b
  7668  00209C  0EF1               	movlw	241
  7669  00209E                     u7807:
  7670  00209E  2EE8               	decfsz	wreg,f,c
  7671  0020A0  D7FE               	bra	u7807
  7672  0020A2  2FD8               	decfsz	??_ARDUINO_test_debug& (0+255),f,b
  7673  0020A4  D7FC               	bra	u7807
  7674  0020A6  2FD9               	decfsz	(??_ARDUINO_test_debug+1)& (0+255),f,b
  7675  0020A8  D7FA               	bra	u7807
  7676                           
  7677                           ;HX_ASL_BORON.c: 270: readI2C(ardDebugVal, 1, 0x2A);
  7678  0020AA  C0DA  F0CE         	movff	ARDUINO_test_debug@ardDebugVal,readI2C@rxData
  7679  0020AE  C0DB  F0CF         	movff	ARDUINO_test_debug@ardDebugVal+1,readI2C@rxData+1
  7680  0020B2  0E01               	movlw	1
  7681  0020B4  0100               	movlb	0	; () banked
  7682  0020B6  6FD0               	movwf	readI2C@numOfRx& (0+255),b
  7683  0020B8  0E00               	movlw	0
  7684  0020BA  0100               	movlb	0	; () banked
  7685  0020BC  6FD2               	movwf	(readI2C@slaveAddr+1)& (0+255),b
  7686  0020BE  0E2A               	movlw	42
  7687  0020C0  6FD1               	movwf	readI2C@slaveAddr& (0+255),b
  7688  0020C2  EC93  F011         	call	_readI2C	;wreg free
  7689                           
  7690                           ;HX_ASL_BORON.c: 272: _delay((unsigned long)((50)*(64000000/4000.0)));
  7691  0020C6  0E05               	movlw	5
  7692  0020C8  0100               	movlb	0	; () banked
  7693  0020CA  6FD9               	movwf	(??_ARDUINO_test_debug+1)& (0+255),b
  7694  0020CC  0E0F               	movlw	15
  7695  0020CE  0100               	movlb	0	; () banked
  7696  0020D0  6FD8               	movwf	??_ARDUINO_test_debug& (0+255),b
  7697  0020D2  0EF1               	movlw	241
  7698  0020D4                     u7817:
  7699  0020D4  2EE8               	decfsz	wreg,f,c
  7700  0020D6  D7FE               	bra	u7817
  7701  0020D8  2FD8               	decfsz	??_ARDUINO_test_debug& (0+255),f,b
  7702  0020DA  D7FC               	bra	u7817
  7703  0020DC  2FD9               	decfsz	(??_ARDUINO_test_debug+1)& (0+255),f,b
  7704  0020DE  D7FA               	bra	u7817
  7705                           
  7706                           ;HX_ASL_BORON.c: 274: rxBuffer[0] = *ardDebugVal;
  7707  0020E0  C0DA  FFD9         	movff	ARDUINO_test_debug@ardDebugVal,fsr2l
  7708  0020E4  C0DB  FFDA         	movff	ARDUINO_test_debug@ardDebugVal+1,fsr2h
  7709  0020E8  C0D6  FFE1         	movff	ARDUINO_test_debug@rxBuffer,fsr1l
  7710  0020EC  C0D7  FFE2         	movff	ARDUINO_test_debug@rxBuffer+1,fsr1h
  7711  0020F0  CFDF FFE7          	movff	indf2,indf1
  7712                           
  7713                           ;HX_ASL_BORON.c: 275: hx_mainDataIndex++;
  7714  0020F4  2A38               	incf	_hx_mainDataIndex,f,c
  7715  0020F6  0012               	return		;funcret
  7716  0020F8                     __end_of_ARDUINO_test_debug:
  7717                           	opt stack 0
  7718                           tblptru	equ	0xFF8
  7719                           tblptrh	equ	0xFF7
  7720                           tblptrl	equ	0xFF6
  7721                           tablat	equ	0xFF5
  7722                           prodh	equ	0xFF4
  7723                           prodl	equ	0xFF3
  7724                           intcon	equ	0xFF2
  7725                           postinc0	equ	0xFEE
  7726                           wreg	equ	0xFE8
  7727                           indf1	equ	0xFE7
  7728                           postinc1	equ	0xFE6
  7729                           fsr1h	equ	0xFE2
  7730                           fsr1l	equ	0xFE1
  7731                           indf2	equ	0xFDF
  7732                           postinc2	equ	0xFDE
  7733                           fsr2h	equ	0xFDA
  7734                           fsr2l	equ	0xFD9
  7735                           status	equ	0xFD8
  7736                           
  7737 ;; *************** function _writeI2C *****************
  7738 ;; Defined at:
  7739 ;;		line 4 in file "Utils.c"
  7740 ;; Parameters:    Size  Location     Type
  7741 ;;  txData          2   16[BANK0 ] PTR unsigned char 
  7742 ;;		 -> run_I2C@tx_arr(256), ASLB_test1@ramRdMsg(5), ASLB_test1@ramWrMsg(6), 
  7743 ;;  size            1   18[BANK0 ] unsigned char 
  7744 ;;  slaveAddr       2   19[BANK0 ] unsigned int 
  7745 ;; Auto vars:     Size  Location     Type
  7746 ;;  timeOut         2   21[BANK0 ] unsigned int 
  7747 ;;  status          1   23[BANK0 ] enum E11599
  7748 ;; Return value:  Size  Location     Type
  7749 ;;                  1    wreg      unsigned char 
  7750 ;; Registers used:
  7751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 0/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7757 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7758 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7760 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7761 ;;Total ram usage:        8 bytes
  7762 ;; Hardware stack levels used:    1
  7763 ;; Hardware stack levels required when called:    9
  7764 ;; This function calls:
  7765 ;;		_I2C1_MasterWrite
  7766 ;; This function is called by:
  7767 ;;		_ASLB_test1
  7768 ;;		_ARDUINO_test_debug
  7769 ;;		_run_I2C
  7770 ;; This function uses a non-reentrant model
  7771 ;;
  7772                           
  7773                           	psect	text17
  7774  002172                     __ptext17:
  7775                           	opt stack 0
  7776  002172                     _writeI2C:
  7777                           	opt stack 20
  7778                           
  7779                           ;Utils.c: 6: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  7780                           
  7781                           ;incstack = 0
  7782  002172  0E02               	movlw	2
  7783  002174  0100               	movlb	0	; () banked
  7784  002176  6FD5               	movwf	writeI2C@status& (0+255),b
  7785                           
  7786                           ;Utils.c: 7: uint16_t timeOut;
  7787                           ;Utils.c: 9: timeOut = 0;
  7788  002178  0E00               	movlw	0
  7789  00217A  0100               	movlb	0	; () banked
  7790  00217C  6FD4               	movwf	(writeI2C@timeOut+1)& (0+255),b
  7791  00217E  0E00               	movlw	0
  7792  002180  6FD3               	movwf	writeI2C@timeOut& (0+255),b
  7793                           
  7794                           ;Utils.c: 11: while(status != I2C1_MESSAGE_FAIL)
  7795  002182  D02A               	goto	l7035
  7796  002184                     l7015:
  7797                           
  7798                           ; BSR set to: 0
  7799                           ;Utils.c: 12: {
  7800                           ;Utils.c: 13: I2C1_MasterWrite( txData,
  7801                           ;Utils.c: 14: size,
  7802                           ;Utils.c: 15: slaveAddr,
  7803                           ;Utils.c: 16: &status);
  7804  002184  C0CE  F0C7         	movff	writeI2C@txData,I2C1_MasterWrite@pdata
  7805  002188  C0CF  F0C8         	movff	writeI2C@txData+1,I2C1_MasterWrite@pdata+1
  7806  00218C  C0D0  F0C9         	movff	writeI2C@size,I2C1_MasterWrite@length
  7807  002190  C0D1  F0CA         	movff	writeI2C@slaveAddr,I2C1_MasterWrite@address
  7808  002194  C0D2  F0CB         	movff	writeI2C@slaveAddr+1,I2C1_MasterWrite@address+1
  7809  002198  0ED5               	movlw	low writeI2C@status
  7810  00219A  0100               	movlb	0	; () banked
  7811  00219C  6FCC               	movwf	I2C1_MasterWrite@pflag& (0+255),b
  7812  00219E  0E00               	movlw	high writeI2C@status
  7813  0021A0  0100               	movlb	0	; () banked
  7814  0021A2  6FCD               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
  7815  0021A4  ECEF  F011         	call	_I2C1_MasterWrite	;wreg free
  7816  0021A8                     l7017:
  7817  0021A8  0E02               	movlw	2
  7818  0021AA  0100               	movlb	0	; () banked
  7819  0021AC  19D5               	xorwf	writeI2C@status& (0+255),w,b
  7820  0021AE  B4D8               	btfsc	status,2,c
  7821  0021B0  D7FB               	goto	l7017
  7822                           
  7823                           ; BSR set to: 0
  7824                           ;Utils.c: 21: if (status == I2C1_MESSAGE_COMPLETE)
  7825                           
  7826                           ; BSR set to: 0
  7827  0021B2  0100               	movlb	0	; () banked
  7828  0021B4  51D5               	movf	writeI2C@status& (0+255),w,b
  7829  0021B6  0100               	movlb	0	; () banked
  7830  0021B8  A4D8               	btfss	status,2,c
  7831  0021BA  D002               	goto	l7025
  7832                           
  7833                           ; BSR set to: 0
  7834                           ;Utils.c: 22: {
  7835                           ;Utils.c: 23: return 0;
  7836  0021BC  0E00               	movlw	0
  7837                           
  7838                           ; BSR set to: 0
  7839  0021BE  0012               	return	
  7840  0021C0                     l7025:
  7841                           
  7842                           ; BSR set to: 0
  7843                           ;Utils.c: 24: }
  7844                           ;Utils.c: 32: if (timeOut == 100)
  7845  0021C0  0E64               	movlw	100
  7846  0021C2  0100               	movlb	0	; () banked
  7847  0021C4  19D3               	xorwf	writeI2C@timeOut& (0+255),w,b
  7848  0021C6  0100               	movlb	0	; () banked
  7849  0021C8  11D4               	iorwf	(writeI2C@timeOut+1)& (0+255),w,b
  7850  0021CA  A4D8               	btfss	status,2,c
  7851  0021CC  D002               	goto	l7033
  7852                           
  7853                           ; BSR set to: 0
  7854                           ;Utils.c: 33: return 0;
  7855  0021CE  0E00               	movlw	0
  7856                           
  7857                           ; BSR set to: 0
  7858  0021D0  0012               	return	
  7859  0021D2                     l7033:
  7860                           
  7861                           ; BSR set to: 0
  7862                           ;Utils.c: 34: else
  7863                           ;Utils.c: 35: timeOut++;
  7864  0021D2  0100               	movlb	0	; () banked
  7865  0021D4  4BD3               	infsnz	writeI2C@timeOut& (0+255),f,b
  7866  0021D6  2BD4               	incf	(writeI2C@timeOut+1)& (0+255),f,b
  7867  0021D8                     l7035:
  7868                           
  7869                           ; BSR set to: 0
  7870  0021D8  0100               	movlb	0	; () banked
  7871  0021DA  05D5               	decf	writeI2C@status& (0+255),w,b
  7872  0021DC  A4D8               	btfss	status,2,c
  7873  0021DE  D7D2               	goto	l7015
  7874                           
  7875                           ; BSR set to: 0
  7876                           ;Utils.c: 36: }
  7877                           ;Utils.c: 37: return 0;
  7878                           
  7879                           ; BSR set to: 0
  7880  0021E0  0E00               	movlw	0
  7881  0021E2  0012               	return	
  7882  0021E4                     __end_of_writeI2C:
  7883                           	opt stack 0
  7884                           tblptru	equ	0xFF8
  7885                           tblptrh	equ	0xFF7
  7886                           tblptrl	equ	0xFF6
  7887                           tablat	equ	0xFF5
  7888                           prodh	equ	0xFF4
  7889                           prodl	equ	0xFF3
  7890                           intcon	equ	0xFF2
  7891                           postinc0	equ	0xFEE
  7892                           wreg	equ	0xFE8
  7893                           indf1	equ	0xFE7
  7894                           postinc1	equ	0xFE6
  7895                           fsr1h	equ	0xFE2
  7896                           fsr1l	equ	0xFE1
  7897                           indf2	equ	0xFDF
  7898                           postinc2	equ	0xFDE
  7899                           fsr2h	equ	0xFDA
  7900                           fsr2l	equ	0xFD9
  7901                           status	equ	0xFD8
  7902                           
  7903 ;; *************** function _I2C1_MasterWrite *****************
  7904 ;; Defined at:
  7905 ;;		line 598 in file "mcc_generated_files/i2c1.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;  pdata           2    9[BANK0 ] PTR unsigned char 
  7908 ;;		 -> run_I2C@tx_arr(256), ASLB_test1@ramRdMsg(5), ASLB_test1@ramWrMsg(6), 
  7909 ;;  length          1   11[BANK0 ] unsigned char 
  7910 ;;  address         2   12[BANK0 ] unsigned int 
  7911 ;;  pflag           2   14[BANK0 ] PTR enum E11599
  7912 ;;		 -> writeI2C@status(1), 
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;		None
  7915 ;; Return value:  Size  Location     Type
  7916 ;;                  1    wreg      void 
  7917 ;; Registers used:
  7918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7919 ;; Tracked objects:
  7920 ;;		On entry : 0/0
  7921 ;;		On exit  : 0/0
  7922 ;;		Unchanged: 0/0
  7923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7924 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7927 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7928 ;;Total ram usage:        7 bytes
  7929 ;; Hardware stack levels used:    1
  7930 ;; Hardware stack levels required when called:    8
  7931 ;; This function calls:
  7932 ;;		_I2C1_MasterTRBInsert
  7933 ;;		_I2C1_MasterWriteTRBBuild
  7934 ;; This function is called by:
  7935 ;;		_writeI2C
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           	psect	text18
  7940  0023DE                     __ptext18:
  7941                           	opt stack 0
  7942  0023DE                     _I2C1_MasterWrite:
  7943                           	opt stack 20
  7944                           
  7945                           ;i2c1.c: 604: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
  7946                           ;i2c1.c: 607: if (i2c1_object.trStatus.s.full != 1)
  7947                           
  7948                           ; BSR set to: 0
  7949                           ;incstack = 0
  7950  0023DE  0100               	movlb	0	; () banked
  7951  0023E0  B164               	btfsc	(_i2c1_object+4)& (0+255),0,b
  7952  0023E2  D020               	goto	l7005
  7953                           
  7954                           ; BSR set to: 0
  7955                           ;i2c1.c: 608: {
  7956                           ;i2c1.c: 609: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
  7957  0023E4  0EB4               	movlw	low I2C1_MasterWrite@trBlock
  7958  0023E6  0100               	movlb	0	; () banked
  7959  0023E8  6FBE               	movwf	I2C1_MasterWriteTRBBuild@ptrb& (0+255),b
  7960  0023EA  0E00               	movlw	high I2C1_MasterWrite@trBlock
  7961  0023EC  0100               	movlb	0	; () banked
  7962  0023EE  6FBF               	movwf	(I2C1_MasterWriteTRBBuild@ptrb+1)& (0+255),b
  7963  0023F0  C0C7  F0C0         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
  7964  0023F4  C0C8  F0C1         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
  7965  0023F8  C0C9  F0C2         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
  7966  0023FC  C0CA  F0C3         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
  7967  002400  C0CB  F0C4         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
  7968  002404  ECBB  F012         	call	_I2C1_MasterWriteTRBBuild	;wreg free
  7969                           
  7970                           ;i2c1.c: 610: I2C1_MasterTRBInsert(1, &trBlock, pflag);
  7971  002408  0EB4               	movlw	low I2C1_MasterWrite@trBlock
  7972  00240A  0100               	movlb	0	; () banked
  7973  00240C  6FBE               	movwf	I2C1_MasterTRBInsert@ptrb_list& (0+255),b
  7974  00240E  0E00               	movlw	high I2C1_MasterWrite@trBlock
  7975  002410  0100               	movlb	0	; () banked
  7976  002412  6FBF               	movwf	(I2C1_MasterTRBInsert@ptrb_list+1)& (0+255),b
  7977  002414  C0CC  F0C0         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
  7978  002418  C0CD  F0C1         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
  7979  00241C  0E01               	movlw	1
  7980  00241E  EC38  F00F         	call	_I2C1_MasterTRBInsert
  7981                           
  7982                           ;i2c1.c: 611: }
  7983  002422  0012               	return	
  7984  002424                     l7005:
  7985                           
  7986                           ;i2c1.c: 612: else
  7987                           ;i2c1.c: 613: {
  7988                           ;i2c1.c: 614: *pflag = I2C1_MESSAGE_FAIL;
  7989  002424  C0CC  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
  7990  002428  C0CD  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
  7991  00242C  0E01               	movlw	1
  7992  00242E  6EDF               	movwf	indf2,c
  7993  002430  0012               	return	
  7994  002432                     __end_of_I2C1_MasterWrite:
  7995                           	opt stack 0
  7996                           tblptru	equ	0xFF8
  7997                           tblptrh	equ	0xFF7
  7998                           tblptrl	equ	0xFF6
  7999                           tablat	equ	0xFF5
  8000                           prodh	equ	0xFF4
  8001                           prodl	equ	0xFF3
  8002                           intcon	equ	0xFF2
  8003                           postinc0	equ	0xFEE
  8004                           wreg	equ	0xFE8
  8005                           indf1	equ	0xFE7
  8006                           postinc1	equ	0xFE6
  8007                           fsr1h	equ	0xFE2
  8008                           fsr1l	equ	0xFE1
  8009                           indf2	equ	0xFDF
  8010                           postinc2	equ	0xFDE
  8011                           fsr2h	equ	0xFDA
  8012                           fsr2l	equ	0xFD9
  8013                           status	equ	0xFD8
  8014                           
  8015 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
  8016 ;; Defined at:
  8017 ;;		line 707 in file "mcc_generated_files/i2c1.c"
  8018 ;; Parameters:    Size  Location     Type
  8019 ;;  ptrb            2    0[BANK0 ] PTR struct .
  8020 ;;		 -> I2C1_MasterWrite@trBlock(5), 
  8021 ;;  pdata           2    2[BANK0 ] PTR unsigned char 
  8022 ;;		 -> run_I2C@tx_arr(256), ASLB_test1@ramRdMsg(5), ASLB_test1@ramWrMsg(6), 
  8023 ;;  length          1    4[BANK0 ] unsigned char 
  8024 ;;  address         2    5[BANK0 ] unsigned int 
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;		None
  8027 ;; Return value:  Size  Location     Type
  8028 ;;                  1    wreg      void 
  8029 ;; Registers used:
  8030 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8031 ;; Tracked objects:
  8032 ;;		On entry : 0/0
  8033 ;;		On exit  : 0/0
  8034 ;;		Unchanged: 0/0
  8035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8036 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8038 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8039 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8040 ;;Total ram usage:        9 bytes
  8041 ;; Hardware stack levels used:    1
  8042 ;; Hardware stack levels required when called:    7
  8043 ;; This function calls:
  8044 ;;		Nothing
  8045 ;; This function is called by:
  8046 ;;		_I2C1_MasterWrite
  8047 ;; This function uses a non-reentrant model
  8048 ;;
  8049                           
  8050                           	psect	text19
  8051  002576                     __ptext19:
  8052                           	opt stack 0
  8053  002576                     _I2C1_MasterWriteTRBBuild:
  8054                           	opt stack 20
  8055                           
  8056                           ;i2c1.c: 713: ptrb->address = address << 1;
  8057                           
  8058                           ;incstack = 0
  8059  002576  C0C3  F0C5         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
  8060  00257A  C0C4  F0C6         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
  8061  00257E  90D8               	bcf	status,0,c
  8062  002580  0100               	movlb	0	; () banked
  8063  002582  37C5               	rlcf	??_I2C1_MasterWriteTRBBuild& (0+255),f,b
  8064  002584  37C6               	rlcf	(??_I2C1_MasterWriteTRBBuild+1)& (0+255),f,b
  8065  002586  C0BE  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
  8066  00258A  C0BF  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
  8067  00258E  C0C5  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
  8068  002592  C0C6  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
  8069                           
  8070                           ; BSR set to: 0
  8071                           ;i2c1.c: 714: ptrb->length = length;
  8072  002596  0100               	movlb	0	; () banked
  8073  002598  EE20 F002          	lfsr	2,2
  8074  00259C  51BE               	movf	I2C1_MasterWriteTRBBuild@ptrb& (0+255),w,b
  8075  00259E  26D9               	addwf	fsr2l,f,c
  8076  0025A0  51BF               	movf	(I2C1_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
  8077  0025A2  22DA               	addwfc	fsr2h,f,c
  8078  0025A4  C0C2  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
  8079                           
  8080                           ; BSR set to: 0
  8081                           ;i2c1.c: 715: ptrb->pbuffer = pdata;
  8082  0025A8  0100               	movlb	0	; () banked
  8083  0025AA  EE20 F003          	lfsr	2,3
  8084  0025AE  51BE               	movf	I2C1_MasterWriteTRBBuild@ptrb& (0+255),w,b
  8085  0025B0  26D9               	addwf	fsr2l,f,c
  8086  0025B2  51BF               	movf	(I2C1_MasterWriteTRBBuild@ptrb+1)& (0+255),w,b
  8087  0025B4  22DA               	addwfc	fsr2h,f,c
  8088  0025B6  C0C0  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
  8089  0025BA  C0C1  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
  8090                           
  8091                           ; BSR set to: 0
  8092  0025BE  0012               	return		;funcret
  8093  0025C0                     __end_of_I2C1_MasterWriteTRBBuild:
  8094                           	opt stack 0
  8095                           tblptru	equ	0xFF8
  8096                           tblptrh	equ	0xFF7
  8097                           tblptrl	equ	0xFF6
  8098                           tablat	equ	0xFF5
  8099                           prodh	equ	0xFF4
  8100                           prodl	equ	0xFF3
  8101                           intcon	equ	0xFF2
  8102                           postinc0	equ	0xFEE
  8103                           wreg	equ	0xFE8
  8104                           indf1	equ	0xFE7
  8105                           postinc1	equ	0xFE6
  8106                           fsr1h	equ	0xFE2
  8107                           fsr1l	equ	0xFE1
  8108                           indf2	equ	0xFDF
  8109                           postinc2	equ	0xFDE
  8110                           postdec2	equ	0xFDD
  8111                           fsr2h	equ	0xFDA
  8112                           fsr2l	equ	0xFD9
  8113                           status	equ	0xFD8
  8114                           
  8115 ;; *************** function _readI2C *****************
  8116 ;; Defined at:
  8117 ;;		line 43 in file "Utils.c"
  8118 ;; Parameters:    Size  Location     Type
  8119 ;;  rxData          2   16[BANK0 ] PTR unsigned char 
  8120 ;;		 -> ASLB_test1@ramReadback(4), hx_mainData(61), 
  8121 ;;  numOfRx         1   18[BANK0 ] unsigned char 
  8122 ;;  slaveAddr       2   19[BANK0 ] unsigned int 
  8123 ;; Auto vars:     Size  Location     Type
  8124 ;;  timeOut         2   21[BANK0 ] unsigned int 
  8125 ;;  status          1   23[BANK0 ] enum E11599
  8126 ;; Return value:  Size  Location     Type
  8127 ;;                  1    wreg      unsigned char 
  8128 ;; Registers used:
  8129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8130 ;; Tracked objects:
  8131 ;;		On entry : 0/0
  8132 ;;		On exit  : 0/0
  8133 ;;		Unchanged: 0/0
  8134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8135 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8136 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8138 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8139 ;;Total ram usage:        8 bytes
  8140 ;; Hardware stack levels used:    1
  8141 ;; Hardware stack levels required when called:    9
  8142 ;; This function calls:
  8143 ;;		_I2C1_MasterRead
  8144 ;; This function is called by:
  8145 ;;		_ASLB_test1
  8146 ;;		_ARDUINO_test_debug
  8147 ;;		_run_I2C
  8148 ;; This function uses a non-reentrant model
  8149 ;;
  8150                           
  8151                           	psect	text20
  8152  002326                     __ptext20:
  8153                           	opt stack 0
  8154  002326                     _readI2C:
  8155                           	opt stack 20
  8156                           
  8157                           ;Utils.c: 45: I2C1_MESSAGE_STATUS status;
  8158                           ;Utils.c: 46: uint16_t timeOut;
  8159                           ;Utils.c: 47: while(status != I2C1_MESSAGE_FAIL)
  8160                           
  8161                           ; BSR set to: 0
  8162                           ;incstack = 0
  8163  002326  D02A               	goto	l7063
  8164  002328                     l7043:
  8165                           
  8166                           ;Utils.c: 48: {
  8167                           ;Utils.c: 50: I2C1_MasterRead( rxData,
  8168                           ;Utils.c: 51: numOfRx,
  8169                           ;Utils.c: 52: slaveAddr,
  8170                           ;Utils.c: 53: &status);
  8171  002328  C0CE  F0C7         	movff	readI2C@rxData,I2C1_MasterRead@pdata
  8172  00232C  C0CF  F0C8         	movff	readI2C@rxData+1,I2C1_MasterRead@pdata+1
  8173  002330  C0D0  F0C9         	movff	readI2C@numOfRx,I2C1_MasterRead@length
  8174  002334  C0D1  F0CA         	movff	readI2C@slaveAddr,I2C1_MasterRead@address
  8175  002338  C0D2  F0CB         	movff	readI2C@slaveAddr+1,I2C1_MasterRead@address+1
  8176  00233C  0ED5               	movlw	low readI2C@status
  8177  00233E  0100               	movlb	0	; () banked
  8178  002340  6FCC               	movwf	I2C1_MasterRead@pflag& (0+255),b
  8179  002342  0E00               	movlw	high readI2C@status
  8180  002344  0100               	movlb	0	; () banked
  8181  002346  6FCD               	movwf	(I2C1_MasterRead@pflag+1)& (0+255),b
  8182  002348  EC19  F012         	call	_I2C1_MasterRead	;wreg free
  8183  00234C                     l7045:
  8184  00234C  0E02               	movlw	2
  8185  00234E  0100               	movlb	0	; () banked
  8186  002350  19D5               	xorwf	readI2C@status& (0+255),w,b
  8187  002352  B4D8               	btfsc	status,2,c
  8188  002354  D7FB               	goto	l7045
  8189                           
  8190                           ; BSR set to: 0
  8191                           ;Utils.c: 58: if (status == I2C1_MESSAGE_COMPLETE)
  8192                           
  8193                           ; BSR set to: 0
  8194  002356  0100               	movlb	0	; () banked
  8195  002358  51D5               	movf	readI2C@status& (0+255),w,b
  8196  00235A  0100               	movlb	0	; () banked
  8197  00235C  A4D8               	btfss	status,2,c
  8198  00235E  D002               	goto	l7053
  8199                           
  8200                           ; BSR set to: 0
  8201                           ;Utils.c: 59: return 0;
  8202  002360  0E00               	movlw	0
  8203                           
  8204                           ; BSR set to: 0
  8205  002362  0012               	return	
  8206  002364                     l7053:
  8207                           
  8208                           ; BSR set to: 0
  8209                           ;Utils.c: 68: if (timeOut == 100)
  8210  002364  0E64               	movlw	100
  8211  002366  0100               	movlb	0	; () banked
  8212  002368  19D3               	xorwf	readI2C@timeOut& (0+255),w,b
  8213  00236A  0100               	movlb	0	; () banked
  8214  00236C  11D4               	iorwf	(readI2C@timeOut+1)& (0+255),w,b
  8215  00236E  A4D8               	btfss	status,2,c
  8216  002370  D002               	goto	l7061
  8217                           
  8218                           ; BSR set to: 0
  8219                           ;Utils.c: 69: return 0;
  8220  002372  0E00               	movlw	0
  8221                           
  8222                           ; BSR set to: 0
  8223  002374  0012               	return	
  8224  002376                     l7061:
  8225                           
  8226                           ; BSR set to: 0
  8227                           ;Utils.c: 70: else
  8228                           ;Utils.c: 71: timeOut++;
  8229  002376  0100               	movlb	0	; () banked
  8230  002378  4BD3               	infsnz	readI2C@timeOut& (0+255),f,b
  8231  00237A  2BD4               	incf	(readI2C@timeOut+1)& (0+255),f,b
  8232  00237C                     l7063:
  8233  00237C  0100               	movlb	0	; () banked
  8234  00237E  05D5               	decf	readI2C@status& (0+255),w,b
  8235  002380  A4D8               	btfss	status,2,c
  8236  002382  D7D2               	goto	l7043
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;Utils.c: 72: }
  8240                           ;Utils.c: 73: return 0;
  8241                           
  8242                           ; BSR set to: 0
  8243  002384  0E00               	movlw	0
  8244  002386  0012               	return	
  8245  002388                     __end_of_readI2C:
  8246                           	opt stack 0
  8247                           tblptru	equ	0xFF8
  8248                           tblptrh	equ	0xFF7
  8249                           tblptrl	equ	0xFF6
  8250                           tablat	equ	0xFF5
  8251                           prodh	equ	0xFF4
  8252                           prodl	equ	0xFF3
  8253                           intcon	equ	0xFF2
  8254                           postinc0	equ	0xFEE
  8255                           wreg	equ	0xFE8
  8256                           indf1	equ	0xFE7
  8257                           postinc1	equ	0xFE6
  8258                           fsr1h	equ	0xFE2
  8259                           fsr1l	equ	0xFE1
  8260                           indf2	equ	0xFDF
  8261                           postinc2	equ	0xFDE
  8262                           postdec2	equ	0xFDD
  8263                           fsr2h	equ	0xFDA
  8264                           fsr2l	equ	0xFD9
  8265                           status	equ	0xFD8
  8266                           
  8267 ;; *************** function _I2C1_MasterRead *****************
  8268 ;; Defined at:
  8269 ;;		line 619 in file "mcc_generated_files/i2c1.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;  pdata           2    9[BANK0 ] PTR unsigned char 
  8272 ;;		 -> ASLB_test1@ramReadback(4), hx_mainData(61), 
  8273 ;;  length          1   11[BANK0 ] unsigned char 
  8274 ;;  address         2   12[BANK0 ] unsigned int 
  8275 ;;  pflag           2   14[BANK0 ] PTR enum E11599
  8276 ;;		 -> readI2C@status(1), 
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;		None
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  1    wreg      void 
  8281 ;; Registers used:
  8282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/0
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8288 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8291 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8292 ;;Total ram usage:        7 bytes
  8293 ;; Hardware stack levels used:    1
  8294 ;; Hardware stack levels required when called:    8
  8295 ;; This function calls:
  8296 ;;		_I2C1_MasterReadTRBBuild
  8297 ;;		_I2C1_MasterTRBInsert
  8298 ;; This function is called by:
  8299 ;;		_readI2C
  8300 ;; This function uses a non-reentrant model
  8301 ;;
  8302                           
  8303                           	psect	text21
  8304  002432                     __ptext21:
  8305                           	opt stack 0
  8306  002432                     _I2C1_MasterRead:
  8307                           	opt stack 20
  8308                           
  8309                           ;i2c1.c: 625: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
  8310                           ;i2c1.c: 629: if (i2c1_object.trStatus.s.full != 1)
  8311                           
  8312                           ; BSR set to: 0
  8313                           ;incstack = 0
  8314  002432  0100               	movlb	0	; () banked
  8315  002434  B164               	btfsc	(_i2c1_object+4)& (0+255),0,b
  8316  002436  D020               	goto	l7011
  8317                           
  8318                           ; BSR set to: 0
  8319                           ;i2c1.c: 630: {
  8320                           ;i2c1.c: 631: I2C1_MasterReadTRBBuild(&trBlock, pdata, length, address);
  8321  002438  0EAF               	movlw	low I2C1_MasterRead@trBlock
  8322  00243A  0100               	movlb	0	; () banked
  8323  00243C  6FBE               	movwf	I2C1_MasterReadTRBBuild@ptrb& (0+255),b
  8324  00243E  0E00               	movlw	high I2C1_MasterRead@trBlock
  8325  002440  0100               	movlb	0	; () banked
  8326  002442  6FBF               	movwf	(I2C1_MasterReadTRBBuild@ptrb+1)& (0+255),b
  8327  002444  C0C7  F0C0         	movff	I2C1_MasterRead@pdata,I2C1_MasterReadTRBBuild@pdata
  8328  002448  C0C8  F0C1         	movff	I2C1_MasterRead@pdata+1,I2C1_MasterReadTRBBuild@pdata+1
  8329  00244C  C0C9  F0C2         	movff	I2C1_MasterRead@length,I2C1_MasterReadTRBBuild@length
  8330  002450  C0CA  F0C3         	movff	I2C1_MasterRead@address,I2C1_MasterReadTRBBuild@address
  8331  002454  C0CB  F0C4         	movff	I2C1_MasterRead@address+1,I2C1_MasterReadTRBBuild@address+1
  8332  002458  ECC4  F011         	call	_I2C1_MasterReadTRBBuild	;wreg free
  8333                           
  8334                           ;i2c1.c: 632: I2C1_MasterTRBInsert(1, &trBlock, pflag);
  8335  00245C  0EAF               	movlw	low I2C1_MasterRead@trBlock
  8336  00245E  0100               	movlb	0	; () banked
  8337  002460  6FBE               	movwf	I2C1_MasterTRBInsert@ptrb_list& (0+255),b
  8338  002462  0E00               	movlw	high I2C1_MasterRead@trBlock
  8339  002464  0100               	movlb	0	; () banked
  8340  002466  6FBF               	movwf	(I2C1_MasterTRBInsert@ptrb_list+1)& (0+255),b
  8341  002468  C0CC  F0C0         	movff	I2C1_MasterRead@pflag,I2C1_MasterTRBInsert@pflag
  8342  00246C  C0CD  F0C1         	movff	I2C1_MasterRead@pflag+1,I2C1_MasterTRBInsert@pflag+1
  8343  002470  0E01               	movlw	1
  8344  002472  EC38  F00F         	call	_I2C1_MasterTRBInsert
  8345                           
  8346                           ;i2c1.c: 633: }
  8347  002476  0012               	return	
  8348  002478                     l7011:
  8349                           
  8350                           ;i2c1.c: 634: else
  8351                           ;i2c1.c: 635: {
  8352                           ;i2c1.c: 636: *pflag = I2C1_MESSAGE_FAIL;
  8353  002478  C0CC  FFD9         	movff	I2C1_MasterRead@pflag,fsr2l
  8354  00247C  C0CD  FFDA         	movff	I2C1_MasterRead@pflag+1,fsr2h
  8355  002480  0E01               	movlw	1
  8356  002482  6EDF               	movwf	indf2,c
  8357  002484  0012               	return	
  8358  002486                     __end_of_I2C1_MasterRead:
  8359                           	opt stack 0
  8360                           tblptru	equ	0xFF8
  8361                           tblptrh	equ	0xFF7
  8362                           tblptrl	equ	0xFF6
  8363                           tablat	equ	0xFF5
  8364                           prodh	equ	0xFF4
  8365                           prodl	equ	0xFF3
  8366                           intcon	equ	0xFF2
  8367                           postinc0	equ	0xFEE
  8368                           wreg	equ	0xFE8
  8369                           indf1	equ	0xFE7
  8370                           postinc1	equ	0xFE6
  8371                           fsr1h	equ	0xFE2
  8372                           fsr1l	equ	0xFE1
  8373                           indf2	equ	0xFDF
  8374                           postinc2	equ	0xFDE
  8375                           postdec2	equ	0xFDD
  8376                           fsr2h	equ	0xFDA
  8377                           fsr2l	equ	0xFD9
  8378                           status	equ	0xFD8
  8379                           
  8380 ;; *************** function _I2C1_MasterTRBInsert *****************
  8381 ;; Defined at:
  8382 ;;		line 641 in file "mcc_generated_files/i2c1.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;  count           1    wreg     unsigned char 
  8385 ;;  ptrb_list       2    0[BANK0 ] PTR struct .
  8386 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
  8387 ;;  pflag           2    2[BANK0 ] PTR enum E11599
  8388 ;;		 -> readI2C@status(1), writeI2C@status(1), 
  8389 ;; Auto vars:     Size  Location     Type
  8390 ;;  count           1    4[BANK0 ] unsigned char 
  8391 ;; Return value:  Size  Location     Type
  8392 ;;                  1    wreg      void 
  8393 ;; Registers used:
  8394 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8395 ;; Tracked objects:
  8396 ;;		On entry : 0/0
  8397 ;;		On exit  : 0/0
  8398 ;;		Unchanged: 0/0
  8399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8400 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8402 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8403 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8404 ;;Total ram usage:        6 bytes
  8405 ;; Hardware stack levels used:    1
  8406 ;; Hardware stack levels required when called:    7
  8407 ;; This function calls:
  8408 ;;		Nothing
  8409 ;; This function is called by:
  8410 ;;		_I2C1_MasterWrite
  8411 ;;		_I2C1_MasterRead
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           
  8415                           	psect	text22
  8416  001E70                     __ptext22:
  8417                           	opt stack 0
  8418  001E70                     _I2C1_MasterTRBInsert:
  8419                           	opt stack 20
  8420                           
  8421                           ;incstack = 0
  8422                           ;I2C1_MasterTRBInsert@count stored from wreg
  8423  001E70  0100               	movlb	0	; () banked
  8424  001E72  6FC2               	movwf	I2C1_MasterTRBInsert@count& (0+255),b
  8425                           
  8426                           ;i2c1.c: 648: if (i2c1_object.trStatus.s.full != 1)
  8427  001E74  0100               	movlb	0	; () banked
  8428  001E76  B164               	btfsc	(_i2c1_object+4)& (0+255),0,b
  8429  001E78  D046               	goto	l6985
  8430                           
  8431                           ; BSR set to: 0
  8432                           ;i2c1.c: 649: {
  8433                           ;i2c1.c: 650: *pflag = I2C1_MESSAGE_PENDING;
  8434  001E7A  C0C0  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  8435  001E7E  C0C1  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  8436  001E82  0E02               	movlw	2
  8437  001E84  6EDF               	movwf	indf2,c
  8438                           
  8439                           ; BSR set to: 0
  8440                           ;i2c1.c: 652: i2c1_object.pTrTail->ptrb_list = ptrb_list;
  8441  001E86  0100               	movlb	0	; () banked
  8442  001E88  EE20 F001          	lfsr	2,1
  8443  001E8C  5160               	movf	_i2c1_object& (0+255),w,b
  8444  001E8E  26D9               	addwf	fsr2l,f,c
  8445  001E90  5161               	movf	(_i2c1_object+1)& (0+255),w,b
  8446  001E92  22DA               	addwfc	fsr2h,f,c
  8447  001E94  C0BE  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
  8448  001E98  C0BF  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
  8449                           
  8450                           ; BSR set to: 0
  8451                           ;i2c1.c: 653: i2c1_object.pTrTail->count = count;
  8452  001E9C  C060  FFD9         	movff	_i2c1_object,fsr2l
  8453  001EA0  C061  FFDA         	movff	_i2c1_object+1,fsr2h
  8454  001EA4  C0C2  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
  8455                           
  8456                           ; BSR set to: 0
  8457                           ;i2c1.c: 654: i2c1_object.pTrTail->pTrFlag = pflag;
  8458  001EA8  0100               	movlb	0	; () banked
  8459  001EAA  EE20 F003          	lfsr	2,3
  8460  001EAE  5160               	movf	_i2c1_object& (0+255),w,b
  8461  001EB0  26D9               	addwf	fsr2l,f,c
  8462  001EB2  5161               	movf	(_i2c1_object+1)& (0+255),w,b
  8463  001EB4  22DA               	addwfc	fsr2h,f,c
  8464  001EB6  C0C0  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
  8465  001EBA  C0C1  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
  8466                           
  8467                           ; BSR set to: 0
  8468                           ;i2c1.c: 655: i2c1_object.pTrTail++;
  8469  001EBE  0E05               	movlw	5
  8470  001EC0  0100               	movlb	0	; () banked
  8471  001EC2  2760               	addwf	_i2c1_object& (0+255),f,b
  8472  001EC4  0E00               	movlw	0
  8473  001EC6  2361               	addwfc	(_i2c1_object+1)& (0+255),f,b
  8474                           
  8475                           ; BSR set to: 0
  8476                           ;i2c1.c: 658: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
  8477  001EC8  0EBE               	movlw	low (_i2c1_tr_queue+5)
  8478  001ECA  0100               	movlb	0	; () banked
  8479  001ECC  1960               	xorwf	_i2c1_object& (0+255),w,b
  8480  001ECE  E10B               	bnz	l6981
  8481  001ED0  0E00               	movlw	high (_i2c1_tr_queue+5)
  8482  001ED2  0100               	movlb	0	; () banked
  8483  001ED4  1961               	xorwf	(_i2c1_object+1)& (0+255),w,b
  8484  001ED6  A4D8               	btfss	status,2,c
  8485  001ED8  D006               	goto	l6981
  8486                           
  8487                           ; BSR set to: 0
  8488                           ;i2c1.c: 659: {
  8489                           ;i2c1.c: 661: i2c1_object.pTrTail = i2c1_tr_queue;
  8490  001EDA  0EB9               	movlw	low _i2c1_tr_queue
  8491  001EDC  0100               	movlb	0	; () banked
  8492  001EDE  6F60               	movwf	_i2c1_object& (0+255),b
  8493  001EE0  0E00               	movlw	high _i2c1_tr_queue
  8494  001EE2  0100               	movlb	0	; () banked
  8495  001EE4  6F61               	movwf	(_i2c1_object+1)& (0+255),b
  8496  001EE6                     l6981:
  8497                           
  8498                           ; BSR set to: 0
  8499                           ;i2c1.c: 662: }
  8500                           ;i2c1.c: 666: i2c1_object.trStatus.s.empty = 0;
  8501  001EE6  0100               	movlb	0	; () banked
  8502  001EE8  9364               	bcf	(_i2c1_object+4)& (0+255),1,b
  8503                           
  8504                           ;i2c1.c: 669: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
  8505  001EEA  0100               	movlb	0	; () banked
  8506  001EEC  5160               	movf	_i2c1_object& (0+255),w,b
  8507  001EEE  0100               	movlb	0	; () banked
  8508  001EF0  1962               	xorwf	(_i2c1_object+2)& (0+255),w,b
  8509  001EF2  E10F               	bnz	l6987
  8510  001EF4  0100               	movlb	0	; () banked
  8511  001EF6  5161               	movf	(_i2c1_object+1)& (0+255),w,b
  8512  001EF8  0100               	movlb	0	; () banked
  8513  001EFA  1963               	xorwf	(_i2c1_object+3)& (0+255),w,b
  8514  001EFC  A4D8               	btfss	status,2,c
  8515  001EFE  D009               	goto	l6987
  8516                           
  8517                           ; BSR set to: 0
  8518                           ;i2c1.c: 670: {
  8519                           ;i2c1.c: 672: i2c1_object.trStatus.s.full = 1;
  8520  001F00  0100               	movlb	0	; () banked
  8521  001F02  8164               	bsf	(_i2c1_object+4)& (0+255),0,b
  8522                           
  8523                           ; BSR set to: 0
  8524                           ;i2c1.c: 673: }
  8525                           ;i2c1.c: 675: }
  8526  001F04  D006               	goto	l6987
  8527  001F06                     l6985:
  8528                           
  8529                           ; BSR set to: 0
  8530                           ;i2c1.c: 676: else
  8531                           ;i2c1.c: 677: {
  8532                           ;i2c1.c: 678: *pflag = I2C1_MESSAGE_FAIL;
  8533  001F06  C0C0  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  8534  001F0A  C0C1  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  8535  001F0E  0E01               	movlw	1
  8536  001F10  6EDF               	movwf	indf2,c
  8537  001F12                     l6987:
  8538                           
  8539                           ; BSR set to: 0
  8540                           ;i2c1.c: 679: }
  8541                           ;i2c1.c: 682: if (*pflag == I2C1_MESSAGE_PENDING)
  8542  001F12  C0C0  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  8543  001F16  C0C1  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  8544  001F1A  0E02               	movlw	2
  8545  001F1C  18DE               	xorwf	postinc2,w,c
  8546  001F1E  A4D8               	btfss	status,2,c
  8547  001F20  0012               	return	
  8548  001F22                     l6991:
  8549  001F22  502C               	movf	_i2c1_state,w,c
  8550  001F24  A4D8               	btfss	status,2,c
  8551  001F26  D7FD               	goto	l6991
  8552                           
  8553                           ;i2c1.c: 685: {
  8554                           ;i2c1.c: 688: PIR3bits.SSP1IF = 1;
  8555  001F28  010E               	movlb	14	; () banked
  8556  001F2A  81CD               	bsf	205,0,b	;volatile
  8557  001F2C  0012               	return	
  8558  001F2E                     __end_of_I2C1_MasterTRBInsert:
  8559                           	opt stack 0
  8560                           tblptru	equ	0xFF8
  8561                           tblptrh	equ	0xFF7
  8562                           tblptrl	equ	0xFF6
  8563                           tablat	equ	0xFF5
  8564                           prodh	equ	0xFF4
  8565                           prodl	equ	0xFF3
  8566                           intcon	equ	0xFF2
  8567                           postinc0	equ	0xFEE
  8568                           wreg	equ	0xFE8
  8569                           indf1	equ	0xFE7
  8570                           postinc1	equ	0xFE6
  8571                           fsr1h	equ	0xFE2
  8572                           fsr1l	equ	0xFE1
  8573                           indf2	equ	0xFDF
  8574                           postinc2	equ	0xFDE
  8575                           postdec2	equ	0xFDD
  8576                           fsr2h	equ	0xFDA
  8577                           fsr2l	equ	0xFD9
  8578                           status	equ	0xFD8
  8579                           
  8580 ;; *************** function _I2C1_MasterReadTRBBuild *****************
  8581 ;; Defined at:
  8582 ;;		line 694 in file "mcc_generated_files/i2c1.c"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;  ptrb            2    0[BANK0 ] PTR struct .
  8585 ;;		 -> I2C1_MasterRead@trBlock(5), 
  8586 ;;  pdata           2    2[BANK0 ] PTR unsigned char 
  8587 ;;		 -> ASLB_test1@ramReadback(4), hx_mainData(61), 
  8588 ;;  length          1    4[BANK0 ] unsigned char 
  8589 ;;  address         2    5[BANK0 ] unsigned int 
  8590 ;; Auto vars:     Size  Location     Type
  8591 ;;		None
  8592 ;; Return value:  Size  Location     Type
  8593 ;;                  1    wreg      void 
  8594 ;; Registers used:
  8595 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/0
  8598 ;;		On exit  : 0/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8601 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8603 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8604 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8605 ;;Total ram usage:        9 bytes
  8606 ;; Hardware stack levels used:    1
  8607 ;; Hardware stack levels required when called:    7
  8608 ;; This function calls:
  8609 ;;		Nothing
  8610 ;; This function is called by:
  8611 ;;		_I2C1_MasterRead
  8612 ;; This function uses a non-reentrant model
  8613 ;;
  8614                           
  8615                           	psect	text23
  8616  002388                     __ptext23:
  8617                           	opt stack 0
  8618  002388                     _I2C1_MasterReadTRBBuild:
  8619                           	opt stack 20
  8620                           
  8621                           ;i2c1.c: 700: ptrb->address = address << 1;
  8622                           
  8623                           ;incstack = 0
  8624  002388  C0C3  F0C5         	movff	I2C1_MasterReadTRBBuild@address,??_I2C1_MasterReadTRBBuild
  8625  00238C  C0C4  F0C6         	movff	I2C1_MasterReadTRBBuild@address+1,??_I2C1_MasterReadTRBBuild+1
  8626  002390  90D8               	bcf	status,0,c
  8627  002392  0100               	movlb	0	; () banked
  8628  002394  37C5               	rlcf	??_I2C1_MasterReadTRBBuild& (0+255),f,b
  8629  002396  37C6               	rlcf	(??_I2C1_MasterReadTRBBuild+1)& (0+255),f,b
  8630  002398  C0BE  FFD9         	movff	I2C1_MasterReadTRBBuild@ptrb,fsr2l
  8631  00239C  C0BF  FFDA         	movff	I2C1_MasterReadTRBBuild@ptrb+1,fsr2h
  8632  0023A0  C0C5  FFDE         	movff	??_I2C1_MasterReadTRBBuild,postinc2
  8633  0023A4  C0C6  FFDD         	movff	??_I2C1_MasterReadTRBBuild+1,postdec2
  8634                           
  8635                           ; BSR set to: 0
  8636                           ;i2c1.c: 702: ptrb->address |= 0x01;
  8637  0023A8  C0BE  FFD9         	movff	I2C1_MasterReadTRBBuild@ptrb,fsr2l
  8638  0023AC  C0BF  FFDA         	movff	I2C1_MasterReadTRBBuild@ptrb+1,fsr2h
  8639  0023B0  0E00               	movlw	0
  8640  0023B2  80DB               	bsf	plusw2,0,c
  8641                           
  8642                           ; BSR set to: 0
  8643                           ;i2c1.c: 703: ptrb->length = length;
  8644  0023B4  0100               	movlb	0	; () banked
  8645  0023B6  EE20 F002          	lfsr	2,2
  8646  0023BA  51BE               	movf	I2C1_MasterReadTRBBuild@ptrb& (0+255),w,b
  8647  0023BC  26D9               	addwf	fsr2l,f,c
  8648  0023BE  51BF               	movf	(I2C1_MasterReadTRBBuild@ptrb+1)& (0+255),w,b
  8649  0023C0  22DA               	addwfc	fsr2h,f,c
  8650  0023C2  C0C2  FFDF         	movff	I2C1_MasterReadTRBBuild@length,indf2
  8651                           
  8652                           ; BSR set to: 0
  8653                           ;i2c1.c: 704: ptrb->pbuffer = pdata;
  8654  0023C6  0100               	movlb	0	; () banked
  8655  0023C8  EE20 F003          	lfsr	2,3
  8656  0023CC  51BE               	movf	I2C1_MasterReadTRBBuild@ptrb& (0+255),w,b
  8657  0023CE  26D9               	addwf	fsr2l,f,c
  8658  0023D0  51BF               	movf	(I2C1_MasterReadTRBBuild@ptrb+1)& (0+255),w,b
  8659  0023D2  22DA               	addwfc	fsr2h,f,c
  8660  0023D4  C0C0  FFDE         	movff	I2C1_MasterReadTRBBuild@pdata,postinc2
  8661  0023D8  C0C1  FFDD         	movff	I2C1_MasterReadTRBBuild@pdata+1,postdec2
  8662                           
  8663                           ; BSR set to: 0
  8664  0023DC  0012               	return		;funcret
  8665  0023DE                     __end_of_I2C1_MasterReadTRBBuild:
  8666                           	opt stack 0
  8667                           tblptru	equ	0xFF8
  8668                           tblptrh	equ	0xFF7
  8669                           tblptrl	equ	0xFF6
  8670                           tablat	equ	0xFF5
  8671                           prodh	equ	0xFF4
  8672                           prodl	equ	0xFF3
  8673                           intcon	equ	0xFF2
  8674                           postinc0	equ	0xFEE
  8675                           wreg	equ	0xFE8
  8676                           indf1	equ	0xFE7
  8677                           postinc1	equ	0xFE6
  8678                           fsr1h	equ	0xFE2
  8679                           fsr1l	equ	0xFE1
  8680                           indf2	equ	0xFDF
  8681                           postinc2	equ	0xFDE
  8682                           postdec2	equ	0xFDD
  8683                           plusw2	equ	0xFDB
  8684                           fsr2h	equ	0xFDA
  8685                           fsr2l	equ	0xFD9
  8686                           status	equ	0xFD8
  8687                           
  8688 ;; *************** function _write_ASLBoron_cstm_cnfg *****************
  8689 ;; Defined at:
  8690 ;;		line 152 in file "HX_ASL_BORON.c"
  8691 ;; Parameters:    Size  Location     Type
  8692 ;;  cnfg_arr        2    0[BANK0 ] PTR unsigned char 
  8693 ;;		 -> run_ASLBoron@cnfg_arr(256), 
  8694 ;;  cnfg_arr_siz    2    2[BANK0 ] unsigned int 
  8695 ;;  rxBuffer        2    4[BANK0 ] PTR unsigned char 
  8696 ;;		 -> hx_mainData(61), 
  8697 ;; Auto vars:     Size  Location     Type
  8698 ;;  rx_index        1   31[COMRAM] unsigned char 
  8699 ;; Return value:  Size  Location     Type
  8700 ;;                  1    wreg      void 
  8701 ;; Registers used:
  8702 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8703 ;; Tracked objects:
  8704 ;;		On entry : 0/0
  8705 ;;		On exit  : 0/0
  8706 ;;		Unchanged: 0/0
  8707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8708 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8709 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8711 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8712 ;;Total ram usage:        7 bytes
  8713 ;; Hardware stack levels used:    1
  8714 ;; Hardware stack levels required when called:    7
  8715 ;; This function calls:
  8716 ;;		Nothing
  8717 ;; This function is called by:
  8718 ;;		_run_ASLBoron
  8719 ;; This function uses a non-reentrant model
  8720 ;;
  8721                           
  8722                           	psect	text24
  8723  001FDE                     __ptext24:
  8724                           	opt stack 0
  8725  001FDE                     _write_ASLBoron_cstm_cnfg:
  8726                           	opt stack 22
  8727                           
  8728                           ;HX_ASL_BORON.c: 154: uint8_t rx_index = 0;
  8729                           
  8730                           ; BSR set to: 0
  8731                           ;incstack = 0
  8732  001FDE  0E00               	movlw	0
  8733  001FE0  6E20               	movwf	write_ASLBoron_cstm_cnfg@rx_index,c
  8734                           
  8735                           ;HX_ASL_BORON.c: 157: rxBuffer[rx_index++] = cnfg_arr_size | (cnfg_arr_size << 8);
  8736  001FE2  5020               	movf	write_ASLBoron_cstm_cnfg@rx_index,w,c
  8737  001FE4  0D01               	mullw	1
  8738  001FE6  50F3               	movf	prodl,w,c
  8739  001FE8  0100               	movlb	0	; () banked
  8740  001FEA  25C2               	addwf	write_ASLBoron_cstm_cnfg@rxBuffer& (0+255),w,b
  8741  001FEC  6ED9               	movwf	fsr2l,c
  8742  001FEE  50F4               	movf	prodh,w,c
  8743  001FF0  0100               	movlb	0	; () banked
  8744  001FF2  21C3               	addwfc	(write_ASLBoron_cstm_cnfg@rxBuffer+1)& (0+255),w,b
  8745  001FF4  6EDA               	movwf	fsr2h,c
  8746  001FF6  C0C0  FFDF         	movff	write_ASLBoron_cstm_cnfg@cnfg_arr_size,indf2
  8747                           
  8748                           ; BSR set to: 0
  8749  001FFA  2A20               	incf	write_ASLBoron_cstm_cnfg@rx_index,f,c
  8750                           
  8751                           ; BSR set to: 0
  8752                           ;HX_ASL_BORON.c: 158: rxBuffer[rx_index++] = cnfg_arr[0];
  8753  001FFC  C0BE  FFD9         	movff	write_ASLBoron_cstm_cnfg@cnfg_arr,fsr2l
  8754  002000  C0BF  FFDA         	movff	write_ASLBoron_cstm_cnfg@cnfg_arr+1,fsr2h
  8755  002004  5020               	movf	write_ASLBoron_cstm_cnfg@rx_index,w,c
  8756  002006  0D01               	mullw	1
  8757  002008  50F3               	movf	prodl,w,c
  8758  00200A  0100               	movlb	0	; () banked
  8759  00200C  25C2               	addwf	write_ASLBoron_cstm_cnfg@rxBuffer& (0+255),w,b
  8760  00200E  6EE1               	movwf	fsr1l,c
  8761  002010  50F4               	movf	prodh,w,c
  8762  002012  0100               	movlb	0	; () banked
  8763  002014  21C3               	addwfc	(write_ASLBoron_cstm_cnfg@rxBuffer+1)& (0+255),w,b
  8764  002016  6EE2               	movwf	fsr1h,c
  8765  002018  CFDF FFE7          	movff	indf2,indf1
  8766                           
  8767                           ; BSR set to: 0
  8768  00201C  2A20               	incf	write_ASLBoron_cstm_cnfg@rx_index,f,c
  8769                           
  8770                           ; BSR set to: 0
  8771                           ;HX_ASL_BORON.c: 159: rxBuffer[rx_index++] = cnfg_arr[1];
  8772  00201E  0100               	movlb	0	; () banked
  8773  002020  EE20 F001          	lfsr	2,1
  8774  002024  51BE               	movf	write_ASLBoron_cstm_cnfg@cnfg_arr& (0+255),w,b
  8775  002026  26D9               	addwf	fsr2l,f,c
  8776  002028  51BF               	movf	(write_ASLBoron_cstm_cnfg@cnfg_arr+1)& (0+255),w,b
  8777  00202A  22DA               	addwfc	fsr2h,f,c
  8778  00202C  5020               	movf	write_ASLBoron_cstm_cnfg@rx_index,w,c
  8779  00202E  0D01               	mullw	1
  8780  002030  50F3               	movf	prodl,w,c
  8781  002032  0100               	movlb	0	; () banked
  8782  002034  25C2               	addwf	write_ASLBoron_cstm_cnfg@rxBuffer& (0+255),w,b
  8783  002036  6EE1               	movwf	fsr1l,c
  8784  002038  50F4               	movf	prodh,w,c
  8785  00203A  0100               	movlb	0	; () banked
  8786  00203C  21C3               	addwfc	(write_ASLBoron_cstm_cnfg@rxBuffer+1)& (0+255),w,b
  8787  00203E  6EE2               	movwf	fsr1h,c
  8788  002040  CFDF FFE7          	movff	indf2,indf1
  8789                           
  8790                           ; BSR set to: 0
  8791  002044  2A20               	incf	write_ASLBoron_cstm_cnfg@rx_index,f,c
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;HX_ASL_BORON.c: 160: rxBuffer[rx_index++] = cnfg_arr[2];
  8795  002046  0100               	movlb	0	; () banked
  8796  002048  EE20 F002          	lfsr	2,2
  8797  00204C  51BE               	movf	write_ASLBoron_cstm_cnfg@cnfg_arr& (0+255),w,b
  8798  00204E  26D9               	addwf	fsr2l,f,c
  8799  002050  51BF               	movf	(write_ASLBoron_cstm_cnfg@cnfg_arr+1)& (0+255),w,b
  8800  002052  22DA               	addwfc	fsr2h,f,c
  8801  002054  5020               	movf	write_ASLBoron_cstm_cnfg@rx_index,w,c
  8802  002056  0D01               	mullw	1
  8803  002058  50F3               	movf	prodl,w,c
  8804  00205A  0100               	movlb	0	; () banked
  8805  00205C  25C2               	addwf	write_ASLBoron_cstm_cnfg@rxBuffer& (0+255),w,b
  8806  00205E  6EE1               	movwf	fsr1l,c
  8807  002060  50F4               	movf	prodh,w,c
  8808  002062  0100               	movlb	0	; () banked
  8809  002064  21C3               	addwfc	(write_ASLBoron_cstm_cnfg@rxBuffer+1)& (0+255),w,b
  8810  002066  6EE2               	movwf	fsr1h,c
  8811  002068  CFDF FFE7          	movff	indf2,indf1
  8812                           
  8813                           ; BSR set to: 0
  8814  00206C  2A20               	incf	write_ASLBoron_cstm_cnfg@rx_index,f,c
  8815                           
  8816                           ; BSR set to: 0
  8817                           ;HX_ASL_BORON.c: 161: hx_mainDataIndex += 4;
  8818  00206E  0E04               	movlw	4
  8819  002070  2638               	addwf	_hx_mainDataIndex,f,c
  8820                           
  8821                           ; BSR set to: 0
  8822  002072  0012               	return		;funcret
  8823  002074                     __end_of_write_ASLBoron_cstm_cnfg:
  8824                           	opt stack 0
  8825                           tblptru	equ	0xFF8
  8826                           tblptrh	equ	0xFF7
  8827                           tblptrl	equ	0xFF6
  8828                           tablat	equ	0xFF5
  8829                           prodh	equ	0xFF4
  8830                           prodl	equ	0xFF3
  8831                           intcon	equ	0xFF2
  8832                           postinc0	equ	0xFEE
  8833                           wreg	equ	0xFE8
  8834                           indf1	equ	0xFE7
  8835                           postinc1	equ	0xFE6
  8836                           fsr1h	equ	0xFE2
  8837                           fsr1l	equ	0xFE1
  8838                           indf2	equ	0xFDF
  8839                           postinc2	equ	0xFDE
  8840                           postdec2	equ	0xFDD
  8841                           plusw2	equ	0xFDB
  8842                           fsr2h	equ	0xFDA
  8843                           fsr2l	equ	0xFD9
  8844                           status	equ	0xFD8
  8845                           
  8846 ;; *************** function _write_ASLBoron_cnfg *****************
  8847 ;; Defined at:
  8848 ;;		line 131 in file "HX_ASL_BORON.c"
  8849 ;; Parameters:    Size  Location     Type
  8850 ;;  run_cnfg        1    wreg     unsigned char 
  8851 ;;  rxBuffer        2    2[BANK0 ] PTR unsigned char 
  8852 ;;		 -> hx_mainData(61), 
  8853 ;; Auto vars:     Size  Location     Type
  8854 ;;  run_cnfg        1   31[COMRAM] unsigned char 
  8855 ;; Return value:  Size  Location     Type
  8856 ;;                  1    wreg      void 
  8857 ;; Registers used:
  8858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8859 ;; Tracked objects:
  8860 ;;		On entry : 0/0
  8861 ;;		On exit  : 0/0
  8862 ;;		Unchanged: 0/0
  8863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8864 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8865 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8867 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8868 ;;Total ram usage:        3 bytes
  8869 ;; Hardware stack levels used:    1
  8870 ;; Hardware stack levels required when called:    8
  8871 ;; This function calls:
  8872 ;;		_ASLB_cnfg0
  8873 ;;		_ASLB_cnfg1
  8874 ;; This function is called by:
  8875 ;;		_run_ASLBoron
  8876 ;; This function uses a non-reentrant model
  8877 ;;
  8878                           
  8879                           	psect	text25
  8880  0021E4                     __ptext25:
  8881                           	opt stack 0
  8882  0021E4                     _write_ASLBoron_cnfg:
  8883                           	opt stack 21
  8884                           
  8885                           ; BSR set to: 0
  8886                           ;incstack = 0
  8887                           ;write_ASLBoron_cnfg@run_cnfg stored from wreg
  8888  0021E4  6E20               	movwf	write_ASLBoron_cnfg@run_cnfg,c
  8889                           
  8890                           ;HX_ASL_BORON.c: 133: switch (run_cnfg)
  8891  0021E6  D02F               	goto	l8027
  8892  0021E8                     l8013:
  8893                           
  8894                           ;HX_ASL_BORON.c: 136: ASLB_cnfg0(&rxBuffer[1]);
  8895  0021E8  0E01               	movlw	1
  8896  0021EA  0100               	movlb	0	; () banked
  8897  0021EC  25C0               	addwf	write_ASLBoron_cnfg@rxBuffer& (0+255),w,b
  8898  0021EE  0100               	movlb	0	; () banked
  8899  0021F0  6FBE               	movwf	ASLB_cnfg0@rxBuffer& (0+255),b
  8900  0021F2  0E00               	movlw	0
  8901  0021F4  0100               	movlb	0	; () banked
  8902  0021F6  21C1               	addwfc	(write_ASLBoron_cnfg@rxBuffer+1)& (0+255),w,b
  8903  0021F8  0100               	movlb	0	; () banked
  8904  0021FA  6FBF               	movwf	(ASLB_cnfg0@rxBuffer+1)& (0+255),b
  8905  0021FC  EC2E  F015         	call	_ASLB_cnfg0	;wreg free
  8906                           
  8907                           ;HX_ASL_BORON.c: 137: rxBuffer[0] = 0x10;
  8908  002200  C0C0  FFD9         	movff	write_ASLBoron_cnfg@rxBuffer,fsr2l
  8909  002204  C0C1  FFDA         	movff	write_ASLBoron_cnfg@rxBuffer+1,fsr2h
  8910  002208  0E10               	movlw	16
  8911  00220A  6EDF               	movwf	indf2,c
  8912                           
  8913                           ;HX_ASL_BORON.c: 138: break;
  8914  00220C  0012               	return	
  8915  00220E                     l8017:
  8916                           
  8917                           ;HX_ASL_BORON.c: 141: ASLB_cnfg1(&rxBuffer[1]);
  8918  00220E  0E01               	movlw	1
  8919  002210  0100               	movlb	0	; () banked
  8920  002212  25C0               	addwf	write_ASLBoron_cnfg@rxBuffer& (0+255),w,b
  8921  002214  0100               	movlb	0	; () banked
  8922  002216  6FBE               	movwf	ASLB_cnfg1@rxBuffer& (0+255),b
  8923  002218  0E00               	movlw	0
  8924  00221A  0100               	movlb	0	; () banked
  8925  00221C  21C1               	addwfc	(write_ASLBoron_cnfg@rxBuffer+1)& (0+255),w,b
  8926  00221E  0100               	movlb	0	; () banked
  8927  002220  6FBF               	movwf	(ASLB_cnfg1@rxBuffer+1)& (0+255),b
  8928  002222  EC2D  F015         	call	_ASLB_cnfg1	;wreg free
  8929                           
  8930                           ;HX_ASL_BORON.c: 142: rxBuffer[0] = 0x10;
  8931  002226  C0C0  FFD9         	movff	write_ASLBoron_cnfg@rxBuffer,fsr2l
  8932  00222A  C0C1  FFDA         	movff	write_ASLBoron_cnfg@rxBuffer+1,fsr2h
  8933  00222E  0E10               	movlw	16
  8934  002230  6EDF               	movwf	indf2,c
  8935                           
  8936                           ;HX_ASL_BORON.c: 143: break;
  8937  002232  0012               	return	
  8938  002234                     l8021:
  8939                           
  8940                           ;HX_ASL_BORON.c: 146: hx_state = 0x40;
  8941  002234  0E40               	movlw	64
  8942  002236  6E3E               	movwf	_hx_state,c
  8943                           
  8944                           ;HX_ASL_BORON.c: 147: rxBuffer[0] = 0x00;
  8945  002238  C0C0  FFD9         	movff	write_ASLBoron_cnfg@rxBuffer,fsr2l
  8946  00223C  C0C1  FFDA         	movff	write_ASLBoron_cnfg@rxBuffer+1,fsr2h
  8947  002240  0E00               	movlw	0
  8948  002242  6EDF               	movwf	indf2,c
  8949                           
  8950                           ;HX_ASL_BORON.c: 149: }
  8951                           
  8952                           ;HX_ASL_BORON.c: 148: break;
  8953  002244  0012               	return	
  8954  002246                     l8027:
  8955  002246  5020               	movf	write_ASLBoron_cnfg@run_cnfg,w,c
  8956                           
  8957                           ; Switch size 1, requested type "space"
  8958                           ; Number of cases is 2, Range of values is 0 to 1
  8959                           ; switch strategies available:
  8960                           ; Name         Instructions Cycles
  8961                           ; simple_byte            7     4 (average)
  8962                           ;	Chosen strategy is simple_byte
  8963  002248  0A00               	xorlw	0	; case 0
  8964  00224A  B4D8               	btfsc	status,2,c
  8965  00224C  D7CD               	goto	l8013
  8966  00224E  0A01               	xorlw	1	; case 1
  8967  002250  B4D8               	btfsc	status,2,c
  8968  002252  D7DD               	goto	l8017
  8969  002254  D7EF               	goto	l8021
  8970  002256                     __end_of_write_ASLBoron_cnfg:
  8971                           	opt stack 0
  8972                           tblptru	equ	0xFF8
  8973                           tblptrh	equ	0xFF7
  8974                           tblptrl	equ	0xFF6
  8975                           tablat	equ	0xFF5
  8976                           prodh	equ	0xFF4
  8977                           prodl	equ	0xFF3
  8978                           intcon	equ	0xFF2
  8979                           postinc0	equ	0xFEE
  8980                           wreg	equ	0xFE8
  8981                           indf1	equ	0xFE7
  8982                           postinc1	equ	0xFE6
  8983                           fsr1h	equ	0xFE2
  8984                           fsr1l	equ	0xFE1
  8985                           indf2	equ	0xFDF
  8986                           postinc2	equ	0xFDE
  8987                           postdec2	equ	0xFDD
  8988                           plusw2	equ	0xFDB
  8989                           fsr2h	equ	0xFDA
  8990                           fsr2l	equ	0xFD9
  8991                           status	equ	0xFD8
  8992                           
  8993 ;; *************** function _ASLB_cnfg1 *****************
  8994 ;; Defined at:
  8995 ;;		line 247 in file "HX_ASL_BORON.c"
  8996 ;; Parameters:    Size  Location     Type
  8997 ;;  rxBuffer        2    0[BANK0 ] PTR unsigned char 
  8998 ;;		 -> hx_mainData(61), 
  8999 ;; Auto vars:     Size  Location     Type
  9000 ;;		None
  9001 ;; Return value:  Size  Location     Type
  9002 ;;                  1    wreg      void 
  9003 ;; Registers used:
  9004 ;;		None
  9005 ;; Tracked objects:
  9006 ;;		On entry : 0/0
  9007 ;;		On exit  : 0/0
  9008 ;;		Unchanged: 0/0
  9009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9010 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9013 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9014 ;;Total ram usage:        2 bytes
  9015 ;; Hardware stack levels used:    1
  9016 ;; Hardware stack levels required when called:    7
  9017 ;; This function calls:
  9018 ;;		Nothing
  9019 ;; This function is called by:
  9020 ;;		_write_ASLBoron_cnfg
  9021 ;; This function uses a non-reentrant model
  9022 ;;
  9023                           
  9024                           	psect	text26
  9025  002A5A                     __ptext26:
  9026                           	opt stack 0
  9027  002A5A                     _ASLB_cnfg1:
  9028                           	opt stack 21
  9029                           
  9030                           ;incstack = 0
  9031  002A5A  0012               	return		;funcret
  9032  002A5C                     __end_of_ASLB_cnfg1:
  9033                           	opt stack 0
  9034                           tblptru	equ	0xFF8
  9035                           tblptrh	equ	0xFF7
  9036                           tblptrl	equ	0xFF6
  9037                           tablat	equ	0xFF5
  9038                           prodh	equ	0xFF4
  9039                           prodl	equ	0xFF3
  9040                           intcon	equ	0xFF2
  9041                           postinc0	equ	0xFEE
  9042                           wreg	equ	0xFE8
  9043                           indf1	equ	0xFE7
  9044                           postinc1	equ	0xFE6
  9045                           fsr1h	equ	0xFE2
  9046                           fsr1l	equ	0xFE1
  9047                           indf2	equ	0xFDF
  9048                           postinc2	equ	0xFDE
  9049                           postdec2	equ	0xFDD
  9050                           plusw2	equ	0xFDB
  9051                           fsr2h	equ	0xFDA
  9052                           fsr2l	equ	0xFD9
  9053                           status	equ	0xFD8
  9054                           
  9055 ;; *************** function _ASLB_cnfg0 *****************
  9056 ;; Defined at:
  9057 ;;		line 242 in file "HX_ASL_BORON.c"
  9058 ;; Parameters:    Size  Location     Type
  9059 ;;  rxBuffer        2    0[BANK0 ] PTR unsigned char 
  9060 ;;		 -> hx_mainData(61), 
  9061 ;; Auto vars:     Size  Location     Type
  9062 ;;		None
  9063 ;; Return value:  Size  Location     Type
  9064 ;;                  1    wreg      void 
  9065 ;; Registers used:
  9066 ;;		None
  9067 ;; Tracked objects:
  9068 ;;		On entry : 0/0
  9069 ;;		On exit  : 0/0
  9070 ;;		Unchanged: 0/0
  9071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9072 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9075 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9076 ;;Total ram usage:        2 bytes
  9077 ;; Hardware stack levels used:    1
  9078 ;; Hardware stack levels required when called:    7
  9079 ;; This function calls:
  9080 ;;		Nothing
  9081 ;; This function is called by:
  9082 ;;		_write_ASLBoron_cnfg
  9083 ;; This function uses a non-reentrant model
  9084 ;;
  9085                           
  9086                           	psect	text27
  9087  002A5C                     __ptext27:
  9088                           	opt stack 0
  9089  002A5C                     _ASLB_cnfg0:
  9090                           	opt stack 21
  9091                           
  9092                           ;incstack = 0
  9093  002A5C  0012               	return		;funcret
  9094  002A5E                     __end_of_ASLB_cnfg0:
  9095                           	opt stack 0
  9096                           tblptru	equ	0xFF8
  9097                           tblptrh	equ	0xFF7
  9098                           tblptrl	equ	0xFF6
  9099                           tablat	equ	0xFF5
  9100                           prodh	equ	0xFF4
  9101                           prodl	equ	0xFF3
  9102                           intcon	equ	0xFF2
  9103                           postinc0	equ	0xFEE
  9104                           wreg	equ	0xFE8
  9105                           indf1	equ	0xFE7
  9106                           postinc1	equ	0xFE6
  9107                           fsr1h	equ	0xFE2
  9108                           fsr1l	equ	0xFE1
  9109                           indf2	equ	0xFDF
  9110                           postinc2	equ	0xFDE
  9111                           postdec2	equ	0xFDD
  9112                           plusw2	equ	0xFDB
  9113                           fsr2h	equ	0xFDA
  9114                           fsr2l	equ	0xFD9
  9115                           status	equ	0xFD8
  9116                           
  9117 ;; *************** function _hxHandleTxUART *****************
  9118 ;; Defined at:
  9119 ;;		line 229 in file "HX_CommInterface.c"
  9120 ;; Parameters:    Size  Location     Type
  9121 ;;		None
  9122 ;; Auto vars:     Size  Location     Type
  9123 ;;  i               2    6[BANK0 ] int 
  9124 ;; Return value:  Size  Location     Type
  9125 ;;                  1    wreg      void 
  9126 ;; Registers used:
  9127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9128 ;; Tracked objects:
  9129 ;;		On entry : 0/0
  9130 ;;		On exit  : 0/0
  9131 ;;		Unchanged: 0/0
  9132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9134 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9135 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9136 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9137 ;;Total ram usage:        5 bytes
  9138 ;; Hardware stack levels used:    1
  9139 ;; Hardware stack levels required when called:    9
  9140 ;; This function calls:
  9141 ;;		_EUSART1_Write
  9142 ;;		_hxFlushOutputBuffer
  9143 ;;		_hxStopTimer
  9144 ;; This function is called by:
  9145 ;;		_main
  9146 ;; This function uses a non-reentrant model
  9147 ;;
  9148                           
  9149                           	psect	text28
  9150  0022C2                     __ptext28:
  9151                           	opt stack 0
  9152  0022C2                     _hxHandleTxUART:
  9153                           	opt stack 21
  9154                           
  9155                           ;HX_CommInterface.c: 231: if (hx_txPacketFlag)
  9156                           
  9157                           ;incstack = 0
  9158  0022C2  503F               	movf	_hx_txPacketFlag,w,c
  9159  0022C4  B4D8               	btfsc	status,2,c
  9160  0022C6  0012               	return	
  9161                           
  9162                           ;HX_CommInterface.c: 232: {
  9163                           ;HX_CommInterface.c: 233: for (int i = 0; i < hx_outDataIndex; i++)
  9164  0022C8  0E00               	movlw	0
  9165  0022CA  0100               	movlb	0	; () banked
  9166  0022CC  6FC5               	movwf	(hxHandleTxUART@i+1)& (0+255),b
  9167  0022CE  0E00               	movlw	0
  9168  0022D0  6FC4               	movwf	hxHandleTxUART@i& (0+255),b
  9169  0022D2  D00E               	goto	l8091
  9170  0022D4                     l8087:
  9171                           
  9172                           ; BSR set to: 0
  9173                           ;HX_CommInterface.c: 234: {
  9174                           ;HX_CommInterface.c: 235: EUSART1_Write(hx_outData[i]);
  9175  0022D4  0EA0               	movlw	low _hx_outData
  9176  0022D6  0100               	movlb	0	; () banked
  9177  0022D8  25C4               	addwf	hxHandleTxUART@i& (0+255),w,b
  9178  0022DA  6ED9               	movwf	fsr2l,c
  9179  0022DC  0E02               	movlw	high _hx_outData
  9180  0022DE  0100               	movlb	0	; () banked
  9181  0022E0  21C5               	addwfc	(hxHandleTxUART@i+1)& (0+255),w,b
  9182  0022E2  6EDA               	movwf	fsr2h,c
  9183  0022E4  50DF               	movf	indf2,w,c
  9184  0022E6  EC02  F013         	call	_EUSART1_Write
  9185  0022EA  0100               	movlb	0	; () banked
  9186  0022EC  4BC4               	infsnz	hxHandleTxUART@i& (0+255),f,b
  9187  0022EE  2BC5               	incf	(hxHandleTxUART@i+1)& (0+255),f,b
  9188  0022F0                     l8091:
  9189                           
  9190                           ; BSR set to: 0
  9191  0022F0  5039               	movf	_hx_outDataIndex,w,c
  9192  0022F2  0100               	movlb	0	; () banked
  9193  0022F4  6FC1               	movwf	??_hxHandleTxUART& (0+255),b
  9194  0022F6  6BC2               	clrf	(??_hxHandleTxUART+1)& (0+255),b
  9195  0022F8  0100               	movlb	0	; () banked
  9196  0022FA  51C1               	movf	??_hxHandleTxUART& (0+255),w,b
  9197  0022FC  0100               	movlb	0	; () banked
  9198  0022FE  5DC4               	subwf	hxHandleTxUART@i& (0+255),w,b
  9199  002300  0100               	movlb	0	; () banked
  9200  002302  51C5               	movf	(hxHandleTxUART@i+1)& (0+255),w,b
  9201  002304  0A80               	xorlw	128
  9202  002306  0100               	movlb	0	; () banked
  9203  002308  6FC3               	movwf	(??_hxHandleTxUART+2)& (0+255),b
  9204  00230A  0100               	movlb	0	; () banked
  9205  00230C  51C2               	movf	(??_hxHandleTxUART+1)& (0+255),w,b
  9206  00230E  0A80               	xorlw	128
  9207  002310  0100               	movlb	0	; () banked
  9208  002312  59C3               	subwfb	(??_hxHandleTxUART+2)& (0+255),w,b
  9209  002314  A0D8               	btfss	status,0,c
  9210  002316  D7DE               	goto	l8087
  9211                           
  9212                           ; BSR set to: 0
  9213                           ;HX_CommInterface.c: 236: }
  9214                           ;HX_CommInterface.c: 237: hxStopTimer();
  9215                           
  9216                           ; BSR set to: 0
  9217  002318  ECEC  F014         	call	_hxStopTimer	;wreg free
  9218                           
  9219                           ;HX_CommInterface.c: 238: hx_txPacketFlag = 0;
  9220  00231C  0E00               	movlw	0
  9221  00231E  6E3F               	movwf	_hx_txPacketFlag,c
  9222                           
  9223                           ;HX_CommInterface.c: 239: hxFlushOutputBuffer();
  9224  002320  EC88  F014         	call	_hxFlushOutputBuffer	;wreg free
  9225  002324  0012               	return	
  9226  002326                     __end_of_hxHandleTxUART:
  9227                           	opt stack 0
  9228                           tblptru	equ	0xFF8
  9229                           tblptrh	equ	0xFF7
  9230                           tblptrl	equ	0xFF6
  9231                           tablat	equ	0xFF5
  9232                           prodh	equ	0xFF4
  9233                           prodl	equ	0xFF3
  9234                           intcon	equ	0xFF2
  9235                           postinc0	equ	0xFEE
  9236                           wreg	equ	0xFE8
  9237                           indf1	equ	0xFE7
  9238                           postinc1	equ	0xFE6
  9239                           fsr1h	equ	0xFE2
  9240                           fsr1l	equ	0xFE1
  9241                           indf2	equ	0xFDF
  9242                           postinc2	equ	0xFDE
  9243                           postdec2	equ	0xFDD
  9244                           plusw2	equ	0xFDB
  9245                           fsr2h	equ	0xFDA
  9246                           fsr2l	equ	0xFD9
  9247                           status	equ	0xFD8
  9248                           
  9249 ;; *************** function _hxStopTimer *****************
  9250 ;; Defined at:
  9251 ;;		line 266 in file "HX_CommInterface.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;		None
  9254 ;; Auto vars:     Size  Location     Type
  9255 ;;		None
  9256 ;; Return value:  Size  Location     Type
  9257 ;;                  1    wreg      void 
  9258 ;; Registers used:
  9259 ;;		wreg, status,2, cstack
  9260 ;; Tracked objects:
  9261 ;;		On entry : 0/0
  9262 ;;		On exit  : 0/0
  9263 ;;		Unchanged: 0/0
  9264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9269 ;;Total ram usage:        0 bytes
  9270 ;; Hardware stack levels used:    1
  9271 ;; Hardware stack levels required when called:    8
  9272 ;; This function calls:
  9273 ;;		_TMR0_StopTimer
  9274 ;;		_TMR0_Write16bitTimer
  9275 ;; This function is called by:
  9276 ;;		_hxHandleTxUART
  9277 ;; This function uses a non-reentrant model
  9278 ;;
  9279                           
  9280                           	psect	text29
  9281  0029D8                     __ptext29:
  9282                           	opt stack 0
  9283  0029D8                     _hxStopTimer:
  9284                           	opt stack 21
  9285                           
  9286                           ;HX_CommInterface.c: 268: TMR0_StopTimer();
  9287                           
  9288                           ;incstack = 0
  9289  0029D8  EC25  F015         	call	_TMR0_StopTimer	;wreg free
  9290                           
  9291                           ;HX_CommInterface.c: 269: TMR0_Write16bitTimer(0xF63C);
  9292  0029DC  0EF6               	movlw	246
  9293  0029DE  0100               	movlb	0	; () banked
  9294  0029E0  6FBF               	movwf	(TMR0_Write16bitTimer@timerVal+1)& (0+255),b
  9295  0029E2  0E3C               	movlw	60
  9296  0029E4  6FBE               	movwf	TMR0_Write16bitTimer@timerVal& (0+255),b
  9297  0029E6  EC17  F015         	call	_TMR0_Write16bitTimer	;wreg free
  9298  0029EA  0012               	return		;funcret
  9299  0029EC                     __end_of_hxStopTimer:
  9300                           	opt stack 0
  9301                           tblptru	equ	0xFF8
  9302                           tblptrh	equ	0xFF7
  9303                           tblptrl	equ	0xFF6
  9304                           tablat	equ	0xFF5
  9305                           prodh	equ	0xFF4
  9306                           prodl	equ	0xFF3
  9307                           intcon	equ	0xFF2
  9308                           postinc0	equ	0xFEE
  9309                           wreg	equ	0xFE8
  9310                           indf1	equ	0xFE7
  9311                           postinc1	equ	0xFE6
  9312                           fsr1h	equ	0xFE2
  9313                           fsr1l	equ	0xFE1
  9314                           indf2	equ	0xFDF
  9315                           postinc2	equ	0xFDE
  9316                           postdec2	equ	0xFDD
  9317                           plusw2	equ	0xFDB
  9318                           fsr2h	equ	0xFDA
  9319                           fsr2l	equ	0xFD9
  9320                           status	equ	0xFD8
  9321                           
  9322 ;; *************** function _TMR0_Write16bitTimer *****************
  9323 ;; Defined at:
  9324 ;;		line 119 in file "mcc_generated_files/tmr0.c"
  9325 ;; Parameters:    Size  Location     Type
  9326 ;;  timerVal        2    0[BANK0 ] unsigned int 
  9327 ;; Auto vars:     Size  Location     Type
  9328 ;;		None
  9329 ;; Return value:  Size  Location     Type
  9330 ;;                  1    wreg      void 
  9331 ;; Registers used:
  9332 ;;		wreg, status,2
  9333 ;; Tracked objects:
  9334 ;;		On entry : 0/0
  9335 ;;		On exit  : 0/0
  9336 ;;		Unchanged: 0/0
  9337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9338 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9341 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9342 ;;Total ram usage:        2 bytes
  9343 ;; Hardware stack levels used:    1
  9344 ;; Hardware stack levels required when called:    7
  9345 ;; This function calls:
  9346 ;;		Nothing
  9347 ;; This function is called by:
  9348 ;;		_hxStopTimer
  9349 ;; This function uses a non-reentrant model
  9350 ;;
  9351                           
  9352                           	psect	text30
  9353  002A2E                     __ptext30:
  9354                           	opt stack 0
  9355  002A2E                     _TMR0_Write16bitTimer:
  9356                           	opt stack 21
  9357                           
  9358                           ;tmr0.c: 122: TMR0H = timerVal >> 8;
  9359                           
  9360                           ;incstack = 0
  9361  002A2E  0100               	movlb	0	; () banked
  9362  002A30  51BF               	movf	(TMR0_Write16bitTimer@timerVal+1)& (0+255),w,b
  9363  002A32  6ED4               	movwf	4052,c	;volatile
  9364                           
  9365                           ; BSR set to: 0
  9366                           ;tmr0.c: 123: TMR0L = (uint8_t) timerVal;
  9367  002A34  C0BE  FFD3         	movff	TMR0_Write16bitTimer@timerVal,4051	;volatile
  9368                           
  9369                           ; BSR set to: 0
  9370  002A38  0012               	return		;funcret
  9371  002A3A                     __end_of_TMR0_Write16bitTimer:
  9372                           	opt stack 0
  9373                           tblptru	equ	0xFF8
  9374                           tblptrh	equ	0xFF7
  9375                           tblptrl	equ	0xFF6
  9376                           tablat	equ	0xFF5
  9377                           prodh	equ	0xFF4
  9378                           prodl	equ	0xFF3
  9379                           intcon	equ	0xFF2
  9380                           postinc0	equ	0xFEE
  9381                           wreg	equ	0xFE8
  9382                           indf1	equ	0xFE7
  9383                           postinc1	equ	0xFE6
  9384                           fsr1h	equ	0xFE2
  9385                           fsr1l	equ	0xFE1
  9386                           indf2	equ	0xFDF
  9387                           postinc2	equ	0xFDE
  9388                           postdec2	equ	0xFDD
  9389                           plusw2	equ	0xFDB
  9390                           fsr2h	equ	0xFDA
  9391                           fsr2l	equ	0xFD9
  9392                           status	equ	0xFD8
  9393                           
  9394 ;; *************** function _TMR0_StopTimer *****************
  9395 ;; Defined at:
  9396 ;;		line 100 in file "mcc_generated_files/tmr0.c"
  9397 ;; Parameters:    Size  Location     Type
  9398 ;;		None
  9399 ;; Auto vars:     Size  Location     Type
  9400 ;;		None
  9401 ;; Return value:  Size  Location     Type
  9402 ;;                  1    wreg      void 
  9403 ;; Registers used:
  9404 ;;		None
  9405 ;; Tracked objects:
  9406 ;;		On entry : 0/0
  9407 ;;		On exit  : 0/0
  9408 ;;		Unchanged: 0/0
  9409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9414 ;;Total ram usage:        0 bytes
  9415 ;; Hardware stack levels used:    1
  9416 ;; Hardware stack levels required when called:    7
  9417 ;; This function calls:
  9418 ;;		Nothing
  9419 ;; This function is called by:
  9420 ;;		_hxStopTimer
  9421 ;; This function uses a non-reentrant model
  9422 ;;
  9423                           
  9424                           	psect	text31
  9425  002A4A                     __ptext31:
  9426                           	opt stack 0
  9427  002A4A                     _TMR0_StopTimer:
  9428                           	opt stack 21
  9429                           
  9430                           ;tmr0.c: 103: T0CON0bits.T0EN = 0;
  9431                           
  9432                           ; BSR set to: 0
  9433                           ;incstack = 0
  9434  002A4A  9ED5               	bcf	4053,7,c	;volatile
  9435  002A4C  0012               	return		;funcret
  9436  002A4E                     __end_of_TMR0_StopTimer:
  9437                           	opt stack 0
  9438                           tblptru	equ	0xFF8
  9439                           tblptrh	equ	0xFF7
  9440                           tblptrl	equ	0xFF6
  9441                           tablat	equ	0xFF5
  9442                           prodh	equ	0xFF4
  9443                           prodl	equ	0xFF3
  9444                           intcon	equ	0xFF2
  9445                           postinc0	equ	0xFEE
  9446                           wreg	equ	0xFE8
  9447                           indf1	equ	0xFE7
  9448                           postinc1	equ	0xFE6
  9449                           fsr1h	equ	0xFE2
  9450                           fsr1l	equ	0xFE1
  9451                           indf2	equ	0xFDF
  9452                           postinc2	equ	0xFDE
  9453                           postdec2	equ	0xFDD
  9454                           plusw2	equ	0xFDB
  9455                           fsr2h	equ	0xFDA
  9456                           fsr2l	equ	0xFD9
  9457                           status	equ	0xFD8
  9458                           
  9459 ;; *************** function _EUSART1_Write *****************
  9460 ;; Defined at:
  9461 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  9462 ;; Parameters:    Size  Location     Type
  9463 ;;  txData          1    wreg     unsigned char 
  9464 ;; Auto vars:     Size  Location     Type
  9465 ;;  txData          1   31[COMRAM] unsigned char 
  9466 ;; Return value:  Size  Location     Type
  9467 ;;                  1    wreg      void 
  9468 ;; Registers used:
  9469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9470 ;; Tracked objects:
  9471 ;;		On entry : 0/0
  9472 ;;		On exit  : 0/0
  9473 ;;		Unchanged: 0/0
  9474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9478 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9479 ;;Total ram usage:        1 bytes
  9480 ;; Hardware stack levels used:    1
  9481 ;; Hardware stack levels required when called:    7
  9482 ;; This function calls:
  9483 ;;		Nothing
  9484 ;; This function is called by:
  9485 ;;		_hxHandleTxUART
  9486 ;; This function uses a non-reentrant model
  9487 ;;
  9488                           
  9489                           	psect	text32
  9490  002604                     __ptext32:
  9491                           	opt stack 0
  9492  002604                     _EUSART1_Write:
  9493                           	opt stack 22
  9494                           
  9495                           ;incstack = 0
  9496                           ;EUSART1_Write@txData stored from wreg
  9497  002604  6E20               	movwf	EUSART1_Write@txData,c
  9498  002606                     l7577:
  9499  002606  0100               	movlb	0	; () banked
  9500  002608  51FF               	movf	_eusart1TxBufferRemaining& (0+255),w,b	;volatile
  9501  00260A  B4D8               	btfsc	status,2,c
  9502  00260C  D7FC               	goto	l7577
  9503                           
  9504                           ; BSR set to: 0
  9505                           ;eusart1.c: 136: }
  9506                           ;eusart1.c: 138: if(0 == PIE3bits.TX1IE)
  9507  00260E  010E               	movlb	14	; () banked
  9508  002610  B9C5               	btfsc	197,4,b	;volatile
  9509  002612  D003               	goto	l1266
  9510                           
  9511                           ; BSR set to: 14
  9512                           ;eusart1.c: 139: {
  9513                           ;eusart1.c: 140: TX1REG = txData;
  9514  002614  C020  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  9515                           
  9516                           ;eusart1.c: 141: }
  9517  002618  D014               	goto	l7591
  9518  00261A                     l1266:
  9519                           
  9520                           ; BSR set to: 14
  9521                           ;eusart1.c: 142: else
  9522                           ;eusart1.c: 143: {
  9523                           ;eusart1.c: 144: PIE3bits.TX1IE = 0;
  9524  00261A  010E               	movlb	14	; () banked
  9525  00261C  99C5               	bcf	197,4,b	;volatile
  9526                           
  9527                           ; BSR set to: 14
  9528                           ;eusart1.c: 145: eusart1TxBuffer[eusart1TxHead++] = txData;
  9529  00261E  5028               	movf	_eusart1TxHead,w,c
  9530  002620  0D01               	mullw	1
  9531  002622  0E00               	movlw	low _eusart1TxBuffer
  9532  002624  24F3               	addwf	prodl,w,c
  9533  002626  6ED9               	movwf	fsr2l,c
  9534  002628  0E02               	movlw	high _eusart1TxBuffer
  9535  00262A  20F4               	addwfc	prodh,w,c
  9536  00262C  6EDA               	movwf	fsr2h,c
  9537  00262E  C020  FFDF         	movff	EUSART1_Write@txData,indf2
  9538                           
  9539                           ; BSR set to: 14
  9540  002632  2A28               	incf	_eusart1TxHead,f,c
  9541                           
  9542                           ; BSR set to: 14
  9543                           ;eusart1.c: 146: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  9544  002634  0E3F               	movlw	63
  9545  002636  6428               	cpfsgt	_eusart1TxHead,c
  9546  002638  D002               	goto	l7589
  9547                           
  9548                           ; BSR set to: 14
  9549                           ;eusart1.c: 147: {
  9550                           ;eusart1.c: 148: eusart1TxHead = 0;
  9551  00263A  0E00               	movlw	0
  9552  00263C  6E28               	movwf	_eusart1TxHead,c
  9553  00263E                     l7589:
  9554                           
  9555                           ; BSR set to: 14
  9556                           ;eusart1.c: 149: }
  9557                           ;eusart1.c: 150: eusart1TxBufferRemaining--;
  9558  00263E  0100               	movlb	0	; () banked
  9559  002640  07FF               	decf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
  9560  002642                     l7591:
  9561                           
  9562                           ;eusart1.c: 151: }
  9563                           ;eusart1.c: 152: PIE3bits.TX1IE = 1;
  9564  002642  010E               	movlb	14	; () banked
  9565  002644  89C5               	bsf	197,4,b	;volatile
  9566                           
  9567                           ; BSR set to: 14
  9568  002646  0012               	return		;funcret
  9569  002648                     __end_of_EUSART1_Write:
  9570                           	opt stack 0
  9571                           tblptru	equ	0xFF8
  9572                           tblptrh	equ	0xFF7
  9573                           tblptrl	equ	0xFF6
  9574                           tablat	equ	0xFF5
  9575                           prodh	equ	0xFF4
  9576                           prodl	equ	0xFF3
  9577                           intcon	equ	0xFF2
  9578                           postinc0	equ	0xFEE
  9579                           wreg	equ	0xFE8
  9580                           indf1	equ	0xFE7
  9581                           postinc1	equ	0xFE6
  9582                           fsr1h	equ	0xFE2
  9583                           fsr1l	equ	0xFE1
  9584                           indf2	equ	0xFDF
  9585                           postinc2	equ	0xFDE
  9586                           postdec2	equ	0xFDD
  9587                           plusw2	equ	0xFDB
  9588                           fsr2h	equ	0xFDA
  9589                           fsr2l	equ	0xFD9
  9590                           status	equ	0xFD8
  9591                           
  9592 ;; *************** function _SYSTEM_Initialize *****************
  9593 ;; Defined at:
  9594 ;;		line 115 in file "mcc_generated_files/mcc.c"
  9595 ;; Parameters:    Size  Location     Type
  9596 ;;		None
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;		None
  9599 ;; Return value:  Size  Location     Type
  9600 ;;                  1    wreg      void 
  9601 ;; Registers used:
  9602 ;;		wreg, status,2, status,0, cstack
  9603 ;; Tracked objects:
  9604 ;;		On entry : 0/0
  9605 ;;		On exit  : 0/0
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9612 ;;Total ram usage:        0 bytes
  9613 ;; Hardware stack levels used:    1
  9614 ;; Hardware stack levels required when called:    9
  9615 ;; This function calls:
  9616 ;;		_EUSART1_Initialize
  9617 ;;		_I2C1_Initialize
  9618 ;;		_INTERRUPT_Initialize
  9619 ;;		_OSCILLATOR_Initialize
  9620 ;;		_PIN_MANAGER_Initialize
  9621 ;;		_TMR0_Initialize
  9622 ;; This function is called by:
  9623 ;;		_main
  9624 ;; This function uses a non-reentrant model
  9625 ;;
  9626                           
  9627                           	psect	text33
  9628  002964                     __ptext33:
  9629                           	opt stack 0
  9630  002964                     _SYSTEM_Initialize:
  9631                           	opt stack 21
  9632                           
  9633                           ;mcc.c: 118: INTERRUPT_Initialize();
  9634                           
  9635                           ; BSR set to: 14
  9636                           ;incstack = 0
  9637  002964  EC27  F015         	call	_INTERRUPT_Initialize	;wreg free
  9638                           
  9639                           ;mcc.c: 119: PIN_MANAGER_Initialize();
  9640  002968  EC59  F00E         	call	_PIN_MANAGER_Initialize	;wreg free
  9641                           
  9642                           ;mcc.c: 120: OSCILLATOR_Initialize();
  9643  00296C  EC78  F014         	call	_OSCILLATOR_Initialize	;wreg free
  9644                           
  9645                           ;mcc.c: 121: I2C1_Initialize();
  9646  002970  EC65  F013         	call	_I2C1_Initialize	;wreg free
  9647                           
  9648                           ;mcc.c: 122: TMR0_Initialize();
  9649  002974  EC94  F012         	call	_TMR0_Initialize	;wreg free
  9650                           
  9651                           ;mcc.c: 123: EUSART1_Initialize();
  9652  002978  EC24  F013         	call	_EUSART1_Initialize	;wreg free
  9653  00297C  0012               	return		;funcret
  9654  00297E                     __end_of_SYSTEM_Initialize:
  9655                           	opt stack 0
  9656                           tblptru	equ	0xFF8
  9657                           tblptrh	equ	0xFF7
  9658                           tblptrl	equ	0xFF6
  9659                           tablat	equ	0xFF5
  9660                           prodh	equ	0xFF4
  9661                           prodl	equ	0xFF3
  9662                           intcon	equ	0xFF2
  9663                           postinc0	equ	0xFEE
  9664                           wreg	equ	0xFE8
  9665                           indf1	equ	0xFE7
  9666                           postinc1	equ	0xFE6
  9667                           fsr1h	equ	0xFE2
  9668                           fsr1l	equ	0xFE1
  9669                           indf2	equ	0xFDF
  9670                           postinc2	equ	0xFDE
  9671                           postdec2	equ	0xFDD
  9672                           plusw2	equ	0xFDB
  9673                           fsr2h	equ	0xFDA
  9674                           fsr2l	equ	0xFD9
  9675                           status	equ	0xFD8
  9676                           
  9677 ;; *************** function _TMR0_Initialize *****************
  9678 ;; Defined at:
  9679 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  9680 ;; Parameters:    Size  Location     Type
  9681 ;;		None
  9682 ;; Auto vars:     Size  Location     Type
  9683 ;;		None
  9684 ;; Return value:  Size  Location     Type
  9685 ;;                  1    wreg      void 
  9686 ;; Registers used:
  9687 ;;		wreg, status,2, status,0, cstack
  9688 ;; Tracked objects:
  9689 ;;		On entry : 0/0
  9690 ;;		On exit  : 0/0
  9691 ;;		Unchanged: 0/0
  9692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9695 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9696 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9697 ;;Total ram usage:        2 bytes
  9698 ;; Hardware stack levels used:    1
  9699 ;; Hardware stack levels required when called:    8
  9700 ;; This function calls:
  9701 ;;		_TMR0_SetInterruptHandler
  9702 ;; This function is called by:
  9703 ;;		_SYSTEM_Initialize
  9704 ;; This function uses a non-reentrant model
  9705 ;;
  9706                           
  9707                           	psect	text34
  9708  002528                     __ptext34:
  9709                           	opt stack 0
  9710  002528                     _TMR0_Initialize:
  9711                           	opt stack 21
  9712                           
  9713                           ;tmr0.c: 70: T0CON0 = 0x10;
  9714                           
  9715                           ;incstack = 0
  9716  002528  0E10               	movlw	16
  9717  00252A  6ED5               	movwf	4053,c	;volatile
  9718                           
  9719                           ;tmr0.c: 73: T0CON1 = 0x68;
  9720  00252C  0E68               	movlw	104
  9721  00252E  6ED6               	movwf	4054,c	;volatile
  9722                           
  9723                           ;tmr0.c: 76: TMR0H = 0xF6;
  9724  002530  0EF6               	movlw	246
  9725  002532  6ED4               	movwf	4052,c	;volatile
  9726                           
  9727                           ;tmr0.c: 79: TMR0L = 0x3C;
  9728  002534  0E3C               	movlw	60
  9729  002536  6ED3               	movwf	4051,c	;volatile
  9730                           
  9731                           ;tmr0.c: 82: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  9732  002538  50D3               	movf	4051,w,c	;volatile
  9733  00253A  CFD4 F0C1          	movff	4052,??_TMR0_Initialize	;volatile
  9734  00253E  0100               	movlb	0	; () banked
  9735  002540  6BC2               	clrf	(??_TMR0_Initialize+1)& (0+255),b
  9736  002542  C0C1  F0C2         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  9737  002546  0100               	movlb	0	; () banked
  9738  002548  6BC1               	clrf	??_TMR0_Initialize& (0+255),b
  9739  00254A  0100               	movlb	0	; () banked
  9740  00254C  11C1               	iorwf	??_TMR0_Initialize& (0+255),w,b
  9741  00254E  6E3C               	movwf	_timer0ReloadVal16bit,c	;volatile
  9742  002550  0100               	movlb	0	; () banked
  9743  002552  51C2               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
  9744  002554  6E3D               	movwf	_timer0ReloadVal16bit+1,c	;volatile
  9745                           
  9746                           ; BSR set to: 0
  9747                           ;tmr0.c: 85: PIR0bits.TMR0IF = 0;
  9748  002556  010E               	movlb	14	; () banked
  9749  002558  9BCA               	bcf	202,5,b	;volatile
  9750                           
  9751                           ; BSR set to: 14
  9752                           ;tmr0.c: 88: PIE0bits.TMR0IE = 1;
  9753  00255A  010E               	movlb	14	; () banked
  9754  00255C  8BC2               	bsf	194,5,b	;volatile
  9755                           
  9756                           ; BSR set to: 14
  9757                           ;tmr0.c: 91: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  9758  00255E  0E44               	movlw	low _TMR0_DefaultInterruptHandler
  9759  002560  0100               	movlb	0	; () banked
  9760  002562  6FBE               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  9761  002564  0E2A               	movlw	high _TMR0_DefaultInterruptHandler
  9762  002566  0100               	movlb	0	; () banked
  9763  002568  6FBF               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9764  00256A  0E00               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
  9765  00256C  0100               	movlb	0	; () banked
  9766  00256E  6FC0               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  9767  002570  EC10  F015         	call	_TMR0_SetInterruptHandler	;wreg free
  9768  002574  0012               	return		;funcret
  9769  002576                     __end_of_TMR0_Initialize:
  9770                           	opt stack 0
  9771                           tblptru	equ	0xFF8
  9772                           tblptrh	equ	0xFF7
  9773                           tblptrl	equ	0xFF6
  9774                           tablat	equ	0xFF5
  9775                           prodh	equ	0xFF4
  9776                           prodl	equ	0xFF3
  9777                           intcon	equ	0xFF2
  9778                           postinc0	equ	0xFEE
  9779                           wreg	equ	0xFE8
  9780                           indf1	equ	0xFE7
  9781                           postinc1	equ	0xFE6
  9782                           fsr1h	equ	0xFE2
  9783                           fsr1l	equ	0xFE1
  9784                           indf2	equ	0xFDF
  9785                           postinc2	equ	0xFDE
  9786                           postdec2	equ	0xFDD
  9787                           plusw2	equ	0xFDB
  9788                           fsr2h	equ	0xFDA
  9789                           fsr2l	equ	0xFD9
  9790                           status	equ	0xFD8
  9791                           
  9792 ;; *************** function _TMR0_SetInterruptHandler *****************
  9793 ;; Defined at:
  9794 ;;		line 150 in file "mcc_generated_files/tmr0.c"
  9795 ;; Parameters:    Size  Location     Type
  9796 ;;  InterruptHan    3    0[BANK0 ] PTR void 
  9797 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  9798 ;; Auto vars:     Size  Location     Type
  9799 ;;		None
  9800 ;; Return value:  Size  Location     Type
  9801 ;;                  1    wreg      void 
  9802 ;; Registers used:
  9803 ;;		wreg, status,2, status,0
  9804 ;; Tracked objects:
  9805 ;;		On entry : 0/0
  9806 ;;		On exit  : 0/0
  9807 ;;		Unchanged: 0/0
  9808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9809 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9812 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9813 ;;Total ram usage:        3 bytes
  9814 ;; Hardware stack levels used:    1
  9815 ;; Hardware stack levels required when called:    7
  9816 ;; This function calls:
  9817 ;;		Nothing
  9818 ;; This function is called by:
  9819 ;;		_TMR0_Initialize
  9820 ;; This function uses a non-reentrant model
  9821 ;;
  9822                           
  9823                           	psect	text35
  9824  002A20                     __ptext35:
  9825                           	opt stack 0
  9826  002A20                     _TMR0_SetInterruptHandler:
  9827                           	opt stack 21
  9828                           
  9829                           ;tmr0.c: 151: TMR0_InterruptHandler = InterruptHandler;
  9830                           
  9831                           ;incstack = 0
  9832  002A20  C0BE  F0FC         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  9833  002A24  C0BF  F0FD         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  9834  002A28  C0C0  F0FE         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
  9835  002A2C  0012               	return		;funcret
  9836  002A2E                     __end_of_TMR0_SetInterruptHandler:
  9837                           	opt stack 0
  9838                           tblptru	equ	0xFF8
  9839                           tblptrh	equ	0xFF7
  9840                           tblptrl	equ	0xFF6
  9841                           tablat	equ	0xFF5
  9842                           prodh	equ	0xFF4
  9843                           prodl	equ	0xFF3
  9844                           intcon	equ	0xFF2
  9845                           postinc0	equ	0xFEE
  9846                           wreg	equ	0xFE8
  9847                           indf1	equ	0xFE7
  9848                           postinc1	equ	0xFE6
  9849                           fsr1h	equ	0xFE2
  9850                           fsr1l	equ	0xFE1
  9851                           indf2	equ	0xFDF
  9852                           postinc2	equ	0xFDE
  9853                           postdec2	equ	0xFDD
  9854                           plusw2	equ	0xFDB
  9855                           fsr2h	equ	0xFDA
  9856                           fsr2l	equ	0xFD9
  9857                           status	equ	0xFD8
  9858                           
  9859 ;; *************** function _PIN_MANAGER_Initialize *****************
  9860 ;; Defined at:
  9861 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;		None
  9864 ;; Auto vars:     Size  Location     Type
  9865 ;;  state           1   31[COMRAM] unsigned char 
  9866 ;; Return value:  Size  Location     Type
  9867 ;;                  1    wreg      void 
  9868 ;; Registers used:
  9869 ;;		wreg, status,2
  9870 ;; Tracked objects:
  9871 ;;		On entry : 0/0
  9872 ;;		On exit  : 0/0
  9873 ;;		Unchanged: 0/0
  9874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9878 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9879 ;;Total ram usage:        1 bytes
  9880 ;; Hardware stack levels used:    1
  9881 ;; Hardware stack levels required when called:    7
  9882 ;; This function calls:
  9883 ;;		Nothing
  9884 ;; This function is called by:
  9885 ;;		_SYSTEM_Initialize
  9886 ;; This function uses a non-reentrant model
  9887 ;;
  9888                           
  9889                           	psect	text36
  9890  001CB2                     __ptext36:
  9891                           	opt stack 0
  9892  001CB2                     _PIN_MANAGER_Initialize:
  9893                           	opt stack 22
  9894                           
  9895                           ;pin_manager.c: 56: LATE = 0x00;
  9896                           
  9897                           ;incstack = 0
  9898  001CB2  0E00               	movlw	0
  9899  001CB4  6E87               	movwf	3975,c	;volatile
  9900                           
  9901                           ;pin_manager.c: 57: LATD = 0x00;
  9902  001CB6  0E00               	movlw	0
  9903  001CB8  6E86               	movwf	3974,c	;volatile
  9904                           
  9905                           ;pin_manager.c: 58: LATA = 0x00;
  9906  001CBA  0E00               	movlw	0
  9907  001CBC  6E83               	movwf	3971,c	;volatile
  9908                           
  9909                           ;pin_manager.c: 59: LATB = 0x00;
  9910  001CBE  0E00               	movlw	0
  9911  001CC0  6E84               	movwf	3972,c	;volatile
  9912                           
  9913                           ;pin_manager.c: 60: LATC = 0x00;
  9914  001CC2  0E00               	movlw	0
  9915  001CC4  6E85               	movwf	3973,c	;volatile
  9916                           
  9917                           ;pin_manager.c: 65: TRISE = 0x07;
  9918  001CC6  0E07               	movlw	7
  9919  001CC8  6E8C               	movwf	3980,c	;volatile
  9920                           
  9921                           ;pin_manager.c: 66: TRISA = 0xF0;
  9922  001CCA  0EF0               	movlw	240
  9923  001CCC  6E88               	movwf	3976,c	;volatile
  9924                           
  9925                           ;pin_manager.c: 67: TRISB = 0xFD;
  9926  001CCE  0EFD               	movlw	253
  9927  001CD0  6E89               	movwf	3977,c	;volatile
  9928                           
  9929                           ;pin_manager.c: 68: TRISC = 0xFF;
  9930  001CD2  688A               	setf	3978,c	;volatile
  9931                           
  9932                           ;pin_manager.c: 69: TRISD = 0xFF;
  9933  001CD4  688B               	setf	3979,c	;volatile
  9934                           
  9935                           ;pin_manager.c: 74: ANSELC = 0xF9;
  9936  001CD6  0EF9               	movlw	249
  9937  001CD8  010F               	movlb	15	; () banked
  9938  001CDA  6F21               	movwf	33,b	;volatile
  9939                           
  9940                           ;pin_manager.c: 75: ANSELB = 0xFE;
  9941  001CDC  0EFE               	movlw	254
  9942  001CDE  010F               	movlb	15	; () banked
  9943  001CE0  6F19               	movwf	25,b	;volatile
  9944                           
  9945                           ; BSR set to: 15
  9946                           ;pin_manager.c: 76: ANSELD = 0xFF;
  9947  001CE2  010F               	movlb	15	; () banked
  9948  001CE4  6926               	setf	38,b	;volatile
  9949                           
  9950                           ;pin_manager.c: 77: ANSELE = 0x07;
  9951  001CE6  0E07               	movlw	7
  9952  001CE8  010F               	movlb	15	; () banked
  9953  001CEA  6F2E               	movwf	46,b	;volatile
  9954                           
  9955                           ;pin_manager.c: 78: ANSELA = 0x00;
  9956  001CEC  0E00               	movlw	0
  9957  001CEE  010F               	movlb	15	; () banked
  9958  001CF0  6F11               	movwf	17,b	;volatile
  9959                           
  9960                           ;pin_manager.c: 83: WPUD = 0x00;
  9961  001CF2  0E00               	movlw	0
  9962  001CF4  010F               	movlb	15	; () banked
  9963  001CF6  6F25               	movwf	37,b	;volatile
  9964                           
  9965                           ;pin_manager.c: 84: WPUE = 0x00;
  9966  001CF8  0E00               	movlw	0
  9967  001CFA  010F               	movlb	15	; () banked
  9968  001CFC  6F2D               	movwf	45,b	;volatile
  9969                           
  9970                           ;pin_manager.c: 85: WPUB = 0x00;
  9971  001CFE  0E00               	movlw	0
  9972  001D00  010F               	movlb	15	; () banked
  9973  001D02  6F18               	movwf	24,b	;volatile
  9974                           
  9975                           ;pin_manager.c: 86: WPUA = 0x00;
  9976  001D04  0E00               	movlw	0
  9977  001D06  010F               	movlb	15	; () banked
  9978  001D08  6F10               	movwf	16,b	;volatile
  9979                           
  9980                           ;pin_manager.c: 87: WPUC = 0x00;
  9981  001D0A  0E00               	movlw	0
  9982  001D0C  010F               	movlb	15	; () banked
  9983  001D0E  6F20               	movwf	32,b	;volatile
  9984                           
  9985                           ;pin_manager.c: 92: ODCONE = 0x00;
  9986  001D10  0E00               	movlw	0
  9987  001D12  010F               	movlb	15	; () banked
  9988  001D14  6F2C               	movwf	44,b	;volatile
  9989                           
  9990                           ;pin_manager.c: 93: ODCONA = 0x00;
  9991  001D16  0E00               	movlw	0
  9992  001D18  010F               	movlb	15	; () banked
  9993  001D1A  6F0F               	movwf	15,b	;volatile
  9994                           
  9995                           ;pin_manager.c: 94: ODCONB = 0x00;
  9996  001D1C  0E00               	movlw	0
  9997  001D1E  010F               	movlb	15	; () banked
  9998  001D20  6F17               	movwf	23,b	;volatile
  9999                           
 10000                           ;pin_manager.c: 95: ODCONC = 0x00;
 10001  001D22  0E00               	movlw	0
 10002  001D24  010F               	movlb	15	; () banked
 10003  001D26  6F1F               	movwf	31,b	;volatile
 10004                           
 10005                           ;pin_manager.c: 96: ODCOND = 0x00;
 10006  001D28  0E00               	movlw	0
 10007  001D2A  010F               	movlb	15	; () banked
 10008  001D2C  6F24               	movwf	36,b	;volatile
 10009                           
 10010                           ;pin_manager.c: 103: bool state = GIE;
 10011  001D2E  0E00               	movlw	0
 10012  001D30  BEF2               	btfsc	intcon,7,c	;volatile
 10013  001D32  0E01               	movlw	1
 10014  001D34  6E20               	movwf	PIN_MANAGER_Initialize@state,c
 10015                           
 10016                           ; BSR set to: 15
 10017                           ;pin_manager.c: 104: GIE = 0;
 10018  001D36  9EF2               	bcf	intcon,7,c	;volatile
 10019                           
 10020                           ;pin_manager.c: 105: PPSLOCK = 0x55;
 10021  001D38  0E55               	movlw	85
 10022  001D3A  010E               	movlb	14	; () banked
 10023  001D3C  6FA0               	movwf	160,b	;volatile
 10024                           
 10025                           ;pin_manager.c: 106: PPSLOCK = 0xAA;
 10026  001D3E  0EAA               	movlw	170
 10027  001D40  010E               	movlb	14	; () banked
 10028  001D42  6FA0               	movwf	160,b	;volatile
 10029                           
 10030                           ; BSR set to: 14
 10031                           ;pin_manager.c: 107: PPSLOCKbits.PPSLOCKED = 0x00;
 10032  001D44  010E               	movlb	14	; () banked
 10033  001D46  91A0               	bcf	160,0,b	;volatile
 10034                           
 10035                           ;pin_manager.c: 109: RB1PPS = 0x09;
 10036  001D48  0E09               	movlw	9
 10037  001D4A  010E               	movlb	14	; () banked
 10038  001D4C  6FF0               	movwf	240,b	;volatile
 10039                           
 10040                           ;pin_manager.c: 110: RC1PPS = 0x0F;
 10041  001D4E  0E0F               	movlw	15
 10042  001D50  010E               	movlb	14	; () banked
 10043  001D52  6FF8               	movwf	248,b	;volatile
 10044                           
 10045                           ;pin_manager.c: 111: RC2PPS = 0x10;
 10046  001D54  0E10               	movlw	16
 10047  001D56  010E               	movlb	14	; () banked
 10048  001D58  6FF9               	movwf	249,b	;volatile
 10049                           
 10050                           ; BSR set to: 14
 10051                           ;pin_manager.c: 112: RX1PPSbits.RXPPS = 0x08;
 10052  001D5A  010E               	movlb	14	; () banked
 10053  001D5C  91B5               	bcf	181,0,b	;volatile
 10054  001D5E  93B5               	bcf	181,1,b	;volatile
 10055  001D60  95B5               	bcf	181,2,b	;volatile
 10056  001D62  87B5               	bsf	181,3,b	;volatile
 10057  001D64  99B5               	bcf	181,4,b	;volatile
 10058                           
 10059                           ; BSR set to: 14
 10060                           ;pin_manager.c: 113: SSP1CLKPPSbits.SSPCLKPPS = 0x11;
 10061  001D66  010E               	movlb	14	; () banked
 10062  001D68  81B7               	bsf	183,0,b	;volatile
 10063  001D6A  93B7               	bcf	183,1,b	;volatile
 10064  001D6C  95B7               	bcf	183,2,b	;volatile
 10065  001D6E  97B7               	bcf	183,3,b	;volatile
 10066  001D70  89B7               	bsf	183,4,b	;volatile
 10067                           
 10068                           ; BSR set to: 14
 10069                           ;pin_manager.c: 114: SSP1DATPPSbits.SSPDATPPS = 0x12;
 10070  001D72  010E               	movlb	14	; () banked
 10071  001D74  91B8               	bcf	184,0,b	;volatile
 10072  001D76  83B8               	bsf	184,1,b	;volatile
 10073  001D78  95B8               	bcf	184,2,b	;volatile
 10074  001D7A  97B8               	bcf	184,3,b	;volatile
 10075  001D7C  89B8               	bsf	184,4,b	;volatile
 10076                           
 10077                           ;pin_manager.c: 116: PPSLOCK = 0x55;
 10078  001D7E  0E55               	movlw	85
 10079  001D80  010E               	movlb	14	; () banked
 10080  001D82  6FA0               	movwf	160,b	;volatile
 10081                           
 10082                           ;pin_manager.c: 117: PPSLOCK = 0xAA;
 10083  001D84  0EAA               	movlw	170
 10084  001D86  010E               	movlb	14	; () banked
 10085  001D88  6FA0               	movwf	160,b	;volatile
 10086                           
 10087                           ; BSR set to: 14
 10088                           ;pin_manager.c: 118: PPSLOCKbits.PPSLOCKED = 0x01;
 10089  001D8A  010E               	movlb	14	; () banked
 10090  001D8C  81A0               	bsf	160,0,b	;volatile
 10091                           
 10092                           ; BSR set to: 14
 10093                           ;pin_manager.c: 120: GIE = state;
 10094  001D8E  A020               	btfss	PIN_MANAGER_Initialize@state,0,c
 10095  001D90  D002               	goto	u4040
 10096  001D92  8EF2               	bsf	intcon,7,c	;volatile
 10097  001D94  0012               	return	
 10098  001D96                     u4040:
 10099  001D96  9EF2               	bcf	intcon,7,c	;volatile
 10100  001D98  0012               	return		;funcret
 10101  001D9A                     __end_of_PIN_MANAGER_Initialize:
 10102                           	opt stack 0
 10103                           tblptru	equ	0xFF8
 10104                           tblptrh	equ	0xFF7
 10105                           tblptrl	equ	0xFF6
 10106                           tablat	equ	0xFF5
 10107                           prodh	equ	0xFF4
 10108                           prodl	equ	0xFF3
 10109                           intcon	equ	0xFF2
 10110                           postinc0	equ	0xFEE
 10111                           wreg	equ	0xFE8
 10112                           indf1	equ	0xFE7
 10113                           postinc1	equ	0xFE6
 10114                           fsr1h	equ	0xFE2
 10115                           fsr1l	equ	0xFE1
 10116                           indf2	equ	0xFDF
 10117                           postinc2	equ	0xFDE
 10118                           postdec2	equ	0xFDD
 10119                           plusw2	equ	0xFDB
 10120                           fsr2h	equ	0xFDA
 10121                           fsr2l	equ	0xFD9
 10122                           status	equ	0xFD8
 10123                           
 10124 ;; *************** function _OSCILLATOR_Initialize *****************
 10125 ;; Defined at:
 10126 ;;		line 126 in file "mcc_generated_files/mcc.c"
 10127 ;; Parameters:    Size  Location     Type
 10128 ;;		None
 10129 ;; Auto vars:     Size  Location     Type
 10130 ;;		None
 10131 ;; Return value:  Size  Location     Type
 10132 ;;                  1    wreg      void 
 10133 ;; Registers used:
 10134 ;;		wreg, status,2
 10135 ;; Tracked objects:
 10136 ;;		On entry : 0/0
 10137 ;;		On exit  : 0/0
 10138 ;;		Unchanged: 0/0
 10139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10144 ;;Total ram usage:        0 bytes
 10145 ;; Hardware stack levels used:    1
 10146 ;; Hardware stack levels required when called:    7
 10147 ;; This function calls:
 10148 ;;		Nothing
 10149 ;; This function is called by:
 10150 ;;		_SYSTEM_Initialize
 10151 ;; This function uses a non-reentrant model
 10152 ;;
 10153                           
 10154                           	psect	text37
 10155  0028F0                     __ptext37:
 10156                           	opt stack 0
 10157  0028F0                     _OSCILLATOR_Initialize:
 10158                           	opt stack 22
 10159                           
 10160                           ;mcc.c: 129: OSCCON1 = 0x60;
 10161                           
 10162                           ;incstack = 0
 10163  0028F0  0E60               	movlw	96
 10164  0028F2  010E               	movlb	14	; () banked
 10165  0028F4  6FD8               	movwf	216,b	;volatile
 10166                           
 10167                           ;mcc.c: 131: OSCCON3 = 0x00;
 10168  0028F6  0E00               	movlw	0
 10169  0028F8  010E               	movlb	14	; () banked
 10170  0028FA  6FDA               	movwf	218,b	;volatile
 10171                           
 10172                           ;mcc.c: 133: OSCEN = 0x00;
 10173  0028FC  0E00               	movlw	0
 10174  0028FE  010E               	movlb	14	; () banked
 10175  002900  6FDC               	movwf	220,b	;volatile
 10176                           
 10177                           ;mcc.c: 135: OSCFRQ = 0x08;
 10178  002902  0E08               	movlw	8
 10179  002904  010E               	movlb	14	; () banked
 10180  002906  6FDE               	movwf	222,b	;volatile
 10181                           
 10182                           ;mcc.c: 137: OSCTUNE = 0x00;
 10183  002908  0E00               	movlw	0
 10184  00290A  010E               	movlb	14	; () banked
 10185  00290C  6FDD               	movwf	221,b	;volatile
 10186                           
 10187                           ; BSR set to: 14
 10188  00290E  0012               	return		;funcret
 10189  002910                     __end_of_OSCILLATOR_Initialize:
 10190                           	opt stack 0
 10191                           tblptru	equ	0xFF8
 10192                           tblptrh	equ	0xFF7
 10193                           tblptrl	equ	0xFF6
 10194                           tablat	equ	0xFF5
 10195                           prodh	equ	0xFF4
 10196                           prodl	equ	0xFF3
 10197                           intcon	equ	0xFF2
 10198                           postinc0	equ	0xFEE
 10199                           wreg	equ	0xFE8
 10200                           indf1	equ	0xFE7
 10201                           postinc1	equ	0xFE6
 10202                           fsr1h	equ	0xFE2
 10203                           fsr1l	equ	0xFE1
 10204                           indf2	equ	0xFDF
 10205                           postinc2	equ	0xFDE
 10206                           postdec2	equ	0xFDD
 10207                           plusw2	equ	0xFDB
 10208                           fsr2h	equ	0xFDA
 10209                           fsr2l	equ	0xFD9
 10210                           status	equ	0xFD8
 10211                           
 10212 ;; *************** function _INTERRUPT_Initialize *****************
 10213 ;; Defined at:
 10214 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 10215 ;; Parameters:    Size  Location     Type
 10216 ;;		None
 10217 ;; Auto vars:     Size  Location     Type
 10218 ;;		None
 10219 ;; Return value:  Size  Location     Type
 10220 ;;                  1    wreg      void 
 10221 ;; Registers used:
 10222 ;;		None
 10223 ;; Tracked objects:
 10224 ;;		On entry : 0/0
 10225 ;;		On exit  : 0/0
 10226 ;;		Unchanged: 0/0
 10227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10232 ;;Total ram usage:        0 bytes
 10233 ;; Hardware stack levels used:    1
 10234 ;; Hardware stack levels required when called:    7
 10235 ;; This function calls:
 10236 ;;		Nothing
 10237 ;; This function is called by:
 10238 ;;		_SYSTEM_Initialize
 10239 ;; This function uses a non-reentrant model
 10240 ;;
 10241                           
 10242                           	psect	text38
 10243  002A4E                     __ptext38:
 10244                           	opt stack 0
 10245  002A4E                     _INTERRUPT_Initialize:
 10246                           	opt stack 22
 10247                           
 10248                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 0;
 10249                           
 10250                           ; BSR set to: 14
 10251                           ;incstack = 0
 10252  002A4E  9AF2               	bcf	intcon,5,c	;volatile
 10253  002A50  0012               	return		;funcret
 10254  002A52                     __end_of_INTERRUPT_Initialize:
 10255                           	opt stack 0
 10256                           tblptru	equ	0xFF8
 10257                           tblptrh	equ	0xFF7
 10258                           tblptrl	equ	0xFF6
 10259                           tablat	equ	0xFF5
 10260                           prodh	equ	0xFF4
 10261                           prodl	equ	0xFF3
 10262                           intcon	equ	0xFF2
 10263                           postinc0	equ	0xFEE
 10264                           wreg	equ	0xFE8
 10265                           indf1	equ	0xFE7
 10266                           postinc1	equ	0xFE6
 10267                           fsr1h	equ	0xFE2
 10268                           fsr1l	equ	0xFE1
 10269                           indf2	equ	0xFDF
 10270                           postinc2	equ	0xFDE
 10271                           postdec2	equ	0xFDD
 10272                           plusw2	equ	0xFDB
 10273                           fsr2h	equ	0xFDA
 10274                           fsr2l	equ	0xFD9
 10275                           status	equ	0xFD8
 10276                           
 10277 ;; *************** function _I2C1_Initialize *****************
 10278 ;; Defined at:
 10279 ;;		line 198 in file "mcc_generated_files/i2c1.c"
 10280 ;; Parameters:    Size  Location     Type
 10281 ;;		None
 10282 ;; Auto vars:     Size  Location     Type
 10283 ;;		None
 10284 ;; Return value:  Size  Location     Type
 10285 ;;                  1    wreg      void 
 10286 ;; Registers used:
 10287 ;;		wreg, status,2, status,0
 10288 ;; Tracked objects:
 10289 ;;		On entry : 0/0
 10290 ;;		On exit  : 0/0
 10291 ;;		Unchanged: 0/0
 10292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10297 ;;Total ram usage:        0 bytes
 10298 ;; Hardware stack levels used:    1
 10299 ;; Hardware stack levels required when called:    7
 10300 ;; This function calls:
 10301 ;;		Nothing
 10302 ;; This function is called by:
 10303 ;;		_SYSTEM_Initialize
 10304 ;; This function uses a non-reentrant model
 10305 ;;
 10306                           
 10307                           	psect	text39
 10308  0026CA                     __ptext39:
 10309                           	opt stack 0
 10310  0026CA                     _I2C1_Initialize:
 10311                           	opt stack 22
 10312                           
 10313                           ;i2c1.c: 200: i2c1_object.pTrHead = i2c1_tr_queue;
 10314                           
 10315                           ;incstack = 0
 10316  0026CA  0EB9               	movlw	low _i2c1_tr_queue
 10317  0026CC  0100               	movlb	0	; () banked
 10318  0026CE  6F62               	movwf	(_i2c1_object+2)& (0+255),b
 10319  0026D0  0E00               	movlw	high _i2c1_tr_queue
 10320  0026D2  0100               	movlb	0	; () banked
 10321  0026D4  6F63               	movwf	(_i2c1_object+3)& (0+255),b
 10322                           
 10323                           ;i2c1.c: 201: i2c1_object.pTrTail = i2c1_tr_queue;
 10324  0026D6  0EB9               	movlw	low _i2c1_tr_queue
 10325  0026D8  0100               	movlb	0	; () banked
 10326  0026DA  6F60               	movwf	_i2c1_object& (0+255),b
 10327  0026DC  0E00               	movlw	high _i2c1_tr_queue
 10328  0026DE  0100               	movlb	0	; () banked
 10329  0026E0  6F61               	movwf	(_i2c1_object+1)& (0+255),b
 10330                           
 10331                           ; BSR set to: 0
 10332                           ;i2c1.c: 202: i2c1_object.trStatus.s.empty = 1;
 10333  0026E2  0100               	movlb	0	; () banked
 10334  0026E4  8364               	bsf	(_i2c1_object+4)& (0+255),1,b
 10335                           
 10336                           ; BSR set to: 0
 10337                           ;i2c1.c: 203: i2c1_object.trStatus.s.full = 0;
 10338  0026E6  0100               	movlb	0	; () banked
 10339  0026E8  9164               	bcf	(_i2c1_object+4)& (0+255),0,b
 10340                           
 10341                           ; BSR set to: 0
 10342                           ;i2c1.c: 205: i2c1_object.i2cErrors = 0;
 10343  0026EA  0E00               	movlw	0
 10344  0026EC  0100               	movlb	0	; () banked
 10345  0026EE  6F66               	movwf	(_i2c1_object+6)& (0+255),b
 10346                           
 10347                           ; BSR set to: 0
 10348                           ;i2c1.c: 208: SSP1STAT = 0x00;
 10349  0026F0  0E00               	movlw	0
 10350  0026F2  6E95               	movwf	3989,c	;volatile
 10351                           
 10352                           ; BSR set to: 0
 10353                           ;i2c1.c: 210: SSP1CON1 = 0x28;
 10354  0026F4  0E28               	movlw	40
 10355  0026F6  6E96               	movwf	3990,c	;volatile
 10356                           
 10357                           ; BSR set to: 0
 10358                           ;i2c1.c: 212: SSP1CON3 = 0x00;
 10359  0026F8  0E00               	movlw	0
 10360  0026FA  6E98               	movwf	3992,c	;volatile
 10361                           
 10362                           ; BSR set to: 0
 10363                           ;i2c1.c: 214: SSP1ADD = 0x9F;
 10364  0026FC  0E9F               	movlw	159
 10365  0026FE  6E93               	movwf	3987,c	;volatile
 10366                           
 10367                           ; BSR set to: 0
 10368                           ;i2c1.c: 218: PIR3bits.SSP1IF = 0;
 10369  002700  010E               	movlb	14	; () banked
 10370  002702  91CD               	bcf	205,0,b	;volatile
 10371                           
 10372                           ; BSR set to: 14
 10373                           ;i2c1.c: 220: PIE3bits.SSP1IE = 1;
 10374  002704  010E               	movlb	14	; () banked
 10375  002706  81C5               	bsf	197,0,b	;volatile
 10376                           
 10377                           ; BSR set to: 14
 10378  002708  0012               	return		;funcret
 10379  00270A                     __end_of_I2C1_Initialize:
 10380                           	opt stack 0
 10381                           tblptru	equ	0xFF8
 10382                           tblptrh	equ	0xFF7
 10383                           tblptrl	equ	0xFF6
 10384                           tablat	equ	0xFF5
 10385                           prodh	equ	0xFF4
 10386                           prodl	equ	0xFF3
 10387                           intcon	equ	0xFF2
 10388                           postinc0	equ	0xFEE
 10389                           wreg	equ	0xFE8
 10390                           indf1	equ	0xFE7
 10391                           postinc1	equ	0xFE6
 10392                           fsr1h	equ	0xFE2
 10393                           fsr1l	equ	0xFE1
 10394                           indf2	equ	0xFDF
 10395                           postinc2	equ	0xFDE
 10396                           postdec2	equ	0xFDD
 10397                           plusw2	equ	0xFDB
 10398                           fsr2h	equ	0xFDA
 10399                           fsr2l	equ	0xFD9
 10400                           status	equ	0xFD8
 10401                           
 10402 ;; *************** function _EUSART1_Initialize *****************
 10403 ;; Defined at:
 10404 ;;		line 75 in file "mcc_generated_files/eusart1.c"
 10405 ;; Parameters:    Size  Location     Type
 10406 ;;		None
 10407 ;; Auto vars:     Size  Location     Type
 10408 ;;		None
 10409 ;; Return value:  Size  Location     Type
 10410 ;;                  1    wreg      void 
 10411 ;; Registers used:
 10412 ;;		wreg, status,2
 10413 ;; Tracked objects:
 10414 ;;		On entry : 0/0
 10415 ;;		On exit  : 0/0
 10416 ;;		Unchanged: 0/0
 10417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10422 ;;Total ram usage:        0 bytes
 10423 ;; Hardware stack levels used:    1
 10424 ;; Hardware stack levels required when called:    7
 10425 ;; This function calls:
 10426 ;;		Nothing
 10427 ;; This function is called by:
 10428 ;;		_SYSTEM_Initialize
 10429 ;; This function uses a non-reentrant model
 10430 ;;
 10431                           
 10432                           	psect	text40
 10433  002648                     __ptext40:
 10434                           	opt stack 0
 10435  002648                     _EUSART1_Initialize:
 10436                           	opt stack 22
 10437                           
 10438                           ;eusart1.c: 78: PIE3bits.RC1IE = 0;
 10439                           
 10440                           ; BSR set to: 14
 10441                           ;incstack = 0
 10442  002648  010E               	movlb	14	; () banked
 10443  00264A  9BC5               	bcf	197,5,b	;volatile
 10444                           
 10445                           ;eusart1.c: 79: PIE3bits.TX1IE = 0;
 10446  00264C  010E               	movlb	14	; () banked
 10447  00264E  99C5               	bcf	197,4,b	;volatile
 10448                           
 10449                           ; BSR set to: 14
 10450                           ;eusart1.c: 84: BAUD1CON = 0x08;
 10451  002650  0E08               	movlw	8
 10452  002652  6E9F               	movwf	3999,c	;volatile
 10453                           
 10454                           ;eusart1.c: 87: RC1STA = 0x90;
 10455  002654  0E90               	movlw	144
 10456  002656  6E9D               	movwf	3997,c	;volatile
 10457                           
 10458                           ;eusart1.c: 90: TX1STA = 0x24;
 10459  002658  0E24               	movlw	36
 10460  00265A  6E9E               	movwf	3998,c	;volatile
 10461                           
 10462                           ;eusart1.c: 93: SP1BRGL = 0x82;
 10463  00265C  0E82               	movlw	130
 10464  00265E  6E9B               	movwf	3995,c	;volatile
 10465                           
 10466                           ;eusart1.c: 96: SP1BRGH = 0x06;
 10467  002660  0E06               	movlw	6
 10468  002662  6E9C               	movwf	3996,c	;volatile
 10469                           
 10470                           ;eusart1.c: 100: eusart1TxHead = 0;
 10471  002664  0E00               	movlw	0
 10472  002666  6E28               	movwf	_eusart1TxHead,c
 10473                           
 10474                           ;eusart1.c: 101: eusart1TxTail = 0;
 10475  002668  0E00               	movlw	0
 10476  00266A  6E27               	movwf	_eusart1TxTail,c
 10477                           
 10478                           ;eusart1.c: 102: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
 10479  00266C  0E40               	movlw	64
 10480  00266E  0100               	movlb	0	; () banked
 10481  002670  6FFF               	movwf	_eusart1TxBufferRemaining& (0+255),b	;volatile
 10482                           
 10483                           ;eusart1.c: 104: eusart1RxHead = 0;
 10484  002672  0E00               	movlw	0
 10485  002674  0100               	movlb	0	; () banked
 10486  002676  6F6B               	movwf	_eusart1RxHead& (0+255),b
 10487                           
 10488                           ;eusart1.c: 105: eusart1RxTail = 0;
 10489  002678  0E00               	movlw	0
 10490  00267A  0100               	movlb	0	; () banked
 10491  00267C  6F6A               	movwf	_eusart1RxTail& (0+255),b
 10492                           
 10493                           ;eusart1.c: 106: eusart1RxCount = 0;
 10494  00267E  0E00               	movlw	0
 10495  002680  0100               	movlb	0	; () banked
 10496  002682  6F69               	movwf	_eusart1RxCount& (0+255),b	;volatile
 10497                           
 10498                           ; BSR set to: 0
 10499                           ;eusart1.c: 109: PIE3bits.RC1IE = 1;
 10500  002684  010E               	movlb	14	; () banked
 10501  002686  8BC5               	bsf	197,5,b	;volatile
 10502                           
 10503                           ; BSR set to: 14
 10504  002688  0012               	return		;funcret
 10505  00268A                     __end_of_EUSART1_Initialize:
 10506                           	opt stack 0
 10507                           tblptru	equ	0xFF8
 10508                           tblptrh	equ	0xFF7
 10509                           tblptrl	equ	0xFF6
 10510                           tablat	equ	0xFF5
 10511                           prodh	equ	0xFF4
 10512                           prodl	equ	0xFF3
 10513                           intcon	equ	0xFF2
 10514                           postinc0	equ	0xFEE
 10515                           wreg	equ	0xFE8
 10516                           indf1	equ	0xFE7
 10517                           postinc1	equ	0xFE6
 10518                           fsr1h	equ	0xFE2
 10519                           fsr1l	equ	0xFE1
 10520                           indf2	equ	0xFDF
 10521                           postinc2	equ	0xFDE
 10522                           postdec2	equ	0xFDD
 10523                           plusw2	equ	0xFDB
 10524                           fsr2h	equ	0xFDA
 10525                           fsr2l	equ	0xFD9
 10526                           status	equ	0xFD8
 10527                           
 10528 ;; *************** function _HX_Initialize *****************
 10529 ;; Defined at:
 10530 ;;		line 18 in file "HX_CommInterface.c"
 10531 ;; Parameters:    Size  Location     Type
 10532 ;;		None
 10533 ;; Auto vars:     Size  Location     Type
 10534 ;;		None
 10535 ;; Return value:  Size  Location     Type
 10536 ;;                  1    wreg      void 
 10537 ;; Registers used:
 10538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10539 ;; Tracked objects:
 10540 ;;		On entry : 0/0
 10541 ;;		On exit  : 0/0
 10542 ;;		Unchanged: 0/0
 10543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10548 ;;Total ram usage:        0 bytes
 10549 ;; Hardware stack levels used:    1
 10550 ;; Hardware stack levels required when called:    9
 10551 ;; This function calls:
 10552 ;;		_hxFlushInputBuffer
 10553 ;;		_hxFlushMainDataBuffer
 10554 ;;		_hxFlushOutputBuffer
 10555 ;; This function is called by:
 10556 ;;		_main
 10557 ;; This function uses a non-reentrant model
 10558 ;;
 10559                           
 10560                           	psect	text41
 10561  002996                     __ptext41:
 10562                           	opt stack 0
 10563  002996                     _HX_Initialize:
 10564                           	opt stack 21
 10565                           
 10566                           ;HX_CommInterface.c: 20: hx_state = 0x10;
 10567                           
 10568                           ; BSR set to: 14
 10569                           ;incstack = 0
 10570  002996  0E10               	movlw	16
 10571  002998  6E3E               	movwf	_hx_state,c
 10572                           
 10573                           ;HX_CommInterface.c: 22: LATA = 0x03;
 10574  00299A  0E03               	movlw	3
 10575  00299C  6E83               	movwf	3971,c	;volatile
 10576                           
 10577                           ;HX_CommInterface.c: 23: hxFlushInputBuffer();
 10578  00299E  EC67  F014         	call	_hxFlushInputBuffer	;wreg free
 10579                           
 10580                           ;HX_CommInterface.c: 24: hxFlushOutputBuffer();
 10581  0029A2  EC88  F014         	call	_hxFlushOutputBuffer	;wreg free
 10582                           
 10583                           ;HX_CommInterface.c: 25: hxFlushMainDataBuffer();
 10584  0029A6  EC96  F014         	call	_hxFlushMainDataBuffer	;wreg free
 10585  0029AA  0012               	return		;funcret
 10586  0029AC                     __end_of_HX_Initialize:
 10587                           	opt stack 0
 10588                           tblptru	equ	0xFF8
 10589                           tblptrh	equ	0xFF7
 10590                           tblptrl	equ	0xFF6
 10591                           tablat	equ	0xFF5
 10592                           prodh	equ	0xFF4
 10593                           prodl	equ	0xFF3
 10594                           intcon	equ	0xFF2
 10595                           postinc0	equ	0xFEE
 10596                           wreg	equ	0xFE8
 10597                           indf1	equ	0xFE7
 10598                           postinc1	equ	0xFE6
 10599                           fsr1h	equ	0xFE2
 10600                           fsr1l	equ	0xFE1
 10601                           indf2	equ	0xFDF
 10602                           postinc2	equ	0xFDE
 10603                           postdec2	equ	0xFDD
 10604                           plusw2	equ	0xFDB
 10605                           fsr2h	equ	0xFDA
 10606                           fsr2l	equ	0xFD9
 10607                           status	equ	0xFD8
 10608                           
 10609 ;; *************** function _hxFlushOutputBuffer *****************
 10610 ;; Defined at:
 10611 ;;		line 279 in file "HX_CommInterface.c"
 10612 ;; Parameters:    Size  Location     Type
 10613 ;;		None
 10614 ;; Auto vars:     Size  Location     Type
 10615 ;;		None
 10616 ;; Return value:  Size  Location     Type
 10617 ;;                  1    wreg      void 
 10618 ;; Registers used:
 10619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10620 ;; Tracked objects:
 10621 ;;		On entry : 0/0
 10622 ;;		On exit  : 0/0
 10623 ;;		Unchanged: 0/0
 10624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10629 ;;Total ram usage:        0 bytes
 10630 ;; Hardware stack levels used:    1
 10631 ;; Hardware stack levels required when called:    8
 10632 ;; This function calls:
 10633 ;;		_hxClearArray
 10634 ;; This function is called by:
 10635 ;;		_HX_Initialize
 10636 ;;		_hxHandleTxUART
 10637 ;; This function uses a non-reentrant model
 10638 ;;
 10639                           
 10640                           	psect	text42
 10641  002910                     __ptext42:
 10642                           	opt stack 0
 10643  002910                     _hxFlushOutputBuffer:
 10644                           	opt stack 21
 10645                           
 10646                           ;HX_CommInterface.c: 281: hxClearArray(hx_outData, 64);
 10647                           
 10648                           ;incstack = 0
 10649  002910  0EA0               	movlw	low _hx_outData
 10650  002912  0100               	movlb	0	; () banked
 10651  002914  6FBE               	movwf	hxClearArray@arr& (0+255),b
 10652  002916  0E02               	movlw	high _hx_outData
 10653  002918  0100               	movlb	0	; () banked
 10654  00291A  6FBF               	movwf	(hxClearArray@arr+1)& (0+255),b
 10655  00291C  0E40               	movlw	64
 10656  00291E  0100               	movlb	0	; () banked
 10657  002920  6FC0               	movwf	hxClearArray@size& (0+255),b
 10658  002922  EC2D  F014         	call	_hxClearArray	;wreg free
 10659                           
 10660                           ;HX_CommInterface.c: 282: hx_outDataIndex = 2;
 10661  002926  0E02               	movlw	2
 10662  002928  6E39               	movwf	_hx_outDataIndex,c
 10663  00292A  0012               	return		;funcret
 10664  00292C                     __end_of_hxFlushOutputBuffer:
 10665                           	opt stack 0
 10666                           tblptru	equ	0xFF8
 10667                           tblptrh	equ	0xFF7
 10668                           tblptrl	equ	0xFF6
 10669                           tablat	equ	0xFF5
 10670                           prodh	equ	0xFF4
 10671                           prodl	equ	0xFF3
 10672                           intcon	equ	0xFF2
 10673                           postinc0	equ	0xFEE
 10674                           wreg	equ	0xFE8
 10675                           indf1	equ	0xFE7
 10676                           postinc1	equ	0xFE6
 10677                           fsr1h	equ	0xFE2
 10678                           fsr1l	equ	0xFE1
 10679                           indf2	equ	0xFDF
 10680                           postinc2	equ	0xFDE
 10681                           postdec2	equ	0xFDD
 10682                           plusw2	equ	0xFDB
 10683                           fsr2h	equ	0xFDA
 10684                           fsr2l	equ	0xFD9
 10685                           status	equ	0xFD8
 10686                           
 10687 ;; *************** function _hxFlushMainDataBuffer *****************
 10688 ;; Defined at:
 10689 ;;		line 285 in file "HX_CommInterface.c"
 10690 ;; Parameters:    Size  Location     Type
 10691 ;;		None
 10692 ;; Auto vars:     Size  Location     Type
 10693 ;;		None
 10694 ;; Return value:  Size  Location     Type
 10695 ;;                  1    wreg      void 
 10696 ;; Registers used:
 10697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10698 ;; Tracked objects:
 10699 ;;		On entry : 0/0
 10700 ;;		On exit  : 0/0
 10701 ;;		Unchanged: 0/0
 10702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10707 ;;Total ram usage:        0 bytes
 10708 ;; Hardware stack levels used:    1
 10709 ;; Hardware stack levels required when called:    8
 10710 ;; This function calls:
 10711 ;;		_hxClearArray
 10712 ;; This function is called by:
 10713 ;;		_HX_Initialize
 10714 ;; This function uses a non-reentrant model
 10715 ;;
 10716                           
 10717                           	psect	text43
 10718  00292C                     __ptext43:
 10719                           	opt stack 0
 10720  00292C                     _hxFlushMainDataBuffer:
 10721                           	opt stack 21
 10722                           
 10723                           ;HX_CommInterface.c: 287: hxClearArray(hx_mainData, 61);
 10724                           
 10725                           ;incstack = 0
 10726  00292C  0E72               	movlw	low _hx_mainData
 10727  00292E  0100               	movlb	0	; () banked
 10728  002930  6FBE               	movwf	hxClearArray@arr& (0+255),b
 10729  002932  0E00               	movlw	high _hx_mainData
 10730  002934  0100               	movlb	0	; () banked
 10731  002936  6FBF               	movwf	(hxClearArray@arr+1)& (0+255),b
 10732  002938  0E3D               	movlw	61
 10733  00293A  0100               	movlb	0	; () banked
 10734  00293C  6FC0               	movwf	hxClearArray@size& (0+255),b
 10735  00293E  EC2D  F014         	call	_hxClearArray	;wreg free
 10736                           
 10737                           ;HX_CommInterface.c: 288: hx_mainDataIndex = 0;
 10738  002942  0E00               	movlw	0
 10739  002944  6E38               	movwf	_hx_mainDataIndex,c
 10740  002946  0012               	return		;funcret
 10741  002948                     __end_of_hxFlushMainDataBuffer:
 10742                           	opt stack 0
 10743                           tblptru	equ	0xFF8
 10744                           tblptrh	equ	0xFF7
 10745                           tblptrl	equ	0xFF6
 10746                           tablat	equ	0xFF5
 10747                           prodh	equ	0xFF4
 10748                           prodl	equ	0xFF3
 10749                           intcon	equ	0xFF2
 10750                           postinc0	equ	0xFEE
 10751                           wreg	equ	0xFE8
 10752                           indf1	equ	0xFE7
 10753                           postinc1	equ	0xFE6
 10754                           fsr1h	equ	0xFE2
 10755                           fsr1l	equ	0xFE1
 10756                           indf2	equ	0xFDF
 10757                           postinc2	equ	0xFDE
 10758                           postdec2	equ	0xFDD
 10759                           plusw2	equ	0xFDB
 10760                           fsr2h	equ	0xFDA
 10761                           fsr2l	equ	0xFD9
 10762                           status	equ	0xFD8
 10763                           
 10764 ;; *************** function _hxFlushInputBuffer *****************
 10765 ;; Defined at:
 10766 ;;		line 272 in file "HX_CommInterface.c"
 10767 ;; Parameters:    Size  Location     Type
 10768 ;;		None
 10769 ;; Auto vars:     Size  Location     Type
 10770 ;;		None
 10771 ;; Return value:  Size  Location     Type
 10772 ;;                  1    wreg      void 
 10773 ;; Registers used:
 10774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10775 ;; Tracked objects:
 10776 ;;		On entry : 0/0
 10777 ;;		On exit  : 0/0
 10778 ;;		Unchanged: 0/0
 10779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10784 ;;Total ram usage:        0 bytes
 10785 ;; Hardware stack levels used:    1
 10786 ;; Hardware stack levels required when called:    8
 10787 ;; This function calls:
 10788 ;;		_hxClearArray
 10789 ;; This function is called by:
 10790 ;;		_HX_Initialize
 10791 ;; This function uses a non-reentrant model
 10792 ;;
 10793                           
 10794                           	psect	text44
 10795  0028CE                     __ptext44:
 10796                           	opt stack 0
 10797  0028CE                     _hxFlushInputBuffer:
 10798                           	opt stack 21
 10799                           
 10800                           ;HX_CommInterface.c: 274: hxClearArray(hx_inData, 64);
 10801                           
 10802                           ;incstack = 0
 10803  0028CE  0E60               	movlw	low _hx_inData
 10804  0028D0  0100               	movlb	0	; () banked
 10805  0028D2  6FBE               	movwf	hxClearArray@arr& (0+255),b
 10806  0028D4  0E02               	movlw	high _hx_inData
 10807  0028D6  0100               	movlb	0	; () banked
 10808  0028D8  6FBF               	movwf	(hxClearArray@arr+1)& (0+255),b
 10809  0028DA  0E40               	movlw	64
 10810  0028DC  0100               	movlb	0	; () banked
 10811  0028DE  6FC0               	movwf	hxClearArray@size& (0+255),b
 10812  0028E0  EC2D  F014         	call	_hxClearArray	;wreg free
 10813                           
 10814                           ;HX_CommInterface.c: 275: hx_inDataIndex = 0;
 10815  0028E4  0E00               	movlw	0
 10816  0028E6  6E37               	movwf	_hx_inDataIndex,c
 10817                           
 10818                           ;HX_CommInterface.c: 276: hx_pktCmd = 0;
 10819  0028E8  0E00               	movlw	0
 10820  0028EA  0100               	movlb	0	; () banked
 10821  0028EC  6F71               	movwf	_hx_pktCmd& (0+255),b
 10822                           
 10823                           ; BSR set to: 0
 10824  0028EE  0012               	return		;funcret
 10825  0028F0                     __end_of_hxFlushInputBuffer:
 10826                           	opt stack 0
 10827                           tblptru	equ	0xFF8
 10828                           tblptrh	equ	0xFF7
 10829                           tblptrl	equ	0xFF6
 10830                           tablat	equ	0xFF5
 10831                           prodh	equ	0xFF4
 10832                           prodl	equ	0xFF3
 10833                           intcon	equ	0xFF2
 10834                           postinc0	equ	0xFEE
 10835                           wreg	equ	0xFE8
 10836                           indf1	equ	0xFE7
 10837                           postinc1	equ	0xFE6
 10838                           fsr1h	equ	0xFE2
 10839                           fsr1l	equ	0xFE1
 10840                           indf2	equ	0xFDF
 10841                           postinc2	equ	0xFDE
 10842                           postdec2	equ	0xFDD
 10843                           plusw2	equ	0xFDB
 10844                           fsr2h	equ	0xFDA
 10845                           fsr2l	equ	0xFD9
 10846                           status	equ	0xFD8
 10847                           
 10848 ;; *************** function _hxClearArray *****************
 10849 ;; Defined at:
 10850 ;;		line 302 in file "HX_CommInterface.c"
 10851 ;; Parameters:    Size  Location     Type
 10852 ;;  arr             2    0[BANK0 ] PTR unsigned char 
 10853 ;;		 -> hx_outData(64), hx_mainData(61), hx_inData(64), 
 10854 ;;  size            1    2[BANK0 ] unsigned char 
 10855 ;; Auto vars:     Size  Location     Type
 10856 ;;  i               1   31[COMRAM] unsigned char 
 10857 ;; Return value:  Size  Location     Type
 10858 ;;                  1    wreg      void 
 10859 ;; Registers used:
 10860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10861 ;; Tracked objects:
 10862 ;;		On entry : 0/0
 10863 ;;		On exit  : 0/0
 10864 ;;		Unchanged: 0/0
 10865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10866 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10867 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10869 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10870 ;;Total ram usage:        4 bytes
 10871 ;; Hardware stack levels used:    1
 10872 ;; Hardware stack levels required when called:    7
 10873 ;; This function calls:
 10874 ;;		Nothing
 10875 ;; This function is called by:
 10876 ;;		_hxFlushInputBuffer
 10877 ;;		_hxFlushOutputBuffer
 10878 ;;		_hxFlushMainDataBuffer
 10879 ;; This function uses a non-reentrant model
 10880 ;;
 10881                           
 10882                           	psect	text45
 10883  00285A                     __ptext45:
 10884                           	opt stack 0
 10885  00285A                     _hxClearArray:
 10886                           	opt stack 21
 10887                           
 10888                           ;HX_CommInterface.c: 304: for(uint8_t i = 0; i < size; i++)
 10889                           
 10890                           ; BSR set to: 0
 10891                           ;incstack = 0
 10892  00285A  0E00               	movlw	0
 10893  00285C  6E20               	movwf	hxClearArray@i,c
 10894  00285E  D00D               	goto	l7121
 10895  002860                     l7117:
 10896                           
 10897                           ;HX_CommInterface.c: 305: {
 10898                           ;HX_CommInterface.c: 306: arr[i] = 0;
 10899  002860  5020               	movf	hxClearArray@i,w,c
 10900  002862  0D01               	mullw	1
 10901  002864  50F3               	movf	prodl,w,c
 10902  002866  0100               	movlb	0	; () banked
 10903  002868  25BE               	addwf	hxClearArray@arr& (0+255),w,b
 10904  00286A  6ED9               	movwf	fsr2l,c
 10905  00286C  50F4               	movf	prodh,w,c
 10906  00286E  0100               	movlb	0	; () banked
 10907  002870  21BF               	addwfc	(hxClearArray@arr+1)& (0+255),w,b
 10908  002872  6EDA               	movwf	fsr2h,c
 10909  002874  0E00               	movlw	0
 10910  002876  6EDF               	movwf	indf2,c
 10911                           
 10912                           ; BSR set to: 0
 10913  002878  2A20               	incf	hxClearArray@i,f,c
 10914  00287A                     l7121:
 10915  00287A  0100               	movlb	0	; () banked
 10916  00287C  51C0               	movf	hxClearArray@size& (0+255),w,b
 10917  00287E  5C20               	subwf	hxClearArray@i,w,c
 10918  002880  B0D8               	btfsc	status,0,c
 10919  002882  0012               	return	
 10920  002884  D7ED               	goto	l7117
 10921  002886                     __end_of_hxClearArray:
 10922                           	opt stack 0
 10923                           tblptru	equ	0xFF8
 10924                           tblptrh	equ	0xFF7
 10925                           tblptrl	equ	0xFF6
 10926                           tablat	equ	0xFF5
 10927                           prodh	equ	0xFF4
 10928                           prodl	equ	0xFF3
 10929                           intcon	equ	0xFF2
 10930                           postinc0	equ	0xFEE
 10931                           wreg	equ	0xFE8
 10932                           indf1	equ	0xFE7
 10933                           postinc1	equ	0xFE6
 10934                           fsr1h	equ	0xFE2
 10935                           fsr1l	equ	0xFE1
 10936                           indf2	equ	0xFDF
 10937                           postinc2	equ	0xFDE
 10938                           postdec2	equ	0xFDD
 10939                           plusw2	equ	0xFDB
 10940                           fsr2h	equ	0xFDA
 10941                           fsr2l	equ	0xFD9
 10942                           status	equ	0xFD8
 10943                           
 10944 ;; *************** function _INTERRUPT_InterruptManager *****************
 10945 ;; Defined at:
 10946 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
 10947 ;; Parameters:    Size  Location     Type
 10948 ;;		None
 10949 ;; Auto vars:     Size  Location     Type
 10950 ;;		None
 10951 ;; Return value:  Size  Location     Type
 10952 ;;                  1    wreg      void 
 10953 ;; Registers used:
 10954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10955 ;; Tracked objects:
 10956 ;;		On entry : 0/0
 10957 ;;		On exit  : 0/0
 10958 ;;		Unchanged: 0/0
 10959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10962 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10963 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10964 ;;Total ram usage:       14 bytes
 10965 ;; Hardware stack levels used:    1
 10966 ;; Hardware stack levels required when called:    6
 10967 ;; This function calls:
 10968 ;;		_EUSART1_Receive_ISR
 10969 ;;		_EUSART1_Transmit_ISR
 10970 ;;		_I2C1_BusCollisionISR
 10971 ;;		_I2C1_ISR
 10972 ;;		_TMR0_ISR
 10973 ;; This function is called by:
 10974 ;;		Interrupt level 2
 10975 ;; This function uses a non-reentrant model
 10976 ;;
 10977                           
 10978                           	psect	intcode
 10979  000008                     __pintcode:
 10980                           	opt stack 0
 10981  000008                     _INTERRUPT_InterruptManager:
 10982                           	opt stack 18
 10983                           
 10984                           ; BSR set to: 0
 10985                           ;incstack = 0
 10986  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10987  00000A  CFFA F012          	movff	pclath,??_INTERRUPT_InterruptManager
 10988  00000E  CFFB F013          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10989  000012  CFE9 F014          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 10990  000016  CFEA F015          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 10991  00001A  CFE1 F016          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 10992  00001E  CFE2 F017          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 10993  000022  CFD9 F018          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 10994  000026  CFDA F019          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 10995  00002A  CFF3 F01A          	movff	prodl,??_INTERRUPT_InterruptManager+8
 10996  00002E  CFF4 F01B          	movff	prodh,??_INTERRUPT_InterruptManager+9
 10997  000032  CFF6 F01C          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 10998  000036  CFF7 F01D          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 10999  00003A  CFF8 F01E          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 11000  00003E  CFF5 F01F          	movff	tablat,??_INTERRUPT_InterruptManager+13
 11001                           
 11002                           ;interrupt_manager.c: 60: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 11003  000042  010E               	movlb	14	; () banked
 11004  000044  ABC2               	btfss	194,5,b	;volatile
 11005  000046  D006               	goto	i2l1114
 11006                           
 11007                           ; BSR set to: 14
 11008  000048  010E               	movlb	14	; () banked
 11009  00004A  ABCA               	btfss	202,5,b	;volatile
 11010  00004C  D003               	goto	i2l1114
 11011                           
 11012                           ; BSR set to: 14
 11013                           ;interrupt_manager.c: 61: {
 11014                           ;interrupt_manager.c: 62: TMR0_ISR();
 11015  00004E  ECE1  F013         	call	_TMR0_ISR	;wreg free
 11016                           
 11017                           ;interrupt_manager.c: 63: }
 11018  000052  D02A               	goto	i2l1124
 11019  000054                     i2l1114:
 11020                           
 11021                           ; BSR set to: 14
 11022                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE3bits.BCL1IE == 1 && PIR3bi
      +                          ts.BCL1IF == 1)
 11023  000054  ACF2               	btfss	intcon,6,c	;volatile
 11024  000056  D009               	goto	i2l1116
 11025                           
 11026                           ; BSR set to: 14
 11027  000058  010E               	movlb	14	; () banked
 11028  00005A  A3C5               	btfss	197,1,b	;volatile
 11029  00005C  D006               	goto	i2l1116
 11030                           
 11031                           ; BSR set to: 14
 11032  00005E  010E               	movlb	14	; () banked
 11033  000060  A3CD               	btfss	205,1,b	;volatile
 11034  000062  D003               	goto	i2l1116
 11035                           
 11036                           ; BSR set to: 14
 11037                           ;interrupt_manager.c: 65: {
 11038                           ;interrupt_manager.c: 66: I2C1_BusCollisionISR();
 11039  000064  EC2F  F015         	call	_I2C1_BusCollisionISR	;wreg free
 11040                           
 11041                           ;interrupt_manager.c: 67: }
 11042  000068  D01F               	goto	i2l1124
 11043  00006A                     i2l1116:
 11044                           
 11045                           ; BSR set to: 14
 11046                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE3bits.SSP1IE == 1 && PIR3bi
      +                          ts.SSP1IF == 1)
 11047  00006A  ACF2               	btfss	intcon,6,c	;volatile
 11048  00006C  D009               	goto	i2l1118
 11049                           
 11050                           ; BSR set to: 14
 11051  00006E  010E               	movlb	14	; () banked
 11052  000070  A1C5               	btfss	197,0,b	;volatile
 11053  000072  D006               	goto	i2l1118
 11054                           
 11055                           ; BSR set to: 14
 11056  000074  010E               	movlb	14	; () banked
 11057  000076  A1CD               	btfss	205,0,b	;volatile
 11058  000078  D003               	goto	i2l1118
 11059                           
 11060                           ; BSR set to: 14
 11061                           ;interrupt_manager.c: 69: {
 11062                           ;interrupt_manager.c: 70: I2C1_ISR();
 11063  00007A  ECA6  F009         	call	_I2C1_ISR	;wreg free
 11064                           
 11065                           ;interrupt_manager.c: 71: }
 11066  00007E  D014               	goto	i2l1124
 11067  000080                     i2l1118:
 11068                           
 11069                           ; BSR set to: 14
 11070                           ;interrupt_manager.c: 72: else if(INTCONbits.PEIE == 1 && PIE3bits.TX1IE == 1 && PIR3bit
      +                          s.TX1IF == 1)
 11071  000080  ACF2               	btfss	intcon,6,c	;volatile
 11072  000082  D009               	goto	i2l1120
 11073                           
 11074                           ; BSR set to: 14
 11075  000084  010E               	movlb	14	; () banked
 11076  000086  A9C5               	btfss	197,4,b	;volatile
 11077  000088  D006               	goto	i2l1120
 11078                           
 11079                           ; BSR set to: 14
 11080  00008A  010E               	movlb	14	; () banked
 11081  00008C  A9CD               	btfss	205,4,b	;volatile
 11082  00008E  D003               	goto	i2l1120
 11083                           
 11084                           ; BSR set to: 14
 11085                           ;interrupt_manager.c: 73: {
 11086                           ;interrupt_manager.c: 74: EUSART1_Transmit_ISR();
 11087  000090  ECFC  F013         	call	_EUSART1_Transmit_ISR	;wreg free
 11088                           
 11089                           ;interrupt_manager.c: 75: }
 11090  000094  D009               	goto	i2l1124
 11091  000096                     i2l1120:
 11092                           
 11093                           ; BSR set to: 14
 11094                           ;interrupt_manager.c: 76: else if(INTCONbits.PEIE == 1 && PIE3bits.RC1IE == 1 && PIR3bit
      +                          s.RC1IF == 1)
 11095  000096  ACF2               	btfss	intcon,6,c	;volatile
 11096  000098  D007               	goto	i2l1124
 11097                           
 11098                           ; BSR set to: 14
 11099  00009A  010E               	movlb	14	; () banked
 11100  00009C  ABC5               	btfss	197,5,b	;volatile
 11101  00009E  D004               	goto	i2l1124
 11102                           
 11103                           ; BSR set to: 14
 11104  0000A0  010E               	movlb	14	; () banked
 11105  0000A2  BBCD               	btfsc	205,5,b	;volatile
 11106                           
 11107                           ; BSR set to: 14
 11108                           ;interrupt_manager.c: 77: {
 11109                           ;interrupt_manager.c: 78: EUSART1_Receive_ISR();
 11110  0000A4  EC08  F015         	call	_EUSART1_Receive_ISR	;wreg free
 11111  0000A8                     i2l1124:
 11112  0000A8  C01F  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 11113  0000AC  C01E  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 11114  0000B0  C01D  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 11115  0000B4  C01C  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 11116  0000B8  C01B  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 11117  0000BC  C01A  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 11118  0000C0  C019  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 11119  0000C4  C018  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 11120  0000C8  C017  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 11121  0000CC  C016  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 11122  0000D0  C015  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 11123  0000D4  C014  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 11124  0000D8  C013  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 11125  0000DC  C012  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 11126  0000E0  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11127  0000E2  0011               	retfie		f
 11128  0000E4                     __end_of_INTERRUPT_InterruptManager:
 11129                           	opt stack 0
 11130                           pclatu	equ	0xFFB
 11131                           pclath	equ	0xFFA
 11132                           tblptru	equ	0xFF8
 11133                           tblptrh	equ	0xFF7
 11134                           tblptrl	equ	0xFF6
 11135                           tablat	equ	0xFF5
 11136                           prodh	equ	0xFF4
 11137                           prodl	equ	0xFF3
 11138                           intcon	equ	0xFF2
 11139                           postinc0	equ	0xFEE
 11140                           fsr0h	equ	0xFEA
 11141                           fsr0l	equ	0xFE9
 11142                           wreg	equ	0xFE8
 11143                           indf1	equ	0xFE7
 11144                           postinc1	equ	0xFE6
 11145                           fsr1h	equ	0xFE2
 11146                           fsr1l	equ	0xFE1
 11147                           indf2	equ	0xFDF
 11148                           postinc2	equ	0xFDE
 11149                           postdec2	equ	0xFDD
 11150                           plusw2	equ	0xFDB
 11151                           fsr2h	equ	0xFDA
 11152                           fsr2l	equ	0xFD9
 11153                           status	equ	0xFD8
 11154                           
 11155 ;; *************** function _TMR0_ISR *****************
 11156 ;; Defined at:
 11157 ;;		line 133 in file "mcc_generated_files/tmr0.c"
 11158 ;; Parameters:    Size  Location     Type
 11159 ;;		None
 11160 ;; Auto vars:     Size  Location     Type
 11161 ;;		None
 11162 ;; Return value:  Size  Location     Type
 11163 ;;                  1    wreg      void 
 11164 ;; Registers used:
 11165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11166 ;; Tracked objects:
 11167 ;;		On entry : 0/0
 11168 ;;		On exit  : 0/0
 11169 ;;		Unchanged: 0/0
 11170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11175 ;;Total ram usage:        0 bytes
 11176 ;; Hardware stack levels used:    1
 11177 ;; Hardware stack levels required when called:    5
 11178 ;; This function calls:
 11179 ;;		Absolute function
 11180 ;;		_TMR0_DefaultInterruptHandler
 11181 ;; This function is called by:
 11182 ;;		_INTERRUPT_InterruptManager
 11183 ;; This function uses a non-reentrant model
 11184 ;;
 11185                           
 11186                           	psect	text47
 11187  0027C2                     __ptext47:
 11188                           	opt stack 0
 11189  0027C2                     _TMR0_ISR:
 11190                           	opt stack 18
 11191                           
 11192                           ;tmr0.c: 136: PIR0bits.TMR0IF = 0;
 11193                           
 11194                           ;incstack = 0
 11195  0027C2  010E               	movlb	14	; () banked
 11196  0027C4  9BCA               	bcf	202,5,b	;volatile
 11197                           
 11198                           ; BSR set to: 14
 11199                           ;tmr0.c: 138: TMR0H = timer0ReloadVal16bit >> 8;
 11200  0027C6  503D               	movf	_timer0ReloadVal16bit+1,w,c	;volatile
 11201  0027C8  6ED4               	movwf	4052,c	;volatile
 11202                           
 11203                           ; BSR set to: 14
 11204                           ;tmr0.c: 139: TMR0L = (uint8_t) timer0ReloadVal16bit;
 11205  0027CA  C03C  FFD3         	movff	_timer0ReloadVal16bit,4051	;volatile
 11206                           
 11207                           ; BSR set to: 14
 11208                           ;tmr0.c: 141: if(TMR0_InterruptHandler)
 11209  0027CE  0100               	movlb	0	; () banked
 11210  0027D0  51FC               	movf	_TMR0_InterruptHandler& (0+255),w,b
 11211  0027D2  0100               	movlb	0	; () banked
 11212  0027D4  11FD               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 11213  0027D6  0100               	movlb	0	; () banked
 11214  0027D8  11FE               	iorwf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 11215  0027DA  B4D8               	btfsc	status,2,c
 11216  0027DC  0012               	return	
 11217                           
 11218                           ; BSR set to: 0
 11219                           ;tmr0.c: 142: {
 11220                           ;tmr0.c: 143: TMR0_InterruptHandler();
 11221  0027DE  D801               	call	i2u457_48
 11222  0027E0  0012               	return	
 11223  0027E2                     i2u457_48:
 11224  0027E2  0005               	push	
 11225  0027E4  6EFA               	movwf	pclath,c
 11226  0027E6  0100               	movlb	0	; () banked
 11227  0027E8  51FC               	movf	_TMR0_InterruptHandler& (0+255),w,b
 11228  0027EA  6EFD               	movwf	tosl,c
 11229  0027EC  51FD               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 11230  0027EE  6EFE               	movwf	tosh,c
 11231  0027F0  51FE               	movf	(_TMR0_InterruptHandler+2)& (0+255),w,b
 11232  0027F2  6EFF               	movwf	tosu,c
 11233  0027F4  50FA               	movf	pclath,w,c
 11234  0027F6  0012               	return		;indir
 11235  0027F8                     __end_of_TMR0_ISR:
 11236                           	opt stack 0
 11237                           tosu	equ	0xFFF
 11238                           tosh	equ	0xFFE
 11239                           tosl	equ	0xFFD
 11240                           pclatu	equ	0xFFB
 11241                           pclath	equ	0xFFA
 11242                           tblptru	equ	0xFF8
 11243                           tblptrh	equ	0xFF7
 11244                           tblptrl	equ	0xFF6
 11245                           tablat	equ	0xFF5
 11246                           prodh	equ	0xFF4
 11247                           prodl	equ	0xFF3
 11248                           intcon	equ	0xFF2
 11249                           postinc0	equ	0xFEE
 11250                           fsr0h	equ	0xFEA
 11251                           fsr0l	equ	0xFE9
 11252                           wreg	equ	0xFE8
 11253                           indf1	equ	0xFE7
 11254                           postinc1	equ	0xFE6
 11255                           fsr1h	equ	0xFE2
 11256                           fsr1l	equ	0xFE1
 11257                           indf2	equ	0xFDF
 11258                           postinc2	equ	0xFDE
 11259                           postdec2	equ	0xFDD
 11260                           plusw2	equ	0xFDB
 11261                           fsr2h	equ	0xFDA
 11262                           fsr2l	equ	0xFD9
 11263                           status	equ	0xFD8
 11264                           
 11265 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 11266 ;; Defined at:
 11267 ;;		line 154 in file "mcc_generated_files/tmr0.c"
 11268 ;; Parameters:    Size  Location     Type
 11269 ;;		None
 11270 ;; Auto vars:     Size  Location     Type
 11271 ;;		None
 11272 ;; Return value:  Size  Location     Type
 11273 ;;                  1    wreg      void 
 11274 ;; Registers used:
 11275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11276 ;; Tracked objects:
 11277 ;;		On entry : 0/0
 11278 ;;		On exit  : 0/0
 11279 ;;		Unchanged: 0/0
 11280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11285 ;;Total ram usage:        0 bytes
 11286 ;; Hardware stack levels used:    1
 11287 ;; Hardware stack levels required when called:    4
 11288 ;; This function calls:
 11289 ;;		_hxHandleTmr0
 11290 ;; This function is called by:
 11291 ;;		_TMR0_Initialize
 11292 ;;		_TMR0_ISR
 11293 ;; This function uses a non-reentrant model
 11294 ;;
 11295                           
 11296                           	psect	text48
 11297  002A44                     __ptext48:
 11298                           	opt stack 0
 11299  002A44                     _TMR0_DefaultInterruptHandler:
 11300                           	opt stack 18
 11301                           
 11302                           ;tmr0.c: 157: hxHandleTmr0();
 11303                           
 11304                           ;incstack = 0
 11305  002A44  EC85  F013         	call	_hxHandleTmr0	;wreg free
 11306  002A48  0012               	return		;funcret
 11307  002A4A                     __end_of_TMR0_DefaultInterruptHandler:
 11308                           	opt stack 0
 11309                           tosu	equ	0xFFF
 11310                           tosh	equ	0xFFE
 11311                           tosl	equ	0xFFD
 11312                           pclatu	equ	0xFFB
 11313                           pclath	equ	0xFFA
 11314                           tblptru	equ	0xFF8
 11315                           tblptrh	equ	0xFF7
 11316                           tblptrl	equ	0xFF6
 11317                           tablat	equ	0xFF5
 11318                           prodh	equ	0xFF4
 11319                           prodl	equ	0xFF3
 11320                           intcon	equ	0xFF2
 11321                           postinc0	equ	0xFEE
 11322                           fsr0h	equ	0xFEA
 11323                           fsr0l	equ	0xFE9
 11324                           wreg	equ	0xFE8
 11325                           indf1	equ	0xFE7
 11326                           postinc1	equ	0xFE6
 11327                           fsr1h	equ	0xFE2
 11328                           fsr1l	equ	0xFE1
 11329                           indf2	equ	0xFDF
 11330                           postinc2	equ	0xFDE
 11331                           postdec2	equ	0xFDD
 11332                           plusw2	equ	0xFDB
 11333                           fsr2h	equ	0xFDA
 11334                           fsr2l	equ	0xFD9
 11335                           status	equ	0xFD8
 11336                           
 11337 ;; *************** function _hxHandleTmr0 *****************
 11338 ;; Defined at:
 11339 ;;		line 244 in file "HX_CommInterface.c"
 11340 ;; Parameters:    Size  Location     Type
 11341 ;;		None
 11342 ;; Auto vars:     Size  Location     Type
 11343 ;;		None
 11344 ;; Return value:  Size  Location     Type
 11345 ;;                  1    wreg      void 
 11346 ;; Registers used:
 11347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11348 ;; Tracked objects:
 11349 ;;		On entry : 0/0
 11350 ;;		On exit  : 0/0
 11351 ;;		Unchanged: 0/0
 11352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11354 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11357 ;;Total ram usage:        2 bytes
 11358 ;; Hardware stack levels used:    1
 11359 ;; Hardware stack levels required when called:    3
 11360 ;; This function calls:
 11361 ;;		_hxSetupPacket1
 11362 ;;		i2_hxFlushInputBuffer
 11363 ;;		i2_hxFlushOutputBuffer
 11364 ;; This function is called by:
 11365 ;;		_TMR0_DefaultInterruptHandler
 11366 ;; This function uses a non-reentrant model
 11367 ;;
 11368                           
 11369                           	psect	text49
 11370  00270A                     __ptext49:
 11371                           	opt stack 0
 11372  00270A                     _hxHandleTmr0:
 11373                           	opt stack 18
 11374                           
 11375                           ;HX_CommInterface.c: 246: hxFlushOutputBuffer();
 11376                           
 11377                           ;incstack = 0
 11378  00270A  ECE1  F014         	call	i2_hxFlushOutputBuffer	;wreg free
 11379                           
 11380                           ;HX_CommInterface.c: 247: hxFlushInputBuffer();
 11381  00270E  ECA4  F014         	call	i2_hxFlushInputBuffer	;wreg free
 11382                           
 11383                           ;HX_CommInterface.c: 251: hx_state = hx_state == 0x11 ? 0x42:
 11384                           ;HX_CommInterface.c: 252: 0x22;
 11385  002712  0E11               	movlw	17
 11386  002714  183E               	xorwf	_hx_state,w,c
 11387  002716  B4D8               	btfsc	status,2,c
 11388  002718  D004               	goto	i2l4949
 11389  00271A  0E00               	movlw	0
 11390  00271C  6E0A               	movwf	_hxHandleTmr0$263+1,c
 11391  00271E  0E22               	movlw	34
 11392  002720  D003               	goto	L27
 11393  002722                     i2l4949:
 11394  002722  0E00               	movlw	0
 11395  002724  6E0A               	movwf	_hxHandleTmr0$263+1,c
 11396  002726  0E42               	movlw	66
 11397  002728                     L27:
 11398  002728  6E09               	movwf	_hxHandleTmr0$263,c
 11399  00272A  C009  F03E         	movff	_hxHandleTmr0$263,_hx_state
 11400                           
 11401                           ;HX_CommInterface.c: 253: hxSetupPacket1(0x01, hx_state);
 11402  00272E  C03E  F006         	movff	_hx_state,hxSetupPacket1@data
 11403  002732  0E01               	movlw	1
 11404  002734  EC6C  F012         	call	_hxSetupPacket1
 11405                           
 11406                           ;HX_CommInterface.c: 255: hx_startMain = 0;
 11407  002738  0E00               	movlw	0
 11408  00273A  0100               	movlb	0	; () banked
 11409  00273C  6F70               	movwf	_hx_startMain& (0+255),b
 11410                           
 11411                           ; BSR set to: 0
 11412                           ;HX_CommInterface.c: 256: hx_txPacketFlag = 1;
 11413  00273E  0E01               	movlw	1
 11414  002740  6E3F               	movwf	_hx_txPacketFlag,c
 11415                           
 11416                           ; BSR set to: 0
 11417                           ;HX_CommInterface.c: 257: hx_abort = 1;
 11418  002742  0E01               	movlw	1
 11419  002744  0100               	movlb	0	; () banked
 11420  002746  6F6E               	movwf	_hx_abort& (0+255),b
 11421                           
 11422                           ; BSR set to: 0
 11423  002748  0012               	return		;funcret
 11424  00274A                     __end_of_hxHandleTmr0:
 11425                           	opt stack 0
 11426                           tosu	equ	0xFFF
 11427                           tosh	equ	0xFFE
 11428                           tosl	equ	0xFFD
 11429                           pclatu	equ	0xFFB
 11430                           pclath	equ	0xFFA
 11431                           tblptru	equ	0xFF8
 11432                           tblptrh	equ	0xFF7
 11433                           tblptrl	equ	0xFF6
 11434                           tablat	equ	0xFF5
 11435                           prodh	equ	0xFF4
 11436                           prodl	equ	0xFF3
 11437                           intcon	equ	0xFF2
 11438                           postinc0	equ	0xFEE
 11439                           fsr0h	equ	0xFEA
 11440                           fsr0l	equ	0xFE9
 11441                           wreg	equ	0xFE8
 11442                           indf1	equ	0xFE7
 11443                           postinc1	equ	0xFE6
 11444                           fsr1h	equ	0xFE2
 11445                           fsr1l	equ	0xFE1
 11446                           indf2	equ	0xFDF
 11447                           postinc2	equ	0xFDE
 11448                           postdec2	equ	0xFDD
 11449                           plusw2	equ	0xFDB
 11450                           fsr2h	equ	0xFDA
 11451                           fsr2l	equ	0xFD9
 11452                           status	equ	0xFD8
 11453                           
 11454 ;; *************** function _I2C1_ISR *****************
 11455 ;; Defined at:
 11456 ;;		line 233 in file "mcc_generated_files/i2c1.c"
 11457 ;; Parameters:    Size  Location     Type
 11458 ;;		None
 11459 ;; Auto vars:     Size  Location     Type
 11460 ;;		None
 11461 ;; Return value:  Size  Location     Type
 11462 ;;                  1    wreg      void 
 11463 ;; Registers used:
 11464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11465 ;; Tracked objects:
 11466 ;;		On entry : 0/0
 11467 ;;		On exit  : 0/0
 11468 ;;		Unchanged: 0/0
 11469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11472 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11473 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11474 ;;Total ram usage:        2 bytes
 11475 ;; Hardware stack levels used:    1
 11476 ;; Hardware stack levels required when called:    1
 11477 ;; This function calls:
 11478 ;;		_I2C1_FunctionComplete
 11479 ;;		_I2C1_Stop
 11480 ;; This function is called by:
 11481 ;;		_INTERRUPT_InterruptManager
 11482 ;; This function uses a non-reentrant model
 11483 ;;
 11484                           
 11485                           	psect	text50
 11486  00134C                     __ptext50:
 11487                           	opt stack 0
 11488  00134C                     _I2C1_ISR:
 11489                           	opt stack 22
 11490                           
 11491                           ;i2c1.c: 236: static uint8_t *pi2c_buf_ptr;
 11492                           ;i2c1.c: 237: static uint16_t i2c_address = 0;
 11493                           ;i2c1.c: 238: static uint8_t i2c_bytes_left = 0;
 11494                           ;i2c1.c: 239: static uint8_t i2c_10bit_address_restart = 0;
 11495                           ;i2c1.c: 241: PIR3bits.SSP1IF = 0;
 11496                           
 11497                           ; BSR set to: 0
 11498                           ;incstack = 0
 11499  00134C  010E               	movlb	14	; () banked
 11500  00134E  91CD               	bcf	205,0,b	;volatile
 11501                           
 11502                           ;i2c1.c: 245: if(SSP1CON1bits.WCOL)
 11503  001350  AE96               	btfss	3990,7,c	;volatile
 11504  001352  D10E               	goto	i2l8555
 11505                           
 11506                           ; BSR set to: 14
 11507                           ;i2c1.c: 246: {
 11508                           ;i2c1.c: 248: SSP1CON1bits.WCOL = 0;
 11509  001354  9E96               	bcf	3990,7,c	;volatile
 11510                           
 11511                           ; BSR set to: 14
 11512                           ;i2c1.c: 249: i2c1_state = S_MASTER_IDLE;
 11513  001356  0E00               	movlw	0
 11514  001358  6E2C               	movwf	_i2c1_state,c
 11515                           
 11516                           ; BSR set to: 14
 11517                           ;i2c1.c: 250: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 11518  00135A  EE20 F003          	lfsr	2,3
 11519  00135E  5021               	movf	_p_i2c1_current,w,c
 11520  001360  26D9               	addwf	fsr2l,f,c
 11521  001362  5022               	movf	_p_i2c1_current+1,w,c
 11522  001364  22DA               	addwfc	fsr2h,f,c
 11523  001366  CFDE F004          	movff	postinc2,??_I2C1_ISR
 11524  00136A  CFDD F005          	movff	postdec2,??_I2C1_ISR+1
 11525  00136E  C004  FFD9         	movff	??_I2C1_ISR,fsr2l
 11526  001372  C005  FFDA         	movff	??_I2C1_ISR+1,fsr2h
 11527  001376  0E01               	movlw	1
 11528  001378  6EDF               	movwf	indf2,c
 11529                           
 11530                           ; BSR set to: 14
 11531                           ;i2c1.c: 253: p_i2c1_current = (0);
 11532  00137A  0E00               	movlw	0
 11533  00137C  6E21               	movwf	_p_i2c1_current,c
 11534  00137E  0E00               	movlw	0
 11535  001380  6E22               	movwf	_p_i2c1_current+1,c
 11536                           
 11537                           ; BSR set to: 14
 11538                           ;i2c1.c: 255: return;
 11539  001382  0012               	return	
 11540  001384                     i2l967:
 11541                           
 11542                           ;i2c1.c: 263: if(i2c1_object.trStatus.s.empty != 1)
 11543  001384  0100               	movlb	0	; () banked
 11544  001386  B364               	btfsc	(_i2c1_object+4)& (0+255),1,b
 11545  001388  0012               	return	
 11546                           
 11547                           ; BSR set to: 0
 11548                           ;i2c1.c: 264: {
 11549                           ;i2c1.c: 266: p_i2c1_current = i2c1_object.pTrHead;
 11550  00138A  C062  F021         	movff	_i2c1_object+2,_p_i2c1_current
 11551  00138E  C063  F022         	movff	_i2c1_object+3,_p_i2c1_current+1
 11552                           
 11553                           ; BSR set to: 0
 11554                           ;i2c1.c: 267: i2c1_trb_count = i2c1_object.pTrHead->count;
 11555  001392  C062  FFD9         	movff	_i2c1_object+2,fsr2l
 11556  001396  C063  FFDA         	movff	_i2c1_object+3,fsr2h
 11557  00139A  50DF               	movf	indf2,w,c
 11558  00139C  6E2B               	movwf	_i2c1_trb_count,c
 11559                           
 11560                           ; BSR set to: 0
 11561                           ;i2c1.c: 268: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 11562  00139E  0100               	movlb	0	; () banked
 11563  0013A0  EE20 F001          	lfsr	2,1
 11564  0013A4  5162               	movf	(_i2c1_object+2)& (0+255),w,b
 11565  0013A6  26D9               	addwf	fsr2l,f,c
 11566  0013A8  5163               	movf	(_i2c1_object+3)& (0+255),w,b
 11567  0013AA  22DA               	addwfc	fsr2h,f,c
 11568  0013AC  CFDE F023          	movff	postinc2,_p_i2c1_trb_current
 11569  0013B0  CFDD F024          	movff	postdec2,_p_i2c1_trb_current+1
 11570                           
 11571                           ; BSR set to: 0
 11572                           ;i2c1.c: 270: i2c1_object.pTrHead++;
 11573  0013B4  0E05               	movlw	5
 11574  0013B6  0100               	movlb	0	; () banked
 11575  0013B8  2762               	addwf	(_i2c1_object+2)& (0+255),f,b
 11576  0013BA  0E00               	movlw	0
 11577  0013BC  2363               	addwfc	(_i2c1_object+3)& (0+255),f,b
 11578                           
 11579                           ; BSR set to: 0
 11580                           ;i2c1.c: 273: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 11581  0013BE  0EBE               	movlw	low (_i2c1_tr_queue+5)
 11582  0013C0  0100               	movlb	0	; () banked
 11583  0013C2  1962               	xorwf	(_i2c1_object+2)& (0+255),w,b
 11584  0013C4  E10B               	bnz	i2l8447
 11585  0013C6  0E00               	movlw	high (_i2c1_tr_queue+5)
 11586  0013C8  0100               	movlb	0	; () banked
 11587  0013CA  1963               	xorwf	(_i2c1_object+3)& (0+255),w,b
 11588  0013CC  A4D8               	btfss	status,2,c
 11589  0013CE  D006               	goto	i2l8447
 11590                           
 11591                           ; BSR set to: 0
 11592                           ;i2c1.c: 274: {
 11593                           ;i2c1.c: 276: i2c1_object.pTrHead = i2c1_tr_queue;
 11594  0013D0  0EB9               	movlw	low _i2c1_tr_queue
 11595  0013D2  0100               	movlb	0	; () banked
 11596  0013D4  6F62               	movwf	(_i2c1_object+2)& (0+255),b
 11597  0013D6  0E00               	movlw	high _i2c1_tr_queue
 11598  0013D8  0100               	movlb	0	; () banked
 11599  0013DA  6F63               	movwf	(_i2c1_object+3)& (0+255),b
 11600  0013DC                     i2l8447:
 11601                           
 11602                           ; BSR set to: 0
 11603                           ;i2c1.c: 277: }
 11604                           ;i2c1.c: 281: i2c1_object.trStatus.s.full = 0;
 11605  0013DC  0100               	movlb	0	; () banked
 11606  0013DE  9164               	bcf	(_i2c1_object+4)& (0+255),0,b
 11607                           
 11608                           ;i2c1.c: 284: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 11609  0013E0  0100               	movlb	0	; () banked
 11610  0013E2  5160               	movf	_i2c1_object& (0+255),w,b
 11611  0013E4  0100               	movlb	0	; () banked
 11612  0013E6  1962               	xorwf	(_i2c1_object+2)& (0+255),w,b
 11613  0013E8  E108               	bnz	i2l970
 11614  0013EA  0100               	movlb	0	; () banked
 11615  0013EC  5161               	movf	(_i2c1_object+1)& (0+255),w,b
 11616  0013EE  0100               	movlb	0	; () banked
 11617  0013F0  1963               	xorwf	(_i2c1_object+3)& (0+255),w,b
 11618  0013F2  A4D8               	btfss	status,2,c
 11619  0013F4  D002               	goto	i2l970
 11620                           
 11621                           ; BSR set to: 0
 11622                           ;i2c1.c: 285: {
 11623                           ;i2c1.c: 287: i2c1_object.trStatus.s.empty = 1;
 11624  0013F6  0100               	movlb	0	; () banked
 11625  0013F8  8364               	bsf	(_i2c1_object+4)& (0+255),1,b
 11626  0013FA                     i2l970:
 11627                           
 11628                           ; BSR set to: 0
 11629                           ;i2c1.c: 288: }
 11630                           ;i2c1.c: 291: SSP1CON2bits.SEN = 1;
 11631  0013FA  8097               	bsf	3991,0,c	;volatile
 11632                           
 11633                           ; BSR set to: 0
 11634                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
 11635  0013FC  0E02               	movlw	2
 11636  0013FE  6E2C               	movwf	_i2c1_state,c
 11637                           
 11638                           ; BSR set to: 0
 11639                           ;i2c1.c: 295: }
 11640                           ;i2c1.c: 297: break;
 11641  001400  0012               	return	
 11642  001402                     i2l972:
 11643                           
 11644                           ;i2c1.c: 304: SSP1CON2bits.RSEN = 1;
 11645  001402  8297               	bsf	3991,1,c	;volatile
 11646                           
 11647                           ;i2c1.c: 307: i2c1_state = S_MASTER_SEND_ADDR;
 11648  001404  0E02               	movlw	2
 11649  001406  6E2C               	movwf	_i2c1_state,c
 11650                           
 11651                           ;i2c1.c: 309: break;
 11652  001408  0012               	return	
 11653  00140A                     i2l973:
 11654                           
 11655                           ;i2c1.c: 313: if(SSP1CON2bits.ACKSTAT)
 11656  00140A  AC97               	btfss	3991,6,c	;volatile
 11657  00140C  D006               	goto	i2l8459
 11658                           
 11659                           ;i2c1.c: 314: {
 11660                           ;i2c1.c: 315: i2c1_object.i2cErrors++;
 11661  00140E  0100               	movlb	0	; () banked
 11662  001410  2B66               	incf	(_i2c1_object+6)& (0+255),f,b
 11663                           
 11664                           ; BSR set to: 0
 11665                           ;i2c1.c: 316: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 11666  001412  0E04               	movlw	4
 11667  001414  ECA5  F013         	call	_I2C1_Stop
 11668                           
 11669                           ;i2c1.c: 317: }
 11670  001418  0012               	return	
 11671  00141A                     i2l8459:
 11672                           
 11673                           ;i2c1.c: 318: else
 11674                           ;i2c1.c: 319: {
 11675                           ;i2c1.c: 321: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 11676  00141A  90D8               	bcf	status,0,c
 11677  00141C  303B               	rrcf	I2C1_ISR@i2c_address+1,w,c
 11678  00141E  6E05               	movwf	(??_I2C1_ISR+1)& (0+255),c
 11679  001420  303A               	rrcf	I2C1_ISR@i2c_address,w,c
 11680  001422  6E04               	movwf	??_I2C1_ISR& (0+255),c
 11681  001424  5004               	movf	??_I2C1_ISR,w,c
 11682  001426  6E92               	movwf	3986,c	;volatile
 11683                           
 11684                           ;i2c1.c: 324: if(i2c_address & 0x01)
 11685  001428  A03A               	btfss	I2C1_ISR@i2c_address,0,c
 11686  00142A  D003               	goto	i2l8465
 11687                           
 11688                           ;i2c1.c: 325: {
 11689                           ;i2c1.c: 328: i2c1_state = S_MASTER_10BIT_RESTART;
 11690  00142C  0E0B               	movlw	11
 11691  00142E  6E2C               	movwf	_i2c1_state,c
 11692                           
 11693                           ;i2c1.c: 329: }
 11694  001430  0012               	return	
 11695  001432                     i2l8465:
 11696                           
 11697                           ;i2c1.c: 330: else
 11698                           ;i2c1.c: 331: {
 11699                           ;i2c1.c: 333: i2c1_state = S_MASTER_SEND_DATA;
 11700  001432  0E03               	movlw	3
 11701  001434  6E2C               	movwf	_i2c1_state,c
 11702                           
 11703                           ;i2c1.c: 334: }
 11704                           ;i2c1.c: 335: }
 11705                           ;i2c1.c: 337: break;
 11706  001436  0012               	return	
 11707  001438                     i2l978:
 11708                           
 11709                           ;i2c1.c: 341: if(SSP1CON2bits.ACKSTAT)
 11710  001438  AC97               	btfss	3991,6,c	;volatile
 11711  00143A  D006               	goto	i2l979
 11712                           
 11713                           ;i2c1.c: 342: {
 11714                           ;i2c1.c: 343: i2c1_object.i2cErrors++;
 11715  00143C  0100               	movlb	0	; () banked
 11716  00143E  2B66               	incf	(_i2c1_object+6)& (0+255),f,b
 11717                           
 11718                           ; BSR set to: 0
 11719                           ;i2c1.c: 344: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 11720  001440  0E04               	movlw	4
 11721  001442  ECA5  F013         	call	_I2C1_Stop
 11722                           
 11723                           ;i2c1.c: 345: }
 11724  001446  0012               	return	
 11725  001448                     i2l979:
 11726                           
 11727                           ;i2c1.c: 346: else
 11728                           ;i2c1.c: 347: {
 11729                           ;i2c1.c: 350: SSP1CON2bits.RSEN = 1;
 11730  001448  8297               	bsf	3991,1,c	;volatile
 11731                           
 11732                           ;i2c1.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 11733  00144A  C03A  F004         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
 11734  00144E  C03B  F005         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
 11735  001452  C005  F004         	movff	??_I2C1_ISR+1,??_I2C1_ISR
 11736  001456  6A05               	clrf	??_I2C1_ISR+1,c
 11737  001458  0E06               	movlw	6
 11738  00145A  1604               	andwf	??_I2C1_ISR,f,c
 11739  00145C  0E00               	movlw	0
 11740  00145E  1605               	andwf	??_I2C1_ISR+1,f,c
 11741  001460  0EF0               	movlw	240
 11742  001462  1004               	iorwf	??_I2C1_ISR,w,c
 11743  001464  6E3A               	movwf	I2C1_ISR@i2c_address,c
 11744  001466  5005               	movf	??_I2C1_ISR+1,w,c
 11745  001468  6E3B               	movwf	I2C1_ISR@i2c_address+1,c
 11746                           
 11747                           ;i2c1.c: 357: i2c_address |= 0x0001;
 11748  00146A  803A               	bsf	I2C1_ISR@i2c_address,0,c
 11749                           
 11750                           ;i2c1.c: 360: i2c_10bit_address_restart = 1;
 11751  00146C  0E01               	movlw	1
 11752  00146E  6E29               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
 11753                           
 11754                           ;i2c1.c: 363: i2c1_state = S_MASTER_SEND_ADDR;
 11755  001470  0E02               	movlw	2
 11756  001472  6E2C               	movwf	_i2c1_state,c
 11757                           
 11758                           ;i2c1.c: 364: }
 11759                           ;i2c1.c: 366: break;
 11760  001474  0012               	return	
 11761  001476                     i2l8479:
 11762                           
 11763                           ;i2c1.c: 381: if(i2c_10bit_address_restart != 1)
 11764  001476  0429               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
 11765  001478  B4D8               	btfsc	status,2,c
 11766  00147A  D01A               	goto	i2l983
 11767                           
 11768                           ;i2c1.c: 382: {
 11769                           ;i2c1.c: 384: i2c_address = p_i2c1_trb_current->address;
 11770  00147C  C023  FFD9         	movff	_p_i2c1_trb_current,fsr2l
 11771  001480  C024  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
 11772  001484  CFDE F03A          	movff	postinc2,I2C1_ISR@i2c_address
 11773  001488  CFDD F03B          	movff	postdec2,I2C1_ISR@i2c_address+1
 11774                           
 11775                           ;i2c1.c: 385: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 11776  00148C  EE20 F003          	lfsr	2,3
 11777  001490  5023               	movf	_p_i2c1_trb_current,w,c
 11778  001492  26D9               	addwf	fsr2l,f,c
 11779  001494  5024               	movf	_p_i2c1_trb_current+1,w,c
 11780  001496  22DA               	addwfc	fsr2h,f,c
 11781  001498  CFDE F067          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
 11782  00149C  CFDD F068          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
 11783                           
 11784                           ;i2c1.c: 386: i2c_bytes_left = p_i2c1_trb_current->length;
 11785  0014A0  EE20 F002          	lfsr	2,2
 11786  0014A4  5023               	movf	_p_i2c1_trb_current,w,c
 11787  0014A6  26D9               	addwf	fsr2l,f,c
 11788  0014A8  5024               	movf	_p_i2c1_trb_current+1,w,c
 11789  0014AA  22DA               	addwfc	fsr2h,f,c
 11790  0014AC  50DF               	movf	indf2,w,c
 11791  0014AE  6E2A               	movwf	I2C1_ISR@i2c_bytes_left,c
 11792  0014B0                     i2l983:
 11793                           
 11794                           ;i2c1.c: 409: else
 11795                           ;i2c1.c: 410: {
 11796                           ;i2c1.c: 412: SSP1BUF = i2c_address;
 11797  0014B0  C03A  FF92         	movff	I2C1_ISR@i2c_address,3986	;volatile
 11798                           
 11799                           ;i2c1.c: 413: if(i2c_address & 0x01)
 11800  0014B4  A03A               	btfss	I2C1_ISR@i2c_address,0,c
 11801  0014B6  D003               	goto	i2l8499
 11802                           
 11803                           ;i2c1.c: 414: {
 11804                           ;i2c1.c: 416: i2c1_state = S_MASTER_ACK_ADDR;
 11805  0014B8  0E05               	movlw	5
 11806  0014BA  6E2C               	movwf	_i2c1_state,c
 11807                           
 11808                           ;i2c1.c: 417: }
 11809  0014BC  0012               	return	
 11810  0014BE                     i2l8499:
 11811                           
 11812                           ;i2c1.c: 418: else
 11813                           ;i2c1.c: 419: {
 11814                           ;i2c1.c: 421: i2c1_state = S_MASTER_SEND_DATA;
 11815  0014BE  0E03               	movlw	3
 11816  0014C0  6E2C               	movwf	_i2c1_state,c
 11817                           
 11818                           ;i2c1.c: 422: }
 11819                           ;i2c1.c: 423: }
 11820                           ;i2c1.c: 424: break;
 11821  0014C2  0012               	return	
 11822  0014C4                     i2l989:
 11823                           
 11824                           ;i2c1.c: 429: if(SSP1CON2bits.ACKSTAT)
 11825  0014C4  AC97               	btfss	3991,6,c	;volatile
 11826  0014C6  D007               	goto	i2l8507
 11827                           
 11828                           ;i2c1.c: 430: {
 11829                           ;i2c1.c: 432: i2c1_object.i2cErrors++;
 11830  0014C8  0100               	movlb	0	; () banked
 11831  0014CA  2B66               	incf	(_i2c1_object+6)& (0+255),f,b
 11832                           
 11833                           ; BSR set to: 0
 11834                           ;i2c1.c: 435: SSP1CON2bits.ACKSTAT = 0;
 11835  0014CC  9C97               	bcf	3991,6,c	;volatile
 11836                           
 11837                           ; BSR set to: 0
 11838                           ;i2c1.c: 438: I2C1_Stop(I2C1_DATA_NO_ACK);
 11839  0014CE  0E05               	movlw	5
 11840  0014D0  ECA5  F013         	call	_I2C1_Stop
 11841                           
 11842                           ;i2c1.c: 440: }
 11843  0014D4  0012               	return	
 11844  0014D6                     i2l8507:
 11845                           
 11846                           ;i2c1.c: 441: else
 11847                           ;i2c1.c: 442: {
 11848                           ;i2c1.c: 444: if(i2c_bytes_left-- == 0U)
 11849  0014D6  062A               	decf	I2C1_ISR@i2c_bytes_left,f,c
 11850  0014D8  282A               	incf	I2C1_ISR@i2c_bytes_left,w,c
 11851  0014DA  A4D8               	btfss	status,2,c
 11852  0014DC  D00E               	goto	i2l8517
 11853                           
 11854                           ;i2c1.c: 445: {
 11855                           ;i2c1.c: 449: p_i2c1_trb_current++;
 11856  0014DE  0E05               	movlw	5
 11857  0014E0  2623               	addwf	_p_i2c1_trb_current,f,c
 11858  0014E2  0E00               	movlw	0
 11859  0014E4  2224               	addwfc	_p_i2c1_trb_current+1,f,c
 11860                           
 11861                           ;i2c1.c: 452: if(--i2c1_trb_count == 0)
 11862  0014E6  2E2B               	decfsz	_i2c1_trb_count,f,c
 11863  0014E8  D004               	goto	i2l993
 11864                           
 11865                           ;i2c1.c: 453: {
 11866                           ;i2c1.c: 454: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 11867  0014EA  0E00               	movlw	0
 11868  0014EC  ECA5  F013         	call	_I2C1_Stop
 11869                           
 11870                           ;i2c1.c: 455: }
 11871  0014F0  0012               	return	
 11872  0014F2                     i2l993:
 11873                           
 11874                           ;i2c1.c: 456: else
 11875                           ;i2c1.c: 457: {
 11876                           ;i2c1.c: 464: SSP1CON2bits.RSEN = 1;
 11877  0014F2  8297               	bsf	3991,1,c	;volatile
 11878                           
 11879                           ;i2c1.c: 467: i2c1_state = S_MASTER_SEND_ADDR;
 11880  0014F4  0E02               	movlw	2
 11881  0014F6  6E2C               	movwf	_i2c1_state,c
 11882                           
 11883                           ;i2c1.c: 469: }
 11884                           ;i2c1.c: 470: }
 11885  0014F8  0012               	return	
 11886  0014FA                     i2l8517:
 11887                           
 11888                           ;i2c1.c: 471: else
 11889                           ;i2c1.c: 472: {
 11890                           ;i2c1.c: 474: SSP1BUF = *pi2c_buf_ptr++;
 11891  0014FA  C067  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 11892  0014FE  C068  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 11893  001502  50DF               	movf	indf2,w,c
 11894  001504  6E92               	movwf	3986,c	;volatile
 11895  001506  0100               	movlb	0	; () banked
 11896  001508  4B67               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 11897  00150A  2B68               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 11898                           
 11899                           ; BSR set to: 0
 11900                           ;i2c1.c: 475: }
 11901                           ;i2c1.c: 476: }
 11902                           ;i2c1.c: 477: break;
 11903                           
 11904                           ; BSR set to: 0
 11905  00150C  0012               	return	
 11906  00150E                     i2l996:
 11907                           
 11908                           ;i2c1.c: 482: if(SSP1CON2bits.ACKSTAT)
 11909  00150E  AC97               	btfss	3991,6,c	;volatile
 11910  001510  D007               	goto	i2l997
 11911                           
 11912                           ;i2c1.c: 483: {
 11913                           ;i2c1.c: 486: i2c1_object.i2cErrors++;
 11914  001512  0100               	movlb	0	; () banked
 11915  001514  2B66               	incf	(_i2c1_object+6)& (0+255),f,b
 11916                           
 11917                           ; BSR set to: 0
 11918                           ;i2c1.c: 489: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 11919  001516  0E04               	movlw	4
 11920  001518  ECA5  F013         	call	_I2C1_Stop
 11921                           
 11922                           ;i2c1.c: 492: SSP1CON2bits.ACKSTAT = 0;
 11923  00151C  9C97               	bcf	3991,6,c	;volatile
 11924                           
 11925                           ;i2c1.c: 493: }
 11926  00151E  0012               	return	
 11927  001520                     i2l997:
 11928                           
 11929                           ;i2c1.c: 494: else
 11930                           ;i2c1.c: 495: {
 11931                           ;i2c1.c: 496: SSP1CON2bits.RCEN = 1;
 11932  001520  8697               	bsf	3991,3,c	;volatile
 11933                           
 11934                           ;i2c1.c: 497: i2c1_state = S_MASTER_ACK_RCV_DATA;
 11935  001522  0E08               	movlw	8
 11936  001524  6E2C               	movwf	_i2c1_state,c
 11937                           
 11938                           ;i2c1.c: 498: }
 11939                           ;i2c1.c: 499: break;
 11940  001526  0012               	return	
 11941  001528                     i2l8529:
 11942                           
 11943                           ;i2c1.c: 506: i2c1_state = S_MASTER_ACK_RCV_DATA;
 11944  001528  0E08               	movlw	8
 11945  00152A  6E2C               	movwf	_i2c1_state,c
 11946                           
 11947                           ;i2c1.c: 509: SSP1CON2bits.RCEN = 1;
 11948  00152C  8697               	bsf	3991,3,c	;volatile
 11949                           
 11950                           ;i2c1.c: 511: break;
 11951  00152E  0012               	return	
 11952  001530                     i2l8533:
 11953                           
 11954                           ;i2c1.c: 516: *pi2c_buf_ptr++ = SSP1BUF;
 11955  001530  C067  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
 11956  001534  C068  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
 11957  001538  CF92 FFDF          	movff	3986,indf2	;volatile
 11958  00153C  0100               	movlb	0	; () banked
 11959  00153E  4B67               	infsnz	I2C1_ISR@pi2c_buf_ptr& (0+255),f,b
 11960  001540  2B68               	incf	(I2C1_ISR@pi2c_buf_ptr+1)& (0+255),f,b
 11961                           
 11962                           ; BSR set to: 0
 11963                           ;i2c1.c: 519: if(--i2c_bytes_left)
 11964  001542  0E01               	movlw	1
 11965  001544  5E2A               	subwf	I2C1_ISR@i2c_bytes_left,f,c
 11966  001546  B4D8               	btfsc	status,2,c
 11967  001548  D004               	goto	i2l1001
 11968                           
 11969                           ; BSR set to: 0
 11970                           ;i2c1.c: 520: {
 11971                           ;i2c1.c: 526: SSP1CON2bits.ACKDT = 0;
 11972  00154A  9A97               	bcf	3991,5,c	;volatile
 11973                           
 11974                           ; BSR set to: 0
 11975                           ;i2c1.c: 529: i2c1_state = S_MASTER_RCV_DATA;
 11976  00154C  0E06               	movlw	6
 11977  00154E  6E2C               	movwf	_i2c1_state,c
 11978                           
 11979                           ;i2c1.c: 530: }
 11980  001550  D003               	goto	i2l8545
 11981  001552                     i2l1001:
 11982                           
 11983                           ; BSR set to: 0
 11984                           ;i2c1.c: 531: else
 11985                           ;i2c1.c: 532: {
 11986                           ;i2c1.c: 536: SSP1CON2bits.ACKDT = 1;
 11987  001552  8A97               	bsf	3991,5,c	;volatile
 11988                           
 11989                           ; BSR set to: 0
 11990                           ;i2c1.c: 538: I2C1_FunctionComplete();
 11991  001554  ECBF  F014         	call	_I2C1_FunctionComplete	;wreg free
 11992  001558                     i2l8545:
 11993                           
 11994                           ;i2c1.c: 539: }
 11995                           ;i2c1.c: 542: SSP1CON2bits.ACKEN = 1;
 11996  001558  8897               	bsf	3991,4,c	;volatile
 11997                           
 11998                           ;i2c1.c: 543: break;
 11999  00155A  0012               	return	
 12000  00155C                     i2l8547:
 12001                           
 12002                           ;i2c1.c: 546: case S_MASTER_SEND_STOP:
 12003                           ;i2c1.c: 549: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 12004  00155C  0E00               	movlw	0
 12005  00155E  ECA5  F013         	call	_I2C1_Stop
 12006                           
 12007                           ;i2c1.c: 550: break;
 12008  001562  0012               	return	
 12009  001564                     i2l8549:
 12010                           
 12011                           ;i2c1.c: 556: i2c1_object.i2cErrors++;
 12012  001564  0100               	movlb	0	; () banked
 12013  001566  2B66               	incf	(_i2c1_object+6)& (0+255),f,b
 12014                           
 12015                           ; BSR set to: 0
 12016                           ;i2c1.c: 557: I2C1_Stop(I2C1_LOST_STATE);
 12017  001568  0E06               	movlw	6
 12018  00156A  ECA5  F013         	call	_I2C1_Stop
 12019                           
 12020                           ;i2c1.c: 560: }
 12021                           
 12022                           ;i2c1.c: 558: break;
 12023  00156E  0012               	return	
 12024  001570                     i2l8555:
 12025  001570  502C               	movf	_i2c1_state,w,c
 12026                           
 12027                           ; Switch size 1, requested type "space"
 12028                           ; Number of cases is 11, Range of values is 0 to 11
 12029                           ; switch strategies available:
 12030                           ; Name         Instructions Cycles
 12031                           ; simple_byte           34    18 (average)
 12032                           ;	Chosen strategy is simple_byte
 12033  001572  0A00               	xorlw	0	; case 0
 12034  001574  B4D8               	btfsc	status,2,c
 12035  001576  D706               	goto	i2l967
 12036  001578  0A01               	xorlw	1	; case 1
 12037  00157A  B4D8               	btfsc	status,2,c
 12038  00157C  D742               	goto	i2l972
 12039  00157E  0A03               	xorlw	3	; case 2
 12040  001580  B4D8               	btfsc	status,2,c
 12041  001582  D779               	goto	i2l8479
 12042  001584  0A01               	xorlw	1	; case 3
 12043  001586  B4D8               	btfsc	status,2,c
 12044  001588  D79D               	goto	i2l989
 12045  00158A  0A07               	xorlw	7	; case 4
 12046  00158C  B4D8               	btfsc	status,2,c
 12047  00158E  D7E6               	goto	i2l8547
 12048  001590  0A01               	xorlw	1	; case 5
 12049  001592  B4D8               	btfsc	status,2,c
 12050  001594  D7BC               	goto	i2l996
 12051  001596  0A03               	xorlw	3	; case 6
 12052  001598  B4D8               	btfsc	status,2,c
 12053  00159A  D7C6               	goto	i2l8529
 12054  00159C  0A01               	xorlw	1	; case 7
 12055  00159E  B4D8               	btfsc	status,2,c
 12056  0015A0  D7DD               	goto	i2l8547
 12057  0015A2  0A0F               	xorlw	15	; case 8
 12058  0015A4  B4D8               	btfsc	status,2,c
 12059  0015A6  D7C4               	goto	i2l8533
 12060  0015A8  0A02               	xorlw	2	; case 10
 12061  0015AA  B4D8               	btfsc	status,2,c
 12062  0015AC  D72E               	goto	i2l973
 12063  0015AE  0A01               	xorlw	1	; case 11
 12064  0015B0  B4D8               	btfsc	status,2,c
 12065  0015B2  D742               	goto	i2l978
 12066  0015B4  D7D7               	goto	i2l8549
 12067  0015B6                     __end_of_I2C1_ISR:
 12068                           	opt stack 0
 12069                           tosu	equ	0xFFF
 12070                           tosh	equ	0xFFE
 12071                           tosl	equ	0xFFD
 12072                           pclatu	equ	0xFFB
 12073                           pclath	equ	0xFFA
 12074                           tblptru	equ	0xFF8
 12075                           tblptrh	equ	0xFF7
 12076                           tblptrl	equ	0xFF6
 12077                           tablat	equ	0xFF5
 12078                           prodh	equ	0xFF4
 12079                           prodl	equ	0xFF3
 12080                           intcon	equ	0xFF2
 12081                           postinc0	equ	0xFEE
 12082                           fsr0h	equ	0xFEA
 12083                           fsr0l	equ	0xFE9
 12084                           wreg	equ	0xFE8
 12085                           indf1	equ	0xFE7
 12086                           postinc1	equ	0xFE6
 12087                           fsr1h	equ	0xFE2
 12088                           fsr1l	equ	0xFE1
 12089                           indf2	equ	0xFDF
 12090                           postinc2	equ	0xFDE
 12091                           postdec2	equ	0xFDD
 12092                           plusw2	equ	0xFDB
 12093                           fsr2h	equ	0xFDA
 12094                           fsr2l	equ	0xFD9
 12095                           status	equ	0xFD8
 12096                           
 12097 ;; *************** function _I2C1_Stop *****************
 12098 ;; Defined at:
 12099 ;;		line 581 in file "mcc_generated_files/i2c1.c"
 12100 ;; Parameters:    Size  Location     Type
 12101 ;;  completion_c    1    wreg     enum E11599
 12102 ;; Auto vars:     Size  Location     Type
 12103 ;;  completion_c    1    2[COMRAM] enum E11599
 12104 ;; Return value:  Size  Location     Type
 12105 ;;                  1    wreg      void 
 12106 ;; Registers used:
 12107 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12108 ;; Tracked objects:
 12109 ;;		On entry : 0/0
 12110 ;;		On exit  : 0/0
 12111 ;;		Unchanged: 0/0
 12112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12114 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12115 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12116 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12117 ;;Total ram usage:        3 bytes
 12118 ;; Hardware stack levels used:    1
 12119 ;; This function calls:
 12120 ;;		Nothing
 12121 ;; This function is called by:
 12122 ;;		_I2C1_ISR
 12123 ;; This function uses a non-reentrant model
 12124 ;;
 12125                           
 12126                           	psect	text51
 12127  00274A                     __ptext51:
 12128                           	opt stack 0
 12129  00274A                     _I2C1_Stop:
 12130                           	opt stack 22
 12131                           
 12132                           ;incstack = 0
 12133                           ;I2C1_Stop@completion_code stored from wreg
 12134  00274A  6E03               	movwf	I2C1_Stop@completion_code,c
 12135                           
 12136                           ;i2c1.c: 584: SSP1CON2bits.PEN = 1;
 12137  00274C  8497               	bsf	3991,2,c	;volatile
 12138                           
 12139                           ;i2c1.c: 587: if (p_i2c1_current->pTrFlag != (0))
 12140  00274E  EE20 F003          	lfsr	2,3
 12141  002752  5021               	movf	_p_i2c1_current,w,c
 12142  002754  26D9               	addwf	fsr2l,f,c
 12143  002756  5022               	movf	_p_i2c1_current+1,w,c
 12144  002758  22DA               	addwfc	fsr2h,f,c
 12145  00275A  50DE               	movf	postinc2,w,c
 12146  00275C  10DE               	iorwf	postinc2,w,c
 12147  00275E  B4D8               	btfsc	status,2,c
 12148  002760  D010               	goto	i2l8055
 12149                           
 12150                           ;i2c1.c: 588: {
 12151                           ;i2c1.c: 590: *(p_i2c1_current->pTrFlag) = completion_code;
 12152  002762  EE20 F003          	lfsr	2,3
 12153  002766  5021               	movf	_p_i2c1_current,w,c
 12154  002768  26D9               	addwf	fsr2l,f,c
 12155  00276A  5022               	movf	_p_i2c1_current+1,w,c
 12156  00276C  22DA               	addwfc	fsr2h,f,c
 12157  00276E  CFDE F001          	movff	postinc2,??_I2C1_Stop
 12158  002772  CFDD F002          	movff	postdec2,??_I2C1_Stop+1
 12159  002776  C001  FFD9         	movff	??_I2C1_Stop,fsr2l
 12160  00277A  C002  FFDA         	movff	??_I2C1_Stop+1,fsr2h
 12161  00277E  C003  FFDF         	movff	I2C1_Stop@completion_code,indf2
 12162  002782                     i2l8055:
 12163                           
 12164                           ;i2c1.c: 591: }
 12165                           ;i2c1.c: 594: i2c1_state = S_MASTER_IDLE;
 12166  002782  0E00               	movlw	0
 12167  002784  6E2C               	movwf	_i2c1_state,c
 12168  002786  0012               	return		;funcret
 12169  002788                     __end_of_I2C1_Stop:
 12170                           	opt stack 0
 12171                           tosu	equ	0xFFF
 12172                           tosh	equ	0xFFE
 12173                           tosl	equ	0xFFD
 12174                           pclatu	equ	0xFFB
 12175                           pclath	equ	0xFFA
 12176                           tblptru	equ	0xFF8
 12177                           tblptrh	equ	0xFF7
 12178                           tblptrl	equ	0xFF6
 12179                           tablat	equ	0xFF5
 12180                           prodh	equ	0xFF4
 12181                           prodl	equ	0xFF3
 12182                           intcon	equ	0xFF2
 12183                           postinc0	equ	0xFEE
 12184                           fsr0h	equ	0xFEA
 12185                           fsr0l	equ	0xFE9
 12186                           wreg	equ	0xFE8
 12187                           indf1	equ	0xFE7
 12188                           postinc1	equ	0xFE6
 12189                           fsr1h	equ	0xFE2
 12190                           fsr1l	equ	0xFE1
 12191                           indf2	equ	0xFDF
 12192                           postinc2	equ	0xFDE
 12193                           postdec2	equ	0xFDD
 12194                           plusw2	equ	0xFDB
 12195                           fsr2h	equ	0xFDA
 12196                           fsr2l	equ	0xFD9
 12197                           status	equ	0xFD8
 12198                           
 12199 ;; *************** function _I2C1_FunctionComplete *****************
 12200 ;; Defined at:
 12201 ;;		line 563 in file "mcc_generated_files/i2c1.c"
 12202 ;; Parameters:    Size  Location     Type
 12203 ;;		None
 12204 ;; Auto vars:     Size  Location     Type
 12205 ;;		None
 12206 ;; Return value:  Size  Location     Type
 12207 ;;                  1    wreg      void 
 12208 ;; Registers used:
 12209 ;;		wreg, status,2, status,0
 12210 ;; Tracked objects:
 12211 ;;		On entry : 0/0
 12212 ;;		On exit  : 0/0
 12213 ;;		Unchanged: 0/0
 12214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12219 ;;Total ram usage:        0 bytes
 12220 ;; Hardware stack levels used:    1
 12221 ;; This function calls:
 12222 ;;		Nothing
 12223 ;; This function is called by:
 12224 ;;		_I2C1_ISR
 12225 ;; This function uses a non-reentrant model
 12226 ;;
 12227                           
 12228                           	psect	text52
 12229  00297E                     __ptext52:
 12230                           	opt stack 0
 12231  00297E                     _I2C1_FunctionComplete:
 12232                           	opt stack 22
 12233                           
 12234                           ;i2c1.c: 567: p_i2c1_trb_current++;
 12235                           
 12236                           ;incstack = 0
 12237  00297E  0E05               	movlw	5
 12238  002980  2623               	addwf	_p_i2c1_trb_current,f,c
 12239  002982  0E00               	movlw	0
 12240  002984  2224               	addwfc	_p_i2c1_trb_current+1,f,c
 12241                           
 12242                           ;i2c1.c: 570: if(--i2c1_trb_count == 0)
 12243  002986  2E2B               	decfsz	_i2c1_trb_count,f,c
 12244  002988  D003               	goto	i2l8063
 12245                           
 12246                           ;i2c1.c: 571: {
 12247                           ;i2c1.c: 572: i2c1_state = S_MASTER_SEND_STOP;
 12248  00298A  0E04               	movlw	4
 12249  00298C  6E2C               	movwf	_i2c1_state,c
 12250                           
 12251                           ;i2c1.c: 573: }
 12252  00298E  0012               	return	
 12253  002990                     i2l8063:
 12254                           
 12255                           ;i2c1.c: 574: else
 12256                           ;i2c1.c: 575: {
 12257                           ;i2c1.c: 576: i2c1_state = S_MASTER_RESTART;
 12258  002990  0E01               	movlw	1
 12259  002992  6E2C               	movwf	_i2c1_state,c
 12260  002994  0012               	return	
 12261  002996                     __end_of_I2C1_FunctionComplete:
 12262                           	opt stack 0
 12263                           tosu	equ	0xFFF
 12264                           tosh	equ	0xFFE
 12265                           tosl	equ	0xFFD
 12266                           pclatu	equ	0xFFB
 12267                           pclath	equ	0xFFA
 12268                           tblptru	equ	0xFF8
 12269                           tblptrh	equ	0xFF7
 12270                           tblptrl	equ	0xFF6
 12271                           tablat	equ	0xFF5
 12272                           prodh	equ	0xFF4
 12273                           prodl	equ	0xFF3
 12274                           intcon	equ	0xFF2
 12275                           postinc0	equ	0xFEE
 12276                           fsr0h	equ	0xFEA
 12277                           fsr0l	equ	0xFE9
 12278                           wreg	equ	0xFE8
 12279                           indf1	equ	0xFE7
 12280                           postinc1	equ	0xFE6
 12281                           fsr1h	equ	0xFE2
 12282                           fsr1l	equ	0xFE1
 12283                           indf2	equ	0xFDF
 12284                           postinc2	equ	0xFDE
 12285                           postdec2	equ	0xFDD
 12286                           plusw2	equ	0xFDB
 12287                           fsr2h	equ	0xFDA
 12288                           fsr2l	equ	0xFD9
 12289                           status	equ	0xFD8
 12290                           
 12291 ;; *************** function _I2C1_BusCollisionISR *****************
 12292 ;; Defined at:
 12293 ;;		line 728 in file "mcc_generated_files/i2c1.c"
 12294 ;; Parameters:    Size  Location     Type
 12295 ;;		None
 12296 ;; Auto vars:     Size  Location     Type
 12297 ;;		None
 12298 ;; Return value:  Size  Location     Type
 12299 ;;                  1    wreg      void 
 12300 ;; Registers used:
 12301 ;;		None
 12302 ;; Tracked objects:
 12303 ;;		On entry : 0/0
 12304 ;;		On exit  : 0/0
 12305 ;;		Unchanged: 0/0
 12306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12311 ;;Total ram usage:        0 bytes
 12312 ;; Hardware stack levels used:    1
 12313 ;; This function calls:
 12314 ;;		Nothing
 12315 ;; This function is called by:
 12316 ;;		_INTERRUPT_InterruptManager
 12317 ;; This function uses a non-reentrant model
 12318 ;;
 12319                           
 12320                           	psect	text53
 12321  002A5E                     __ptext53:
 12322                           	opt stack 0
 12323  002A5E                     _I2C1_BusCollisionISR:
 12324                           	opt stack 23
 12325                           
 12326                           ;incstack = 0
 12327  002A5E  0012               	return		;funcret
 12328  002A60                     __end_of_I2C1_BusCollisionISR:
 12329                           	opt stack 0
 12330                           tosu	equ	0xFFF
 12331                           tosh	equ	0xFFE
 12332                           tosl	equ	0xFFD
 12333                           pclatu	equ	0xFFB
 12334                           pclath	equ	0xFFA
 12335                           tblptru	equ	0xFF8
 12336                           tblptrh	equ	0xFF7
 12337                           tblptrl	equ	0xFF6
 12338                           tablat	equ	0xFF5
 12339                           prodh	equ	0xFF4
 12340                           prodl	equ	0xFF3
 12341                           intcon	equ	0xFF2
 12342                           postinc0	equ	0xFEE
 12343                           fsr0h	equ	0xFEA
 12344                           fsr0l	equ	0xFE9
 12345                           wreg	equ	0xFE8
 12346                           indf1	equ	0xFE7
 12347                           postinc1	equ	0xFE6
 12348                           fsr1h	equ	0xFE2
 12349                           fsr1l	equ	0xFE1
 12350                           indf2	equ	0xFDF
 12351                           postinc2	equ	0xFDE
 12352                           postdec2	equ	0xFDD
 12353                           plusw2	equ	0xFDB
 12354                           fsr2h	equ	0xFDA
 12355                           fsr2l	equ	0xFD9
 12356                           status	equ	0xFD8
 12357                           
 12358 ;; *************** function _EUSART1_Transmit_ISR *****************
 12359 ;; Defined at:
 12360 ;;		line 155 in file "mcc_generated_files/eusart1.c"
 12361 ;; Parameters:    Size  Location     Type
 12362 ;;		None
 12363 ;; Auto vars:     Size  Location     Type
 12364 ;;		None
 12365 ;; Return value:  Size  Location     Type
 12366 ;;                  1    wreg      void 
 12367 ;; Registers used:
 12368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12369 ;; Tracked objects:
 12370 ;;		On entry : 0/0
 12371 ;;		On exit  : 0/0
 12372 ;;		Unchanged: 0/0
 12373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12378 ;;Total ram usage:        0 bytes
 12379 ;; Hardware stack levels used:    1
 12380 ;; This function calls:
 12381 ;;		Nothing
 12382 ;; This function is called by:
 12383 ;;		_INTERRUPT_InterruptManager
 12384 ;; This function uses a non-reentrant model
 12385 ;;
 12386                           
 12387                           	psect	text54
 12388  0027F8                     __ptext54:
 12389                           	opt stack 0
 12390  0027F8                     _EUSART1_Transmit_ISR:
 12391                           	opt stack 23
 12392                           
 12393                           ;eusart1.c: 159: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
 12394                           
 12395                           ;incstack = 0
 12396  0027F8  0E40               	movlw	64
 12397  0027FA  0100               	movlb	0	; () banked
 12398  0027FC  61FF               	cpfslt	_eusart1TxBufferRemaining& (0+255),b	;volatile
 12399  0027FE  D013               	goto	i2l1272
 12400                           
 12401                           ; BSR set to: 0
 12402                           ;eusart1.c: 160: {
 12403                           ;eusart1.c: 161: TX1REG = eusart1TxBuffer[eusart1TxTail++];
 12404  002800  5027               	movf	_eusart1TxTail,w,c
 12405  002802  0D01               	mullw	1
 12406  002804  0E00               	movlw	low _eusart1TxBuffer
 12407  002806  24F3               	addwf	prodl,w,c
 12408  002808  6ED9               	movwf	fsr2l,c
 12409  00280A  0E02               	movlw	high _eusart1TxBuffer
 12410  00280C  20F4               	addwfc	prodh,w,c
 12411  00280E  6EDA               	movwf	fsr2h,c
 12412  002810  50DF               	movf	indf2,w,c
 12413  002812  6E9A               	movwf	3994,c	;volatile
 12414                           
 12415                           ; BSR set to: 0
 12416  002814  2A27               	incf	_eusart1TxTail,f,c
 12417                           
 12418                           ; BSR set to: 0
 12419                           ;eusart1.c: 162: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
 12420  002816  0E3F               	movlw	63
 12421  002818  6427               	cpfsgt	_eusart1TxTail,c
 12422  00281A  D002               	goto	i2l6539
 12423                           
 12424                           ; BSR set to: 0
 12425                           ;eusart1.c: 163: {
 12426                           ;eusart1.c: 164: eusart1TxTail = 0;
 12427  00281C  0E00               	movlw	0
 12428  00281E  6E27               	movwf	_eusart1TxTail,c
 12429  002820                     i2l6539:
 12430                           
 12431                           ; BSR set to: 0
 12432                           ;eusart1.c: 165: }
 12433                           ;eusart1.c: 166: eusart1TxBufferRemaining++;
 12434  002820  0100               	movlb	0	; () banked
 12435  002822  2BFF               	incf	_eusart1TxBufferRemaining& (0+255),f,b	;volatile
 12436                           
 12437                           ;eusart1.c: 167: }
 12438  002824  0012               	return	
 12439  002826                     i2l1272:
 12440                           
 12441                           ; BSR set to: 0
 12442                           ;eusart1.c: 168: else
 12443                           ;eusart1.c: 169: {
 12444                           ;eusart1.c: 170: PIE3bits.TX1IE = 0;
 12445  002826  010E               	movlb	14	; () banked
 12446  002828  99C5               	bcf	197,4,b	;volatile
 12447  00282A  0012               	return	
 12448  00282C                     __end_of_EUSART1_Transmit_ISR:
 12449                           	opt stack 0
 12450                           tosu	equ	0xFFF
 12451                           tosh	equ	0xFFE
 12452                           tosl	equ	0xFFD
 12453                           pclatu	equ	0xFFB
 12454                           pclath	equ	0xFFA
 12455                           tblptru	equ	0xFF8
 12456                           tblptrh	equ	0xFF7
 12457                           tblptrl	equ	0xFF6
 12458                           tablat	equ	0xFF5
 12459                           prodh	equ	0xFF4
 12460                           prodl	equ	0xFF3
 12461                           intcon	equ	0xFF2
 12462                           postinc0	equ	0xFEE
 12463                           fsr0h	equ	0xFEA
 12464                           fsr0l	equ	0xFE9
 12465                           wreg	equ	0xFE8
 12466                           indf1	equ	0xFE7
 12467                           postinc1	equ	0xFE6
 12468                           fsr1h	equ	0xFE2
 12469                           fsr1l	equ	0xFE1
 12470                           indf2	equ	0xFDF
 12471                           postinc2	equ	0xFDE
 12472                           postdec2	equ	0xFDD
 12473                           plusw2	equ	0xFDB
 12474                           fsr2h	equ	0xFDA
 12475                           fsr2l	equ	0xFD9
 12476                           status	equ	0xFD8
 12477                           
 12478 ;; *************** function _EUSART1_Receive_ISR *****************
 12479 ;; Defined at:
 12480 ;;		line 174 in file "mcc_generated_files/eusart1.c"
 12481 ;; Parameters:    Size  Location     Type
 12482 ;;		None
 12483 ;; Auto vars:     Size  Location     Type
 12484 ;;		None
 12485 ;; Return value:  Size  Location     Type
 12486 ;;                  1    wreg      void 
 12487 ;; Registers used:
 12488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12489 ;; Tracked objects:
 12490 ;;		On entry : 0/0
 12491 ;;		On exit  : 0/0
 12492 ;;		Unchanged: 0/0
 12493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12498 ;;Total ram usage:        0 bytes
 12499 ;; Hardware stack levels used:    1
 12500 ;; Hardware stack levels required when called:    5
 12501 ;; This function calls:
 12502 ;;		_hxISRHandle
 12503 ;; This function is called by:
 12504 ;;		_INTERRUPT_InterruptManager
 12505 ;; This function uses a non-reentrant model
 12506 ;;
 12507                           
 12508                           	psect	text55
 12509  002A10                     __ptext55:
 12510                           	opt stack 0
 12511  002A10                     _EUSART1_Receive_ISR:
 12512                           	opt stack 18
 12513                           
 12514                           ;eusart1.c: 177: if(1 == RC1STAbits.OERR)
 12515                           
 12516                           ;incstack = 0
 12517  002A10  A29D               	btfss	3997,1,c	;volatile
 12518  002A12  D002               	goto	i2l6545
 12519                           
 12520                           ;eusart1.c: 178: {
 12521                           ;eusart1.c: 181: RC1STAbits.CREN = 0;
 12522  002A14  989D               	bcf	3997,4,c	;volatile
 12523                           
 12524                           ;eusart1.c: 182: RC1STAbits.CREN = 1;
 12525  002A16  889D               	bsf	3997,4,c	;volatile
 12526  002A18                     i2l6545:
 12527                           
 12528                           ;eusart1.c: 183: }
 12529                           ;eusart1.c: 185: hxISRHandle(RC1REG);
 12530  002A18  5099               	movf	3993,w,c	;volatile
 12531  002A1A  ECCD  F00E         	call	_hxISRHandle
 12532  002A1E  0012               	return		;funcret
 12533  002A20                     __end_of_EUSART1_Receive_ISR:
 12534                           	opt stack 0
 12535                           tosu	equ	0xFFF
 12536                           tosh	equ	0xFFE
 12537                           tosl	equ	0xFFD
 12538                           pclatu	equ	0xFFB
 12539                           pclath	equ	0xFFA
 12540                           tblptru	equ	0xFF8
 12541                           tblptrh	equ	0xFF7
 12542                           tblptrl	equ	0xFF6
 12543                           tablat	equ	0xFF5
 12544                           prodh	equ	0xFF4
 12545                           prodl	equ	0xFF3
 12546                           intcon	equ	0xFF2
 12547                           postinc0	equ	0xFEE
 12548                           fsr0h	equ	0xFEA
 12549                           fsr0l	equ	0xFE9
 12550                           wreg	equ	0xFE8
 12551                           indf1	equ	0xFE7
 12552                           postinc1	equ	0xFE6
 12553                           fsr1h	equ	0xFE2
 12554                           fsr1l	equ	0xFE1
 12555                           indf2	equ	0xFDF
 12556                           postinc2	equ	0xFDE
 12557                           postdec2	equ	0xFDD
 12558                           plusw2	equ	0xFDB
 12559                           fsr2h	equ	0xFDA
 12560                           fsr2l	equ	0xFD9
 12561                           status	equ	0xFD8
 12562                           
 12563 ;; *************** function _hxISRHandle *****************
 12564 ;; Defined at:
 12565 ;;		line 28 in file "HX_CommInterface.c"
 12566 ;; Parameters:    Size  Location     Type
 12567 ;;  data            1    wreg     unsigned char 
 12568 ;; Auto vars:     Size  Location     Type
 12569 ;;  data            1   16[COMRAM] unsigned char 
 12570 ;; Return value:  Size  Location     Type
 12571 ;;                  1    wreg      void 
 12572 ;; Registers used:
 12573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12574 ;; Tracked objects:
 12575 ;;		On entry : 0/0
 12576 ;;		On exit  : 0/0
 12577 ;;		Unchanged: 0/0
 12578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12580 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12581 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12582 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12583 ;;Total ram usage:        8 bytes
 12584 ;; Hardware stack levels used:    1
 12585 ;; Hardware stack levels required when called:    4
 12586 ;; This function calls:
 12587 ;;		_hxCmdFilter
 12588 ;;		_hxStartTimer
 12589 ;;		i2_hxFlushInputBuffer
 12590 ;;		i2_hxStopTimer
 12591 ;; This function is called by:
 12592 ;;		_EUSART1_Receive_ISR
 12593 ;; This function uses a non-reentrant model
 12594 ;;
 12595                           
 12596                           	psect	text56
 12597  001D9A                     __ptext56:
 12598                           	opt stack 0
 12599  001D9A                     _hxISRHandle:
 12600                           	opt stack 18
 12601                           
 12602                           ;incstack = 0
 12603                           ;hxISRHandle@data stored from wreg
 12604  001D9A  6E11               	movwf	hxISRHandle@data,c
 12605                           
 12606                           ;HX_CommInterface.c: 30: static uint8_t currentByteCounter = 0;
 12607                           ;HX_CommInterface.c: 31: static uint8_t rxPktSizeFlag = 0;
 12608                           ;HX_CommInterface.c: 32: static uint8_t rxHxCmdFlag = 0;
 12609                           ;HX_CommInterface.c: 33: static uint8_t pktSize = 0;
 12610                           ;HX_CommInterface.c: 34: static uint8_t rxHxPktFlag = 0;
 12611                           ;HX_CommInterface.c: 36: hxStartTimer(0xF63C);
 12612  001D9C  0EF6               	movlw	246
 12613  001D9E  6E04               	movwf	hxStartTimer@timerVal+1,c
 12614  001DA0  0E3C               	movlw	60
 12615  001DA2  6E03               	movwf	hxStartTimer@timerVal,c
 12616  001DA4  ECFF  F014         	call	_hxStartTimer	;wreg free
 12617                           
 12618                           ;HX_CommInterface.c: 38: if (0 == rxHxCmdFlag)
 12619  001DA8  502F               	movf	hxISRHandle@rxHxCmdFlag,w,c
 12620  001DAA  A4D8               	btfss	status,2,c
 12621  001DAC  D010               	goto	i2l5443
 12622                           
 12623                           ;HX_CommInterface.c: 39: {
 12624                           ;HX_CommInterface.c: 40: hx_pcCmd = data;
 12625  001DAE  C011  F035         	movff	hxISRHandle@data,_hx_pcCmd
 12626                           
 12627                           ;HX_CommInterface.c: 41: if (hx_pcCmd == 0x00)
 12628  001DB2  5035               	movf	_hx_pcCmd,w,c
 12629  001DB4  A4D8               	btfss	status,2,c
 12630  001DB6  D004               	goto	i2l5439
 12631                           
 12632                           ;HX_CommInterface.c: 42: {
 12633                           ;HX_CommInterface.c: 43: hxFlushInputBuffer();
 12634  001DB8  ECA4  F014         	call	i2_hxFlushInputBuffer	;wreg free
 12635                           
 12636                           ;HX_CommInterface.c: 44: rxHxPktFlag = 0;
 12637  001DBC  0E00               	movlw	0
 12638  001DBE  D001               	goto	L28
 12639  001DC0                     i2l5439:
 12640                           
 12641                           ;HX_CommInterface.c: 46: else
 12642                           ;HX_CommInterface.c: 47: {
 12643                           ;HX_CommInterface.c: 48: rxHxPktFlag = 1;
 12644  001DC0  0E01               	movlw	1
 12645  001DC2                     L28:
 12646  001DC2  6E2D               	movwf	hxISRHandle@rxHxPktFlag,c
 12647                           
 12648                           ;HX_CommInterface.c: 49: }
 12649                           ;HX_CommInterface.c: 50: hx_checksum = data;
 12650  001DC4  C011  F036         	movff	hxISRHandle@data,_hx_checksum
 12651                           
 12652                           ;HX_CommInterface.c: 51: rxHxCmdFlag = 1;
 12653  001DC8  0E01               	movlw	1
 12654  001DCA  6E2F               	movwf	hxISRHandle@rxHxCmdFlag,c
 12655                           
 12656                           ;HX_CommInterface.c: 52: }
 12657  001DCC  0012               	return	
 12658  001DCE                     i2l5443:
 12659                           
 12660                           ;HX_CommInterface.c: 53: else if (0 == rxPktSizeFlag)
 12661  001DCE  5030               	movf	hxISRHandle@rxPktSizeFlag,w,c
 12662  001DD0  A4D8               	btfss	status,2,c
 12663  001DD2  D007               	goto	i2l5451
 12664                           
 12665                           ;HX_CommInterface.c: 54: {
 12666                           ;HX_CommInterface.c: 55: pktSize = data;
 12667  001DD4  C011  F02E         	movff	hxISRHandle@data,hxISRHandle@pktSize
 12668                           
 12669                           ;HX_CommInterface.c: 56: hx_checksum += data;
 12670  001DD8  5011               	movf	hxISRHandle@data,w,c
 12671  001DDA  2636               	addwf	_hx_checksum,f,c
 12672                           
 12673                           ;HX_CommInterface.c: 57: rxPktSizeFlag = 1;
 12674  001DDC  0E01               	movlw	1
 12675  001DDE  6E30               	movwf	hxISRHandle@rxPktSizeFlag,c
 12676                           
 12677                           ;HX_CommInterface.c: 58: }
 12678  001DE0  0012               	return	
 12679  001DE2                     i2l5451:
 12680                           
 12681                           ;HX_CommInterface.c: 59: else if (currentByteCounter >= pktSize - 1)
 12682  001DE2  0EFF               	movlw	255
 12683  001DE4  6E0A               	movwf	??_hxISRHandle& (0+255),c
 12684  001DE6  0EFF               	movlw	255
 12685  001DE8  6E0B               	movwf	(??_hxISRHandle+1)& (0+255),c
 12686  001DEA  502E               	movf	hxISRHandle@pktSize,w,c
 12687  001DEC  6E0C               	movwf	(??_hxISRHandle+2)& (0+255),c
 12688  001DEE  6A0D               	clrf	(??_hxISRHandle+3)& (0+255),c
 12689  001DF0  500A               	movf	??_hxISRHandle,w,c
 12690  001DF2  260C               	addwf	??_hxISRHandle+2,f,c
 12691  001DF4  500B               	movf	??_hxISRHandle+1,w,c
 12692  001DF6  220D               	addwfc	??_hxISRHandle+3,f,c
 12693  001DF8  5031               	movf	hxISRHandle@currentByteCounter,w,c
 12694  001DFA  6E0E               	movwf	(??_hxISRHandle+4)& (0+255),c
 12695  001DFC  6A0F               	clrf	(??_hxISRHandle+5)& (0+255),c
 12696  001DFE  500C               	movf	??_hxISRHandle+2,w,c
 12697  001E00  5C0E               	subwf	??_hxISRHandle+4,w,c
 12698  001E02  500F               	movf	??_hxISRHandle+5,w,c
 12699  001E04  0A80               	xorlw	128
 12700  001E06  6E10               	movwf	(??_hxISRHandle+6)& (0+255),c
 12701  001E08  500D               	movf	??_hxISRHandle+3,w,c
 12702  001E0A  0A80               	xorlw	128
 12703  001E0C  5810               	subwfb	(??_hxISRHandle+6)& (0+255),w,c
 12704  001E0E  A0D8               	btfss	status,0,c
 12705  001E10  D018               	goto	i2l5465
 12706                           
 12707                           ;HX_CommInterface.c: 60: {
 12708                           ;HX_CommInterface.c: 62: hx_checksum += data;
 12709  001E12  5011               	movf	hxISRHandle@data,w,c
 12710  001E14  2636               	addwf	_hx_checksum,f,c
 12711                           
 12712                           ;HX_CommInterface.c: 63: if (hx_checksum == 0x00)
 12713  001E16  5036               	movf	_hx_checksum,w,c
 12714  001E18  A4D8               	btfss	status,2,c
 12715  001E1A  D002               	goto	i2l5459
 12716                           
 12717                           ;HX_CommInterface.c: 64: {
 12718                           ;HX_CommInterface.c: 65: hx_pktState = 0x01;
 12719  001E1C  0E01               	movlw	1
 12720  001E1E  D001               	goto	L29
 12721  001E20                     i2l5459:
 12722                           
 12723                           ;HX_CommInterface.c: 67: else
 12724                           ;HX_CommInterface.c: 68: {
 12725                           ;HX_CommInterface.c: 69: hx_pktState = 0x20;
 12726  001E20  0E20               	movlw	32
 12727  001E22                     L29:
 12728  001E22  6E34               	movwf	_hx_pktState,c
 12729                           
 12730                           ;HX_CommInterface.c: 70: }
 12731                           ;HX_CommInterface.c: 73: rxHxCmdFlag = 0;
 12732  001E24  0E00               	movlw	0
 12733  001E26  6E2F               	movwf	hxISRHandle@rxHxCmdFlag,c
 12734                           
 12735                           ;HX_CommInterface.c: 74: rxPktSizeFlag = 0;
 12736  001E28  0E00               	movlw	0
 12737  001E2A  6E30               	movwf	hxISRHandle@rxPktSizeFlag,c
 12738                           
 12739                           ;HX_CommInterface.c: 75: currentByteCounter = 0;
 12740  001E2C  0E00               	movlw	0
 12741  001E2E  6E31               	movwf	hxISRHandle@currentByteCounter,c
 12742                           
 12743                           ;HX_CommInterface.c: 76: rxHxPktFlag = 0;
 12744  001E30  0E00               	movlw	0
 12745  001E32  6E2D               	movwf	hxISRHandle@rxHxPktFlag,c
 12746                           
 12747                           ;HX_CommInterface.c: 79: hx_rxFullPktFlag = 1;
 12748  001E34  0E01               	movlw	1
 12749  001E36  6E33               	movwf	_hx_rxFullPktFlag,c
 12750                           
 12751                           ;HX_CommInterface.c: 82: hxStopTimer();
 12752  001E38  ECF6  F014         	call	i2_hxStopTimer	;wreg free
 12753                           
 12754                           ;HX_CommInterface.c: 85: hxCmdFilter();
 12755  001E3C  EC8C  F00C         	call	_hxCmdFilter	;wreg free
 12756                           
 12757                           ;HX_CommInterface.c: 87: }
 12758  001E40  0012               	return	
 12759  001E42                     i2l5465:
 12760                           
 12761                           ;HX_CommInterface.c: 88: else
 12762                           ;HX_CommInterface.c: 89: {
 12763                           ;HX_CommInterface.c: 90: if (0 == rxHxPktFlag)
 12764  001E42  502D               	movf	hxISRHandle@rxHxPktFlag,w,c
 12765  001E44  A4D8               	btfss	status,2,c
 12766  001E46  D005               	goto	i2l5471
 12767                           
 12768                           ;HX_CommInterface.c: 91: {
 12769                           ;HX_CommInterface.c: 92: hx_pktCmd = data;
 12770  001E48  C011  F071         	movff	hxISRHandle@data,_hx_pktCmd
 12771                           
 12772                           ;HX_CommInterface.c: 93: rxHxPktFlag = 1;
 12773  001E4C  0E01               	movlw	1
 12774  001E4E  6E2D               	movwf	hxISRHandle@rxHxPktFlag,c
 12775                           
 12776                           ;HX_CommInterface.c: 94: }
 12777  001E50  D00B               	goto	i2l5475
 12778  001E52                     i2l5471:
 12779                           
 12780                           ;HX_CommInterface.c: 95: else
 12781                           ;HX_CommInterface.c: 96: {
 12782                           ;HX_CommInterface.c: 97: hx_inData[hx_inDataIndex++] = data;
 12783  001E52  5037               	movf	_hx_inDataIndex,w,c
 12784  001E54  0D01               	mullw	1
 12785  001E56  0E60               	movlw	low _hx_inData
 12786  001E58  24F3               	addwf	prodl,w,c
 12787  001E5A  6ED9               	movwf	fsr2l,c
 12788  001E5C  0E02               	movlw	high _hx_inData
 12789  001E5E  20F4               	addwfc	prodh,w,c
 12790  001E60  6EDA               	movwf	fsr2h,c
 12791  001E62  C011  FFDF         	movff	hxISRHandle@data,indf2
 12792  001E66  2A37               	incf	_hx_inDataIndex,f,c
 12793  001E68                     i2l5475:
 12794                           
 12795                           ;HX_CommInterface.c: 98: }
 12796                           ;HX_CommInterface.c: 100: hx_checksum += data;
 12797  001E68  5011               	movf	hxISRHandle@data,w,c
 12798  001E6A  2636               	addwf	_hx_checksum,f,c
 12799                           
 12800                           ;HX_CommInterface.c: 101: currentByteCounter++;
 12801  001E6C  2A31               	incf	hxISRHandle@currentByteCounter,f,c
 12802  001E6E  0012               	return	
 12803  001E70                     __end_of_hxISRHandle:
 12804                           	opt stack 0
 12805                           tosu	equ	0xFFF
 12806                           tosh	equ	0xFFE
 12807                           tosl	equ	0xFFD
 12808                           pclatu	equ	0xFFB
 12809                           pclath	equ	0xFFA
 12810                           tblptru	equ	0xFF8
 12811                           tblptrh	equ	0xFF7
 12812                           tblptrl	equ	0xFF6
 12813                           tablat	equ	0xFF5
 12814                           prodh	equ	0xFF4
 12815                           prodl	equ	0xFF3
 12816                           intcon	equ	0xFF2
 12817                           postinc0	equ	0xFEE
 12818                           fsr0h	equ	0xFEA
 12819                           fsr0l	equ	0xFE9
 12820                           wreg	equ	0xFE8
 12821                           indf1	equ	0xFE7
 12822                           postinc1	equ	0xFE6
 12823                           fsr1h	equ	0xFE2
 12824                           fsr1l	equ	0xFE1
 12825                           indf2	equ	0xFDF
 12826                           postinc2	equ	0xFDE
 12827                           postdec2	equ	0xFDD
 12828                           plusw2	equ	0xFDB
 12829                           fsr2h	equ	0xFDA
 12830                           fsr2l	equ	0xFD9
 12831                           status	equ	0xFD8
 12832                           
 12833 ;; *************** function i2_hxStopTimer *****************
 12834 ;; Defined at:
 12835 ;;		line 266 in file "HX_CommInterface.c"
 12836 ;; Parameters:    Size  Location     Type
 12837 ;;		None
 12838 ;; Auto vars:     Size  Location     Type
 12839 ;;		None
 12840 ;; Return value:  Size  Location     Type
 12841 ;;                  1    wreg      void 
 12842 ;; Registers used:
 12843 ;;		wreg, status,2, cstack
 12844 ;; Tracked objects:
 12845 ;;		On entry : 0/0
 12846 ;;		On exit  : 0/0
 12847 ;;		Unchanged: 0/0
 12848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12853 ;;Total ram usage:        0 bytes
 12854 ;; Hardware stack levels used:    1
 12855 ;; Hardware stack levels required when called:    1
 12856 ;; This function calls:
 12857 ;;		i2_TMR0_StopTimer
 12858 ;;		i2_TMR0_Write16bitTimer
 12859 ;; This function is called by:
 12860 ;;		_hxISRHandle
 12861 ;; This function uses a non-reentrant model
 12862 ;;
 12863                           
 12864                           	psect	text57
 12865  0029EC                     __ptext57:
 12866                           	opt stack 0
 12867  0029EC                     i2_hxStopTimer:
 12868                           	opt stack 20
 12869                           
 12870                           ;HX_CommInterface.c: 268: TMR0_StopTimer();
 12871                           
 12872                           ;incstack = 0
 12873  0029EC  EC29  F015         	call	i2_TMR0_StopTimer	;wreg free
 12874                           
 12875                           ;HX_CommInterface.c: 269: TMR0_Write16bitTimer(0xF63C);
 12876  0029F0  0EF6               	movlw	246
 12877  0029F2  6E02               	movwf	i2TMR0_Write16bitTimer@timerVal+1,c
 12878  0029F4  0E3C               	movlw	60
 12879  0029F6  6E01               	movwf	i2TMR0_Write16bitTimer@timerVal,c
 12880  0029F8  EC1D  F015         	call	i2_TMR0_Write16bitTimer	;wreg free
 12881  0029FC  0012               	return		;funcret
 12882  0029FE                     __end_ofi2_hxStopTimer:
 12883                           	opt stack 0
 12884                           tosu	equ	0xFFF
 12885                           tosh	equ	0xFFE
 12886                           tosl	equ	0xFFD
 12887                           pclatu	equ	0xFFB
 12888                           pclath	equ	0xFFA
 12889                           tblptru	equ	0xFF8
 12890                           tblptrh	equ	0xFF7
 12891                           tblptrl	equ	0xFF6
 12892                           tablat	equ	0xFF5
 12893                           prodh	equ	0xFF4
 12894                           prodl	equ	0xFF3
 12895                           intcon	equ	0xFF2
 12896                           postinc0	equ	0xFEE
 12897                           fsr0h	equ	0xFEA
 12898                           fsr0l	equ	0xFE9
 12899                           wreg	equ	0xFE8
 12900                           indf1	equ	0xFE7
 12901                           postinc1	equ	0xFE6
 12902                           fsr1h	equ	0xFE2
 12903                           fsr1l	equ	0xFE1
 12904                           indf2	equ	0xFDF
 12905                           postinc2	equ	0xFDE
 12906                           postdec2	equ	0xFDD
 12907                           plusw2	equ	0xFDB
 12908                           fsr2h	equ	0xFDA
 12909                           fsr2l	equ	0xFD9
 12910                           status	equ	0xFD8
 12911                           
 12912 ;; *************** function i2_TMR0_StopTimer *****************
 12913 ;; Defined at:
 12914 ;;		line 100 in file "mcc_generated_files/tmr0.c"
 12915 ;; Parameters:    Size  Location     Type
 12916 ;;		None
 12917 ;; Auto vars:     Size  Location     Type
 12918 ;;		None
 12919 ;; Return value:  Size  Location     Type
 12920 ;;                  1    wreg      void 
 12921 ;; Registers used:
 12922 ;;		None
 12923 ;; Tracked objects:
 12924 ;;		On entry : 0/0
 12925 ;;		On exit  : 0/0
 12926 ;;		Unchanged: 0/0
 12927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12932 ;;Total ram usage:        0 bytes
 12933 ;; Hardware stack levels used:    1
 12934 ;; This function calls:
 12935 ;;		Nothing
 12936 ;; This function is called by:
 12937 ;;		i2_hxStopTimer
 12938 ;; This function uses a non-reentrant model
 12939 ;;
 12940                           
 12941                           	psect	text58
 12942  002A52                     __ptext58:
 12943                           	opt stack 0
 12944  002A52                     i2_TMR0_StopTimer:
 12945                           	opt stack 20
 12946                           
 12947                           ;tmr0.c: 103: T0CON0bits.T0EN = 0;
 12948                           
 12949                           ;incstack = 0
 12950  002A52  9ED5               	bcf	4053,7,c	;volatile
 12951  002A54  0012               	return		;funcret
 12952  002A56                     __end_ofi2_TMR0_StopTimer:
 12953                           	opt stack 0
 12954                           tosu	equ	0xFFF
 12955                           tosh	equ	0xFFE
 12956                           tosl	equ	0xFFD
 12957                           pclatu	equ	0xFFB
 12958                           pclath	equ	0xFFA
 12959                           tblptru	equ	0xFF8
 12960                           tblptrh	equ	0xFF7
 12961                           tblptrl	equ	0xFF6
 12962                           tablat	equ	0xFF5
 12963                           prodh	equ	0xFF4
 12964                           prodl	equ	0xFF3
 12965                           intcon	equ	0xFF2
 12966                           postinc0	equ	0xFEE
 12967                           fsr0h	equ	0xFEA
 12968                           fsr0l	equ	0xFE9
 12969                           wreg	equ	0xFE8
 12970                           indf1	equ	0xFE7
 12971                           postinc1	equ	0xFE6
 12972                           fsr1h	equ	0xFE2
 12973                           fsr1l	equ	0xFE1
 12974                           indf2	equ	0xFDF
 12975                           postinc2	equ	0xFDE
 12976                           postdec2	equ	0xFDD
 12977                           plusw2	equ	0xFDB
 12978                           fsr2h	equ	0xFDA
 12979                           fsr2l	equ	0xFD9
 12980                           status	equ	0xFD8
 12981                           
 12982 ;; *************** function _hxCmdFilter *****************
 12983 ;; Defined at:
 12984 ;;		line 105 in file "HX_CommInterface.c"
 12985 ;; Parameters:    Size  Location     Type
 12986 ;;		None
 12987 ;; Auto vars:     Size  Location     Type
 12988 ;;  i               1    8[COMRAM] unsigned char 
 12989 ;; Return value:  Size  Location     Type
 12990 ;;                  1    wreg      void 
 12991 ;; Registers used:
 12992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12993 ;; Tracked objects:
 12994 ;;		On entry : 0/0
 12995 ;;		On exit  : 0/0
 12996 ;;		Unchanged: 0/0
 12997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12999 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13001 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13002 ;;Total ram usage:        1 bytes
 13003 ;; Hardware stack levels used:    1
 13004 ;; Hardware stack levels required when called:    3
 13005 ;; This function calls:
 13006 ;;		_hxSetupPacket1
 13007 ;;		_hxSetupPacket2
 13008 ;;		_hxStartTimer
 13009 ;;		i2_hxFlushInputBuffer
 13010 ;;		i2_hxFlushMainDataBuffer
 13011 ;;		i2_hxFlushOutputBuffer
 13012 ;; This function is called by:
 13013 ;;		_hxISRHandle
 13014 ;; This function uses a non-reentrant model
 13015 ;;
 13016                           
 13017                           	psect	text59
 13018  001918                     __ptext59:
 13019                           	opt stack 0
 13020  001918                     _hxCmdFilter:
 13021                           	opt stack 18
 13022                           
 13023                           ;HX_CommInterface.c: 111: if (hx_pktState == 0x00)
 13024                           
 13025                           ;incstack = 0
 13026  001918  5034               	movf	_hx_pktState,w,c
 13027  00191A  A4D8               	btfss	status,2,c
 13028  00191C  D008               	goto	i2l4869
 13029                           
 13030                           ;HX_CommInterface.c: 112: {
 13031                           ;HX_CommInterface.c: 113: hxSetupPacket1(hx_pcCmd, hx_pktState);
 13032  00191E  C034  F006         	movff	_hx_pktState,hxSetupPacket1@data
 13033  001922  5035               	movf	_hx_pcCmd,w,c
 13034  001924  EC6C  F012         	call	_hxSetupPacket1
 13035                           
 13036                           ;HX_CommInterface.c: 114: hx_txPacketFlag = 1;
 13037  001928  0E01               	movlw	1
 13038  00192A  6E3F               	movwf	_hx_txPacketFlag,c
 13039                           
 13040                           ;HX_CommInterface.c: 115: return;
 13041  00192C  0012               	return	
 13042  00192E                     i2l4869:
 13043                           
 13044                           ;HX_CommInterface.c: 116: }
 13045                           ;HX_CommInterface.c: 118: if (hx_pcCmd != 0x02)
 13046  00192E  0E02               	movlw	2
 13047  001930  1835               	xorwf	_hx_pcCmd,w,c
 13048  001932  B4D8               	btfsc	status,2,c
 13049  001934  D095               	goto	i2l4921
 13050                           
 13051                           ;HX_CommInterface.c: 119: {
 13052                           ;HX_CommInterface.c: 120: hxStartTimer(0xF63C);
 13053  001936  0EF6               	movlw	246
 13054  001938  6E04               	movwf	hxStartTimer@timerVal+1,c
 13055  00193A  0E3C               	movlw	60
 13056  00193C  6E03               	movwf	hxStartTimer@timerVal,c
 13057  00193E  ECFF  F014         	call	_hxStartTimer	;wreg free
 13058                           
 13059                           ;HX_CommInterface.c: 122: switch (hx_pcCmd)
 13060  001942  D071               	goto	i2l4919
 13061  001944                     i2l4873:
 13062                           
 13063                           ;HX_CommInterface.c: 125: hxSetupPacket1(hx_pcCmd, hx_pktState);
 13064  001944  C034  F006         	movff	_hx_pktState,hxSetupPacket1@data
 13065  001948  5035               	movf	_hx_pcCmd,w,c
 13066  00194A  EC6C  F012         	call	_hxSetupPacket1
 13067                           
 13068                           ;HX_CommInterface.c: 126: break;
 13069  00194E  D0A9               	goto	i2l4941
 13070  001950                     i2l4875:
 13071                           
 13072                           ;HX_CommInterface.c: 131: hxSetupPacket1(hx_pcCmd, hx_state);
 13073  001950  C03E  F006         	movff	_hx_state,hxSetupPacket1@data
 13074  001954  5035               	movf	_hx_pcCmd,w,c
 13075  001956  EC6C  F012         	call	_hxSetupPacket1
 13076                           
 13077                           ;HX_CommInterface.c: 132: break;
 13078  00195A  D0A3               	goto	i2l4941
 13079  00195C                     i2l4877:
 13080                           
 13081                           ;HX_CommInterface.c: 135: hxSetupPacket2(0x03);
 13082  00195C  0E03               	movlw	3
 13083  00195E  EC2B  F011         	call	_hxSetupPacket2
 13084                           
 13085                           ;HX_CommInterface.c: 136: break;
 13086  001962  D09F               	goto	i2l4941
 13087  001964                     i2l4879:
 13088                           
 13089                           ;HX_CommInterface.c: 139: hxFlushInputBuffer();
 13090  001964  ECA4  F014         	call	i2_hxFlushInputBuffer	;wreg free
 13091                           
 13092                           ;HX_CommInterface.c: 140: hxSetupPacket1(hx_pcCmd, 0x01);
 13093  001968  0E01               	movlw	1
 13094  00196A  6E06               	movwf	hxSetupPacket1@data,c
 13095  00196C  5035               	movf	_hx_pcCmd,w,c
 13096  00196E  EC6C  F012         	call	_hxSetupPacket1
 13097                           
 13098                           ;HX_CommInterface.c: 141: break;
 13099  001972  D097               	goto	i2l4941
 13100  001974                     i2l4881:
 13101                           
 13102                           ;HX_CommInterface.c: 145: hxSetupPacket1(hx_pcCmd, 0x01);
 13103  001974  0E01               	movlw	1
 13104  001976  6E06               	movwf	hxSetupPacket1@data,c
 13105  001978  5035               	movf	_hx_pcCmd,w,c
 13106  00197A  EC6C  F012         	call	_hxSetupPacket1
 13107                           
 13108                           ;HX_CommInterface.c: 146: hxFlushMainDataBuffer();
 13109  00197E  ECD6  F014         	call	i2_hxFlushMainDataBuffer	;wreg free
 13110                           
 13111                           ;HX_CommInterface.c: 147: break;
 13112  001982  D08F               	goto	i2l4941
 13113  001984                     i2l4883:
 13114                           
 13115                           ;HX_CommInterface.c: 152: hxFlushMainDataBuffer();
 13116  001984  ECD6  F014         	call	i2_hxFlushMainDataBuffer	;wreg free
 13117                           
 13118                           ;HX_CommInterface.c: 153: hxFlushOutputBuffer();
 13119  001988  ECE1  F014         	call	i2_hxFlushOutputBuffer	;wreg free
 13120                           
 13121                           ;HX_CommInterface.c: 154: hx_mainData[hx_mainDataIndex++] = 0x01;
 13122  00198C  5038               	movf	_hx_mainDataIndex,w,c
 13123  00198E  0D01               	mullw	1
 13124  001990  0E72               	movlw	low _hx_mainData
 13125  001992  24F3               	addwf	prodl,w,c
 13126  001994  6ED9               	movwf	fsr2l,c
 13127  001996  0E00               	movlw	high _hx_mainData
 13128  001998  20F4               	addwfc	prodh,w,c
 13129  00199A  6EDA               	movwf	fsr2h,c
 13130  00199C  0E01               	movlw	1
 13131  00199E  6EDF               	movwf	indf2,c
 13132  0019A0  2A38               	incf	_hx_mainDataIndex,f,c
 13133                           
 13134                           ;HX_CommInterface.c: 155: hx_mainData[hx_mainDataIndex++] = 0x01;
 13135  0019A2  5038               	movf	_hx_mainDataIndex,w,c
 13136  0019A4  0D01               	mullw	1
 13137  0019A6  0E72               	movlw	low _hx_mainData
 13138  0019A8  24F3               	addwf	prodl,w,c
 13139  0019AA  6ED9               	movwf	fsr2l,c
 13140  0019AC  0E00               	movlw	high _hx_mainData
 13141  0019AE  20F4               	addwfc	prodh,w,c
 13142  0019B0  6EDA               	movwf	fsr2h,c
 13143  0019B2  0E01               	movlw	1
 13144  0019B4  6EDF               	movwf	indf2,c
 13145  0019B6  2A38               	incf	_hx_mainDataIndex,f,c
 13146                           
 13147                           ;HX_CommInterface.c: 156: hxSetupPacket2(hx_pcCmd);
 13148  0019B8  5035               	movf	_hx_pcCmd,w,c
 13149  0019BA  EC2B  F011         	call	_hxSetupPacket2
 13150                           
 13151                           ;HX_CommInterface.c: 157: hxFlushMainDataBuffer();
 13152  0019BE  ECD6  F014         	call	i2_hxFlushMainDataBuffer	;wreg free
 13153                           
 13154                           ;HX_CommInterface.c: 158: break;
 13155  0019C2  D06F               	goto	i2l4941
 13156  0019C4                     i2l4897:
 13157                           
 13158                           ;HX_CommInterface.c: 161: hxFlushOutputBuffer();
 13159  0019C4  ECE1  F014         	call	i2_hxFlushOutputBuffer	;wreg free
 13160                           
 13161                           ;HX_CommInterface.c: 162: hxFlushMainDataBuffer();
 13162  0019C8  ECD6  F014         	call	i2_hxFlushMainDataBuffer	;wreg free
 13163                           
 13164                           ;HX_CommInterface.c: 163: for (uint8_t i = 0; i < hx_inDataIndex; i++)
 13165  0019CC  0E00               	movlw	0
 13166  0019CE  6E09               	movwf	hxCmdFilter@i,c
 13167  0019D0  D014               	goto	i2l4907
 13168  0019D2                     i2l4901:
 13169                           
 13170                           ;HX_CommInterface.c: 164: {
 13171                           ;HX_CommInterface.c: 165: hx_mainData[hx_mainDataIndex++] = hx_inData[i];
 13172  0019D2  5009               	movf	hxCmdFilter@i,w,c
 13173  0019D4  0D01               	mullw	1
 13174  0019D6  0E60               	movlw	low _hx_inData
 13175  0019D8  24F3               	addwf	prodl,w,c
 13176  0019DA  6ED9               	movwf	fsr2l,c
 13177  0019DC  0E02               	movlw	high _hx_inData
 13178  0019DE  20F4               	addwfc	prodh,w,c
 13179  0019E0  6EDA               	movwf	fsr2h,c
 13180  0019E2  5038               	movf	_hx_mainDataIndex,w,c
 13181  0019E4  0D01               	mullw	1
 13182  0019E6  0E72               	movlw	low _hx_mainData
 13183  0019E8  24F3               	addwf	prodl,w,c
 13184  0019EA  6EE1               	movwf	fsr1l,c
 13185  0019EC  0E00               	movlw	high _hx_mainData
 13186  0019EE  20F4               	addwfc	prodh,w,c
 13187  0019F0  6EE2               	movwf	fsr1h,c
 13188  0019F2  CFDF FFE7          	movff	indf2,indf1
 13189  0019F6  2A38               	incf	_hx_mainDataIndex,f,c
 13190  0019F8  2A09               	incf	hxCmdFilter@i,f,c
 13191  0019FA                     i2l4907:
 13192  0019FA  5037               	movf	_hx_inDataIndex,w,c
 13193  0019FC  5C09               	subwf	hxCmdFilter@i,w,c
 13194  0019FE  A0D8               	btfss	status,0,c
 13195  001A00  D7E8               	goto	i2l4901
 13196                           
 13197                           ;HX_CommInterface.c: 166: }
 13198                           ;HX_CommInterface.c: 167: hxSetupPacket2(hx_pcCmd);
 13199  001A02  5035               	movf	_hx_pcCmd,w,c
 13200  001A04  EC2B  F011         	call	_hxSetupPacket2
 13201                           
 13202                           ;HX_CommInterface.c: 168: hxFlushMainDataBuffer();
 13203  001A08  ECD6  F014         	call	i2_hxFlushMainDataBuffer	;wreg free
 13204                           
 13205                           ;HX_CommInterface.c: 169: break;
 13206  001A0C  D04A               	goto	i2l4941
 13207  001A0E                     i2l4913:
 13208                           
 13209                           ;HX_CommInterface.c: 172: hxSetupPacket1(hx_pcCmd, hx_debugVar);
 13210  001A0E  C032  F006         	movff	_hx_debugVar,hxSetupPacket1@data
 13211  001A12  5035               	movf	_hx_pcCmd,w,c
 13212  001A14  EC6C  F012         	call	_hxSetupPacket1
 13213                           
 13214                           ;HX_CommInterface.c: 177: break;
 13215                           
 13216                           ;HX_CommInterface.c: 175: case 0x09:
 13217                           
 13218                           ;HX_CommInterface.c: 173: break;
 13219  001A18  D044               	goto	i2l4941
 13220  001A1A                     i2l4915:
 13221                           
 13222                           ;HX_CommInterface.c: 180: hxSetupPacket1(hx_pcCmd, 0xFF);
 13223  001A1A  0EFF               	movlw	255
 13224  001A1C  6E06               	movwf	hxSetupPacket1@data,c
 13225  001A1E  5035               	movf	_hx_pcCmd,w,c
 13226  001A20  EC6C  F012         	call	_hxSetupPacket1
 13227                           
 13228                           ;HX_CommInterface.c: 182: }
 13229                           
 13230                           ;HX_CommInterface.c: 181: break;
 13231  001A24  D03E               	goto	i2l4941
 13232  001A26                     i2l4919:
 13233  001A26  5035               	movf	_hx_pcCmd,w,c
 13234                           
 13235                           ; Switch size 1, requested type "space"
 13236                           ; Number of cases is 9, Range of values is 0 to 9
 13237                           ; switch strategies available:
 13238                           ; Name         Instructions Cycles
 13239                           ; simple_byte           28    15 (average)
 13240                           ;	Chosen strategy is simple_byte
 13241  001A28  0A00               	xorlw	0	; case 0
 13242  001A2A  B4D8               	btfsc	status,2,c
 13243  001A2C  D78B               	goto	i2l4873
 13244  001A2E  0A01               	xorlw	1	; case 1
 13245  001A30  B4D8               	btfsc	status,2,c
 13246  001A32  D78E               	goto	i2l4875
 13247  001A34  0A02               	xorlw	2	; case 3
 13248  001A36  B4D8               	btfsc	status,2,c
 13249  001A38  D791               	goto	i2l4877
 13250  001A3A  0A07               	xorlw	7	; case 4
 13251  001A3C  B4D8               	btfsc	status,2,c
 13252  001A3E  D792               	goto	i2l4879
 13253  001A40  0A01               	xorlw	1	; case 5
 13254  001A42  B4D8               	btfsc	status,2,c
 13255  001A44  D797               	goto	i2l4881
 13256  001A46  0A03               	xorlw	3	; case 6
 13257  001A48  B4D8               	btfsc	status,2,c
 13258  001A4A  D79C               	goto	i2l4883
 13259  001A4C  0A01               	xorlw	1	; case 7
 13260  001A4E  B4D8               	btfsc	status,2,c
 13261  001A50  D7B9               	goto	i2l4897
 13262  001A52  0A0F               	xorlw	15	; case 8
 13263  001A54  B4D8               	btfsc	status,2,c
 13264  001A56  D7DB               	goto	i2l4913
 13265  001A58  0A01               	xorlw	1	; case 9
 13266  001A5A  B4D8               	btfsc	status,2,c
 13267  001A5C  D022               	goto	i2l4941
 13268  001A5E  D7DD               	goto	i2l4915
 13269  001A60                     i2l4921:
 13270                           
 13271                           ;HX_CommInterface.c: 184: else
 13272                           ;HX_CommInterface.c: 185: {
 13273                           ;HX_CommInterface.c: 186: hxFlushMainDataBuffer();
 13274  001A60  ECD6  F014         	call	i2_hxFlushMainDataBuffer	;wreg free
 13275                           
 13276                           ;HX_CommInterface.c: 188: hxStartTimer(0x3CB0);
 13277  001A64  0E3C               	movlw	60
 13278  001A66  6E04               	movwf	hxStartTimer@timerVal+1,c
 13279  001A68  0EB0               	movlw	176
 13280  001A6A  6E03               	movwf	hxStartTimer@timerVal,c
 13281  001A6C  ECFF  F014         	call	_hxStartTimer	;wreg free
 13282                           
 13283                           ;HX_CommInterface.c: 190: if (hx_rxFullPktFlag)
 13284  001A70  5033               	movf	_hx_rxFullPktFlag,w,c
 13285  001A72  B4D8               	btfsc	status,2,c
 13286  001A74  D00C               	goto	i2l4935
 13287                           
 13288                           ;HX_CommInterface.c: 191: {
 13289                           ;HX_CommInterface.c: 192: hxSetupPacket1(0x02, 0x01);
 13290  001A76  0E01               	movlw	1
 13291  001A78  6E06               	movwf	hxSetupPacket1@data,c
 13292  001A7A  0E02               	movlw	2
 13293  001A7C  EC6C  F012         	call	_hxSetupPacket1
 13294                           
 13295                           ;HX_CommInterface.c: 193: hx_txPacketFlag = 1;
 13296  001A80  0E01               	movlw	1
 13297  001A82  6E3F               	movwf	_hx_txPacketFlag,c
 13298                           
 13299                           ;HX_CommInterface.c: 194: hx_startMain = 1;
 13300  001A84  0E01               	movlw	1
 13301  001A86  0100               	movlb	0	; () banked
 13302  001A88  6F70               	movwf	_hx_startMain& (0+255),b
 13303                           
 13304                           ; BSR set to: 0
 13305                           ;HX_CommInterface.c: 195: hx_state = 0x11;
 13306  001A8A  0E11               	movlw	17
 13307  001A8C  D009               	goto	L30
 13308  001A8E                     i2l4935:
 13309                           
 13310                           ;HX_CommInterface.c: 197: else
 13311                           ;HX_CommInterface.c: 198: {
 13312                           ;HX_CommInterface.c: 199: hx_startMain = 0;
 13313  001A8E  0E00               	movlw	0
 13314  001A90  0100               	movlb	0	; () banked
 13315  001A92  6F70               	movwf	_hx_startMain& (0+255),b
 13316                           
 13317                           ; BSR set to: 0
 13318                           ;HX_CommInterface.c: 200: hxSetupPacket1(0x02, 0x00);
 13319  001A94  0E00               	movlw	0
 13320  001A96  6E06               	movwf	hxSetupPacket1@data,c
 13321  001A98  0E02               	movlw	2
 13322  001A9A  EC6C  F012         	call	_hxSetupPacket1
 13323                           
 13324                           ;HX_CommInterface.c: 201: hx_state = 0x43;
 13325  001A9E  0E43               	movlw	67
 13326  001AA0                     L30:
 13327  001AA0  6E3E               	movwf	_hx_state,c
 13328  001AA2                     i2l4941:
 13329                           
 13330                           ;HX_CommInterface.c: 202: }
 13331                           ;HX_CommInterface.c: 203: }
 13332                           ;HX_CommInterface.c: 204: hx_txPacketFlag = 1;
 13333  001AA2  0E01               	movlw	1
 13334  001AA4  6E3F               	movwf	_hx_txPacketFlag,c
 13335  001AA6  0012               	return		;funcret
 13336  001AA8                     __end_of_hxCmdFilter:
 13337                           	opt stack 0
 13338                           tosu	equ	0xFFF
 13339                           tosh	equ	0xFFE
 13340                           tosl	equ	0xFFD
 13341                           pclatu	equ	0xFFB
 13342                           pclath	equ	0xFFA
 13343                           tblptru	equ	0xFF8
 13344                           tblptrh	equ	0xFF7
 13345                           tblptrl	equ	0xFF6
 13346                           tablat	equ	0xFF5
 13347                           prodh	equ	0xFF4
 13348                           prodl	equ	0xFF3
 13349                           intcon	equ	0xFF2
 13350                           postinc0	equ	0xFEE
 13351                           fsr0h	equ	0xFEA
 13352                           fsr0l	equ	0xFE9
 13353                           wreg	equ	0xFE8
 13354                           indf1	equ	0xFE7
 13355                           postinc1	equ	0xFE6
 13356                           fsr1h	equ	0xFE2
 13357                           fsr1l	equ	0xFE1
 13358                           indf2	equ	0xFDF
 13359                           postinc2	equ	0xFDE
 13360                           postdec2	equ	0xFDD
 13361                           plusw2	equ	0xFDB
 13362                           fsr2h	equ	0xFDA
 13363                           fsr2l	equ	0xFD9
 13364                           status	equ	0xFD8
 13365                           
 13366 ;; *************** function i2_hxFlushMainDataBuffer *****************
 13367 ;; Defined at:
 13368 ;;		line 285 in file "HX_CommInterface.c"
 13369 ;; Parameters:    Size  Location     Type
 13370 ;;		None
 13371 ;; Auto vars:     Size  Location     Type
 13372 ;;		None
 13373 ;; Return value:  Size  Location     Type
 13374 ;;                  1    wreg      void 
 13375 ;; Registers used:
 13376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13377 ;; Tracked objects:
 13378 ;;		On entry : 0/0
 13379 ;;		On exit  : 0/0
 13380 ;;		Unchanged: 0/0
 13381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13386 ;;Total ram usage:        0 bytes
 13387 ;; Hardware stack levels used:    1
 13388 ;; Hardware stack levels required when called:    1
 13389 ;; This function calls:
 13390 ;;		i2_hxClearArray
 13391 ;; This function is called by:
 13392 ;;		_hxCmdFilter
 13393 ;; This function uses a non-reentrant model
 13394 ;;
 13395                           
 13396                           	psect	text60
 13397  0029AC                     __ptext60:
 13398                           	opt stack 0
 13399  0029AC                     i2_hxFlushMainDataBuffer:
 13400                           	opt stack 19
 13401                           
 13402                           ;HX_CommInterface.c: 287: hxClearArray(hx_mainData, 61);
 13403                           
 13404                           ;incstack = 0
 13405  0029AC  0E72               	movlw	low _hx_mainData
 13406  0029AE  6E01               	movwf	i2hxClearArray@arr,c
 13407  0029B0  0E00               	movlw	high _hx_mainData
 13408  0029B2  6E02               	movwf	i2hxClearArray@arr+1,c
 13409  0029B4  0E3D               	movlw	61
 13410  0029B6  6E03               	movwf	i2hxClearArray@size,c
 13411  0029B8  EC43  F014         	call	i2_hxClearArray	;wreg free
 13412                           
 13413                           ;HX_CommInterface.c: 288: hx_mainDataIndex = 0;
 13414  0029BC  0E00               	movlw	0
 13415  0029BE  6E38               	movwf	_hx_mainDataIndex,c
 13416  0029C0  0012               	return		;funcret
 13417  0029C2                     __end_ofi2_hxFlushMainDataBuffer:
 13418                           	opt stack 0
 13419                           tosu	equ	0xFFF
 13420                           tosh	equ	0xFFE
 13421                           tosl	equ	0xFFD
 13422                           pclatu	equ	0xFFB
 13423                           pclath	equ	0xFFA
 13424                           tblptru	equ	0xFF8
 13425                           tblptrh	equ	0xFF7
 13426                           tblptrl	equ	0xFF6
 13427                           tablat	equ	0xFF5
 13428                           prodh	equ	0xFF4
 13429                           prodl	equ	0xFF3
 13430                           intcon	equ	0xFF2
 13431                           postinc0	equ	0xFEE
 13432                           fsr0h	equ	0xFEA
 13433                           fsr0l	equ	0xFE9
 13434                           wreg	equ	0xFE8
 13435                           indf1	equ	0xFE7
 13436                           postinc1	equ	0xFE6
 13437                           fsr1h	equ	0xFE2
 13438                           fsr1l	equ	0xFE1
 13439                           indf2	equ	0xFDF
 13440                           postinc2	equ	0xFDE
 13441                           postdec2	equ	0xFDD
 13442                           plusw2	equ	0xFDB
 13443                           fsr2h	equ	0xFDA
 13444                           fsr2l	equ	0xFD9
 13445                           status	equ	0xFD8
 13446                           
 13447 ;; *************** function i2_hxFlushInputBuffer *****************
 13448 ;; Defined at:
 13449 ;;		line 272 in file "HX_CommInterface.c"
 13450 ;; Parameters:    Size  Location     Type
 13451 ;;		None
 13452 ;; Auto vars:     Size  Location     Type
 13453 ;;		None
 13454 ;; Return value:  Size  Location     Type
 13455 ;;                  1    wreg      void 
 13456 ;; Registers used:
 13457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13458 ;; Tracked objects:
 13459 ;;		On entry : 0/0
 13460 ;;		On exit  : 0/0
 13461 ;;		Unchanged: 0/0
 13462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13467 ;;Total ram usage:        0 bytes
 13468 ;; Hardware stack levels used:    1
 13469 ;; Hardware stack levels required when called:    1
 13470 ;; This function calls:
 13471 ;;		i2_hxClearArray
 13472 ;; This function is called by:
 13473 ;;		_hxISRHandle
 13474 ;;		_hxCmdFilter
 13475 ;;		_hxHandleTmr0
 13476 ;; This function uses a non-reentrant model
 13477 ;;
 13478                           
 13479                           	psect	text61
 13480  002948                     __ptext61:
 13481                           	opt stack 0
 13482  002948                     i2_hxFlushInputBuffer:
 13483                           	opt stack 19
 13484                           
 13485                           ;HX_CommInterface.c: 274: hxClearArray(hx_inData, 64);
 13486                           
 13487                           ;incstack = 0
 13488  002948  0E60               	movlw	low _hx_inData
 13489  00294A  6E01               	movwf	i2hxClearArray@arr,c
 13490  00294C  0E02               	movlw	high _hx_inData
 13491  00294E  6E02               	movwf	i2hxClearArray@arr+1,c
 13492  002950  0E40               	movlw	64
 13493  002952  6E03               	movwf	i2hxClearArray@size,c
 13494  002954  EC43  F014         	call	i2_hxClearArray	;wreg free
 13495                           
 13496                           ;HX_CommInterface.c: 275: hx_inDataIndex = 0;
 13497  002958  0E00               	movlw	0
 13498  00295A  6E37               	movwf	_hx_inDataIndex,c
 13499                           
 13500                           ;HX_CommInterface.c: 276: hx_pktCmd = 0;
 13501  00295C  0E00               	movlw	0
 13502  00295E  0100               	movlb	0	; () banked
 13503  002960  6F71               	movwf	_hx_pktCmd& (0+255),b
 13504                           
 13505                           ; BSR set to: 0
 13506  002962  0012               	return		;funcret
 13507  002964                     __end_ofi2_hxFlushInputBuffer:
 13508                           	opt stack 0
 13509                           tosu	equ	0xFFF
 13510                           tosh	equ	0xFFE
 13511                           tosl	equ	0xFFD
 13512                           pclatu	equ	0xFFB
 13513                           pclath	equ	0xFFA
 13514                           tblptru	equ	0xFF8
 13515                           tblptrh	equ	0xFF7
 13516                           tblptrl	equ	0xFF6
 13517                           tablat	equ	0xFF5
 13518                           prodh	equ	0xFF4
 13519                           prodl	equ	0xFF3
 13520                           intcon	equ	0xFF2
 13521                           postinc0	equ	0xFEE
 13522                           fsr0h	equ	0xFEA
 13523                           fsr0l	equ	0xFE9
 13524                           wreg	equ	0xFE8
 13525                           indf1	equ	0xFE7
 13526                           postinc1	equ	0xFE6
 13527                           fsr1h	equ	0xFE2
 13528                           fsr1l	equ	0xFE1
 13529                           indf2	equ	0xFDF
 13530                           postinc2	equ	0xFDE
 13531                           postdec2	equ	0xFDD
 13532                           plusw2	equ	0xFDB
 13533                           fsr2h	equ	0xFDA
 13534                           fsr2l	equ	0xFD9
 13535                           status	equ	0xFD8
 13536                           
 13537 ;; *************** function _hxStartTimer *****************
 13538 ;; Defined at:
 13539 ;;		line 260 in file "HX_CommInterface.c"
 13540 ;; Parameters:    Size  Location     Type
 13541 ;;  timerVal        2    2[COMRAM] unsigned int 
 13542 ;; Auto vars:     Size  Location     Type
 13543 ;;		None
 13544 ;; Return value:  Size  Location     Type
 13545 ;;                  1    wreg      void 
 13546 ;; Registers used:
 13547 ;;		wreg, status,2, cstack
 13548 ;; Tracked objects:
 13549 ;;		On entry : 0/0
 13550 ;;		On exit  : 0/0
 13551 ;;		Unchanged: 0/0
 13552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13553 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13556 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13557 ;;Total ram usage:        2 bytes
 13558 ;; Hardware stack levels used:    1
 13559 ;; Hardware stack levels required when called:    1
 13560 ;; This function calls:
 13561 ;;		_TMR0_StartTimer
 13562 ;;		i2_TMR0_Write16bitTimer
 13563 ;; This function is called by:
 13564 ;;		_hxISRHandle
 13565 ;;		_hxCmdFilter
 13566 ;; This function uses a non-reentrant model
 13567 ;;
 13568                           
 13569                           	psect	text62
 13570  0029FE                     __ptext62:
 13571                           	opt stack 0
 13572  0029FE                     _hxStartTimer:
 13573                           	opt stack 20
 13574                           
 13575                           ;HX_CommInterface.c: 262: TMR0_Write16bitTimer(timerVal);
 13576                           
 13577                           ; BSR set to: 0
 13578                           ;incstack = 0
 13579  0029FE  C003  F001         	movff	hxStartTimer@timerVal,i2TMR0_Write16bitTimer@timerVal
 13580  002A02  C004  F002         	movff	hxStartTimer@timerVal+1,i2TMR0_Write16bitTimer@timerVal+1
 13581  002A06  EC1D  F015         	call	i2_TMR0_Write16bitTimer	;wreg free
 13582                           
 13583                           ;HX_CommInterface.c: 263: TMR0_StartTimer();
 13584  002A0A  EC2B  F015         	call	_TMR0_StartTimer	;wreg free
 13585  002A0E  0012               	return		;funcret
 13586  002A10                     __end_of_hxStartTimer:
 13587                           	opt stack 0
 13588                           tosu	equ	0xFFF
 13589                           tosh	equ	0xFFE
 13590                           tosl	equ	0xFFD
 13591                           pclatu	equ	0xFFB
 13592                           pclath	equ	0xFFA
 13593                           tblptru	equ	0xFF8
 13594                           tblptrh	equ	0xFF7
 13595                           tblptrl	equ	0xFF6
 13596                           tablat	equ	0xFF5
 13597                           prodh	equ	0xFF4
 13598                           prodl	equ	0xFF3
 13599                           intcon	equ	0xFF2
 13600                           postinc0	equ	0xFEE
 13601                           fsr0h	equ	0xFEA
 13602                           fsr0l	equ	0xFE9
 13603                           wreg	equ	0xFE8
 13604                           indf1	equ	0xFE7
 13605                           postinc1	equ	0xFE6
 13606                           fsr1h	equ	0xFE2
 13607                           fsr1l	equ	0xFE1
 13608                           indf2	equ	0xFDF
 13609                           postinc2	equ	0xFDE
 13610                           postdec2	equ	0xFDD
 13611                           plusw2	equ	0xFDB
 13612                           fsr2h	equ	0xFDA
 13613                           fsr2l	equ	0xFD9
 13614                           status	equ	0xFD8
 13615                           
 13616 ;; *************** function i2_TMR0_Write16bitTimer *****************
 13617 ;; Defined at:
 13618 ;;		line 119 in file "mcc_generated_files/tmr0.c"
 13619 ;; Parameters:    Size  Location     Type
 13620 ;;  timerVal        2    0[COMRAM] unsigned int 
 13621 ;; Auto vars:     Size  Location     Type
 13622 ;;		None
 13623 ;; Return value:  Size  Location     Type
 13624 ;;                  1    wreg      void 
 13625 ;; Registers used:
 13626 ;;		wreg, status,2
 13627 ;; Tracked objects:
 13628 ;;		On entry : 0/0
 13629 ;;		On exit  : 0/0
 13630 ;;		Unchanged: 0/0
 13631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13636 ;;Total ram usage:        2 bytes
 13637 ;; Hardware stack levels used:    1
 13638 ;; This function calls:
 13639 ;;		Nothing
 13640 ;; This function is called by:
 13641 ;;		_hxStartTimer
 13642 ;;		i2_hxStopTimer
 13643 ;; This function uses a non-reentrant model
 13644 ;;
 13645                           
 13646                           	psect	text63
 13647  002A3A                     __ptext63:
 13648                           	opt stack 0
 13649  002A3A                     i2_TMR0_Write16bitTimer:
 13650                           	opt stack 20
 13651                           
 13652                           ;tmr0.c: 122: TMR0H = timerVal >> 8;
 13653                           
 13654                           ;incstack = 0
 13655  002A3A  5002               	movf	i2TMR0_Write16bitTimer@timerVal+1,w,c
 13656  002A3C  6ED4               	movwf	4052,c	;volatile
 13657                           
 13658                           ;tmr0.c: 123: TMR0L = (uint8_t) timerVal;
 13659  002A3E  C001  FFD3         	movff	i2TMR0_Write16bitTimer@timerVal,4051	;volatile
 13660  002A42  0012               	return		;funcret
 13661  002A44                     __end_ofi2_TMR0_Write16bitTimer:
 13662                           	opt stack 0
 13663                           tosu	equ	0xFFF
 13664                           tosh	equ	0xFFE
 13665                           tosl	equ	0xFFD
 13666                           pclatu	equ	0xFFB
 13667                           pclath	equ	0xFFA
 13668                           tblptru	equ	0xFF8
 13669                           tblptrh	equ	0xFF7
 13670                           tblptrl	equ	0xFF6
 13671                           tablat	equ	0xFF5
 13672                           prodh	equ	0xFF4
 13673                           prodl	equ	0xFF3
 13674                           intcon	equ	0xFF2
 13675                           postinc0	equ	0xFEE
 13676                           fsr0h	equ	0xFEA
 13677                           fsr0l	equ	0xFE9
 13678                           wreg	equ	0xFE8
 13679                           indf1	equ	0xFE7
 13680                           postinc1	equ	0xFE6
 13681                           fsr1h	equ	0xFE2
 13682                           fsr1l	equ	0xFE1
 13683                           indf2	equ	0xFDF
 13684                           postinc2	equ	0xFDE
 13685                           postdec2	equ	0xFDD
 13686                           plusw2	equ	0xFDB
 13687                           fsr2h	equ	0xFDA
 13688                           fsr2l	equ	0xFD9
 13689                           status	equ	0xFD8
 13690                           
 13691 ;; *************** function _TMR0_StartTimer *****************
 13692 ;; Defined at:
 13693 ;;		line 94 in file "mcc_generated_files/tmr0.c"
 13694 ;; Parameters:    Size  Location     Type
 13695 ;;		None
 13696 ;; Auto vars:     Size  Location     Type
 13697 ;;		None
 13698 ;; Return value:  Size  Location     Type
 13699 ;;                  1    wreg      void 
 13700 ;; Registers used:
 13701 ;;		None
 13702 ;; Tracked objects:
 13703 ;;		On entry : 0/0
 13704 ;;		On exit  : 0/0
 13705 ;;		Unchanged: 0/0
 13706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13711 ;;Total ram usage:        0 bytes
 13712 ;; Hardware stack levels used:    1
 13713 ;; This function calls:
 13714 ;;		Nothing
 13715 ;; This function is called by:
 13716 ;;		_hxStartTimer
 13717 ;; This function uses a non-reentrant model
 13718 ;;
 13719                           
 13720                           	psect	text64
 13721  002A56                     __ptext64:
 13722                           	opt stack 0
 13723  002A56                     _TMR0_StartTimer:
 13724                           	opt stack 20
 13725                           
 13726                           ;tmr0.c: 97: T0CON0bits.T0EN = 1;
 13727                           
 13728                           ;incstack = 0
 13729  002A56  8ED5               	bsf	4053,7,c	;volatile
 13730  002A58  0012               	return		;funcret
 13731  002A5A                     __end_of_TMR0_StartTimer:
 13732                           	opt stack 0
 13733                           tosu	equ	0xFFF
 13734                           tosh	equ	0xFFE
 13735                           tosl	equ	0xFFD
 13736                           pclatu	equ	0xFFB
 13737                           pclath	equ	0xFFA
 13738                           tblptru	equ	0xFF8
 13739                           tblptrh	equ	0xFF7
 13740                           tblptrl	equ	0xFF6
 13741                           tablat	equ	0xFF5
 13742                           prodh	equ	0xFF4
 13743                           prodl	equ	0xFF3
 13744                           intcon	equ	0xFF2
 13745                           postinc0	equ	0xFEE
 13746                           fsr0h	equ	0xFEA
 13747                           fsr0l	equ	0xFE9
 13748                           wreg	equ	0xFE8
 13749                           indf1	equ	0xFE7
 13750                           postinc1	equ	0xFE6
 13751                           fsr1h	equ	0xFE2
 13752                           fsr1l	equ	0xFE1
 13753                           indf2	equ	0xFDF
 13754                           postinc2	equ	0xFDE
 13755                           postdec2	equ	0xFDD
 13756                           plusw2	equ	0xFDB
 13757                           fsr2h	equ	0xFDA
 13758                           fsr2l	equ	0xFD9
 13759                           status	equ	0xFD8
 13760                           
 13761 ;; *************** function _hxSetupPacket2 *****************
 13762 ;; Defined at:
 13763 ;;		line 216 in file "HX_CommInterface.c"
 13764 ;; Parameters:    Size  Location     Type
 13765 ;;  pc_cmd          1    wreg     unsigned char 
 13766 ;; Auto vars:     Size  Location     Type
 13767 ;;  pc_cmd          1    6[COMRAM] unsigned char 
 13768 ;;  i               1    7[COMRAM] unsigned char 
 13769 ;; Return value:  Size  Location     Type
 13770 ;;                  1    wreg      void 
 13771 ;; Registers used:
 13772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13773 ;; Tracked objects:
 13774 ;;		On entry : 0/0
 13775 ;;		On exit  : 0/0
 13776 ;;		Unchanged: 0/0
 13777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13779 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13780 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13781 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13782 ;;Total ram usage:        3 bytes
 13783 ;; Hardware stack levels used:    1
 13784 ;; Hardware stack levels required when called:    1
 13785 ;; This function calls:
 13786 ;;		_hxCalcChecksum
 13787 ;; This function is called by:
 13788 ;;		_hxCmdFilter
 13789 ;; This function uses a non-reentrant model
 13790 ;;
 13791                           
 13792                           	psect	text65
 13793  002256                     __ptext65:
 13794                           	opt stack 0
 13795  002256                     _hxSetupPacket2:
 13796                           	opt stack 19
 13797                           
 13798                           ;incstack = 0
 13799                           ;hxSetupPacket2@pc_cmd stored from wreg
 13800  002256  6E07               	movwf	hxSetupPacket2@pc_cmd,c
 13801                           
 13802                           ;HX_CommInterface.c: 218: hx_outData[0] = pc_cmd;
 13803  002258  C007  F2A0         	movff	hxSetupPacket2@pc_cmd,_hx_outData
 13804                           
 13805                           ;HX_CommInterface.c: 219: for (uint8_t i = 0; i < hx_mainDataIndex; i++)
 13806  00225C  0E00               	movlw	0
 13807  00225E  6E08               	movwf	hxSetupPacket2@i,c
 13808  002260  D014               	goto	i2l4745
 13809  002262                     i2l4739:
 13810                           
 13811                           ;HX_CommInterface.c: 220: {
 13812                           ;HX_CommInterface.c: 221: hx_outData[hx_outDataIndex++] = hx_mainData[i];
 13813  002262  5008               	movf	hxSetupPacket2@i,w,c
 13814  002264  0D01               	mullw	1
 13815  002266  0E72               	movlw	low _hx_mainData
 13816  002268  24F3               	addwf	prodl,w,c
 13817  00226A  6ED9               	movwf	fsr2l,c
 13818  00226C  0E00               	movlw	high _hx_mainData
 13819  00226E  20F4               	addwfc	prodh,w,c
 13820  002270  6EDA               	movwf	fsr2h,c
 13821  002272  5039               	movf	_hx_outDataIndex,w,c
 13822  002274  0D01               	mullw	1
 13823  002276  0EA0               	movlw	low _hx_outData
 13824  002278  24F3               	addwf	prodl,w,c
 13825  00227A  6EE1               	movwf	fsr1l,c
 13826  00227C  0E02               	movlw	high _hx_outData
 13827  00227E  20F4               	addwfc	prodh,w,c
 13828  002280  6EE2               	movwf	fsr1h,c
 13829  002282  CFDF FFE7          	movff	indf2,indf1
 13830  002286  2A39               	incf	_hx_outDataIndex,f,c
 13831  002288  2A08               	incf	hxSetupPacket2@i,f,c
 13832  00228A                     i2l4745:
 13833  00228A  5038               	movf	_hx_mainDataIndex,w,c
 13834  00228C  5C08               	subwf	hxSetupPacket2@i,w,c
 13835  00228E  A0D8               	btfss	status,0,c
 13836  002290  D7E8               	goto	i2l4739
 13837                           
 13838                           ;HX_CommInterface.c: 222: }
 13839                           ;HX_CommInterface.c: 224: hx_outData[1] = hx_outDataIndex - 2 + 1;
 13840  002292  0439               	decf	_hx_outDataIndex,w,c
 13841  002294  0102               	movlb	2	; () banked
 13842  002296  6FA1               	movwf	(_hx_outData+1)& (0+255),b
 13843                           
 13844                           ; BSR set to: 2
 13845                           ;HX_CommInterface.c: 225: hx_outData[hx_outDataIndex++] = hxCalcChecksum(hx_outData, hx_
      +                          outDataIndex);
 13846  002298  0EA0               	movlw	low _hx_outData
 13847  00229A  6E01               	movwf	hxCalcChecksum@data,c
 13848  00229C  0E02               	movlw	high _hx_outData
 13849  00229E  6E02               	movwf	hxCalcChecksum@data+1,c
 13850  0022A0  C039  F003         	movff	_hx_outDataIndex,hxCalcChecksum@size
 13851  0022A4  EC16  F014         	call	_hxCalcChecksum	;wreg free
 13852  0022A8  6E06               	movwf	??_hxSetupPacket2& (0+255),c
 13853  0022AA  5039               	movf	_hx_outDataIndex,w,c
 13854  0022AC  0D01               	mullw	1
 13855  0022AE  0EA0               	movlw	low _hx_outData
 13856  0022B0  24F3               	addwf	prodl,w,c
 13857  0022B2  6ED9               	movwf	fsr2l,c
 13858  0022B4  0E02               	movlw	high _hx_outData
 13859  0022B6  20F4               	addwfc	prodh,w,c
 13860  0022B8  6EDA               	movwf	fsr2h,c
 13861  0022BA  C006  FFDF         	movff	??_hxSetupPacket2,indf2
 13862  0022BE  2A39               	incf	_hx_outDataIndex,f,c
 13863  0022C0  0012               	return		;funcret
 13864  0022C2                     __end_of_hxSetupPacket2:
 13865                           	opt stack 0
 13866                           tosu	equ	0xFFF
 13867                           tosh	equ	0xFFE
 13868                           tosl	equ	0xFFD
 13869                           pclatu	equ	0xFFB
 13870                           pclath	equ	0xFFA
 13871                           tblptru	equ	0xFF8
 13872                           tblptrh	equ	0xFF7
 13873                           tblptrl	equ	0xFF6
 13874                           tablat	equ	0xFF5
 13875                           prodh	equ	0xFF4
 13876                           prodl	equ	0xFF3
 13877                           intcon	equ	0xFF2
 13878                           postinc0	equ	0xFEE
 13879                           fsr0h	equ	0xFEA
 13880                           fsr0l	equ	0xFE9
 13881                           wreg	equ	0xFE8
 13882                           indf1	equ	0xFE7
 13883                           postinc1	equ	0xFE6
 13884                           fsr1h	equ	0xFE2
 13885                           fsr1l	equ	0xFE1
 13886                           indf2	equ	0xFDF
 13887                           postinc2	equ	0xFDE
 13888                           postdec2	equ	0xFDD
 13889                           plusw2	equ	0xFDB
 13890                           fsr2h	equ	0xFDA
 13891                           fsr2l	equ	0xFD9
 13892                           status	equ	0xFD8
 13893                           
 13894 ;; *************** function _hxSetupPacket1 *****************
 13895 ;; Defined at:
 13896 ;;		line 207 in file "HX_CommInterface.c"
 13897 ;; Parameters:    Size  Location     Type
 13898 ;;  pc_cmd          1    wreg     unsigned char 
 13899 ;;  data            1    5[COMRAM] unsigned char 
 13900 ;; Auto vars:     Size  Location     Type
 13901 ;;  pc_cmd          1    7[COMRAM] unsigned char 
 13902 ;; Return value:  Size  Location     Type
 13903 ;;                  1    wreg      void 
 13904 ;; Registers used:
 13905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13906 ;; Tracked objects:
 13907 ;;		On entry : 0/0
 13908 ;;		On exit  : 0/0
 13909 ;;		Unchanged: 0/0
 13910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13911 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13912 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13913 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13914 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13915 ;;Total ram usage:        3 bytes
 13916 ;; Hardware stack levels used:    1
 13917 ;; Hardware stack levels required when called:    2
 13918 ;; This function calls:
 13919 ;;		_hxCalcChecksum
 13920 ;;		i2_hxFlushOutputBuffer
 13921 ;; This function is called by:
 13922 ;;		_hxCmdFilter
 13923 ;;		_hxHandleTmr0
 13924 ;; This function uses a non-reentrant model
 13925 ;;
 13926                           
 13927                           	psect	text66
 13928  0024D8                     __ptext66:
 13929                           	opt stack 0
 13930  0024D8                     _hxSetupPacket1:
 13931                           	opt stack 18
 13932                           
 13933                           ;incstack = 0
 13934                           ;hxSetupPacket1@pc_cmd stored from wreg
 13935  0024D8  6E08               	movwf	hxSetupPacket1@pc_cmd,c
 13936                           
 13937                           ;HX_CommInterface.c: 209: hxFlushOutputBuffer();
 13938  0024DA  ECE1  F014         	call	i2_hxFlushOutputBuffer	;wreg free
 13939                           
 13940                           ;HX_CommInterface.c: 210: hx_outData[0] = pc_cmd;
 13941  0024DE  C008  F2A0         	movff	hxSetupPacket1@pc_cmd,_hx_outData
 13942                           
 13943                           ;HX_CommInterface.c: 211: hx_outData[1] = 2;
 13944  0024E2  0E02               	movlw	2
 13945  0024E4  0102               	movlb	2	; () banked
 13946  0024E6  6FA1               	movwf	(_hx_outData+1)& (0+255),b
 13947                           
 13948                           ; BSR set to: 2
 13949                           ;HX_CommInterface.c: 212: hx_outData[hx_outDataIndex++] = data;
 13950  0024E8  5039               	movf	_hx_outDataIndex,w,c
 13951  0024EA  0D01               	mullw	1
 13952  0024EC  0EA0               	movlw	low _hx_outData
 13953  0024EE  24F3               	addwf	prodl,w,c
 13954  0024F0  6ED9               	movwf	fsr2l,c
 13955  0024F2  0E02               	movlw	high _hx_outData
 13956  0024F4  20F4               	addwfc	prodh,w,c
 13957  0024F6  6EDA               	movwf	fsr2h,c
 13958  0024F8  C006  FFDF         	movff	hxSetupPacket1@data,indf2
 13959                           
 13960                           ; BSR set to: 2
 13961  0024FC  2A39               	incf	_hx_outDataIndex,f,c
 13962                           
 13963                           ; BSR set to: 2
 13964                           ;HX_CommInterface.c: 213: hx_outData[hx_outDataIndex++] = hxCalcChecksum(hx_outData, hx_
      +                          outDataIndex);
 13965  0024FE  0EA0               	movlw	low _hx_outData
 13966  002500  6E01               	movwf	hxCalcChecksum@data,c
 13967  002502  0E02               	movlw	high _hx_outData
 13968  002504  6E02               	movwf	hxCalcChecksum@data+1,c
 13969  002506  C039  F003         	movff	_hx_outDataIndex,hxCalcChecksum@size
 13970  00250A  EC16  F014         	call	_hxCalcChecksum	;wreg free
 13971  00250E  6E07               	movwf	??_hxSetupPacket1& (0+255),c
 13972  002510  5039               	movf	_hx_outDataIndex,w,c
 13973  002512  0D01               	mullw	1
 13974  002514  0EA0               	movlw	low _hx_outData
 13975  002516  24F3               	addwf	prodl,w,c
 13976  002518  6ED9               	movwf	fsr2l,c
 13977  00251A  0E02               	movlw	high _hx_outData
 13978  00251C  20F4               	addwfc	prodh,w,c
 13979  00251E  6EDA               	movwf	fsr2h,c
 13980  002520  C007  FFDF         	movff	??_hxSetupPacket1,indf2
 13981  002524  2A39               	incf	_hx_outDataIndex,f,c
 13982  002526  0012               	return		;funcret
 13983  002528                     __end_of_hxSetupPacket1:
 13984                           	opt stack 0
 13985                           tosu	equ	0xFFF
 13986                           tosh	equ	0xFFE
 13987                           tosl	equ	0xFFD
 13988                           pclatu	equ	0xFFB
 13989                           pclath	equ	0xFFA
 13990                           tblptru	equ	0xFF8
 13991                           tblptrh	equ	0xFF7
 13992                           tblptrl	equ	0xFF6
 13993                           tablat	equ	0xFF5
 13994                           prodh	equ	0xFF4
 13995                           prodl	equ	0xFF3
 13996                           intcon	equ	0xFF2
 13997                           postinc0	equ	0xFEE
 13998                           fsr0h	equ	0xFEA
 13999                           fsr0l	equ	0xFE9
 14000                           wreg	equ	0xFE8
 14001                           indf1	equ	0xFE7
 14002                           postinc1	equ	0xFE6
 14003                           fsr1h	equ	0xFE2
 14004                           fsr1l	equ	0xFE1
 14005                           indf2	equ	0xFDF
 14006                           postinc2	equ	0xFDE
 14007                           postdec2	equ	0xFDD
 14008                           plusw2	equ	0xFDB
 14009                           fsr2h	equ	0xFDA
 14010                           fsr2l	equ	0xFD9
 14011                           status	equ	0xFD8
 14012                           
 14013 ;; *************** function i2_hxFlushOutputBuffer *****************
 14014 ;; Defined at:
 14015 ;;		line 279 in file "HX_CommInterface.c"
 14016 ;; Parameters:    Size  Location     Type
 14017 ;;		None
 14018 ;; Auto vars:     Size  Location     Type
 14019 ;;		None
 14020 ;; Return value:  Size  Location     Type
 14021 ;;                  1    wreg      void 
 14022 ;; Registers used:
 14023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14024 ;; Tracked objects:
 14025 ;;		On entry : 0/0
 14026 ;;		On exit  : 0/0
 14027 ;;		Unchanged: 0/0
 14028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14033 ;;Total ram usage:        0 bytes
 14034 ;; Hardware stack levels used:    1
 14035 ;; Hardware stack levels required when called:    1
 14036 ;; This function calls:
 14037 ;;		i2_hxClearArray
 14038 ;; This function is called by:
 14039 ;;		_hxCmdFilter
 14040 ;;		_hxSetupPacket1
 14041 ;;		_hxHandleTmr0
 14042 ;; This function uses a non-reentrant model
 14043 ;;
 14044                           
 14045                           	psect	text67
 14046  0029C2                     __ptext67:
 14047                           	opt stack 0
 14048  0029C2                     i2_hxFlushOutputBuffer:
 14049                           	opt stack 19
 14050                           
 14051                           ;HX_CommInterface.c: 281: hxClearArray(hx_outData, 64);
 14052                           
 14053                           ;incstack = 0
 14054  0029C2  0EA0               	movlw	low _hx_outData
 14055  0029C4  6E01               	movwf	i2hxClearArray@arr,c
 14056  0029C6  0E02               	movlw	high _hx_outData
 14057  0029C8  6E02               	movwf	i2hxClearArray@arr+1,c
 14058  0029CA  0E40               	movlw	64
 14059  0029CC  6E03               	movwf	i2hxClearArray@size,c
 14060  0029CE  EC43  F014         	call	i2_hxClearArray	;wreg free
 14061                           
 14062                           ;HX_CommInterface.c: 282: hx_outDataIndex = 2;
 14063  0029D2  0E02               	movlw	2
 14064  0029D4  6E39               	movwf	_hx_outDataIndex,c
 14065  0029D6  0012               	return		;funcret
 14066  0029D8                     __end_ofi2_hxFlushOutputBuffer:
 14067                           	opt stack 0
 14068                           tosu	equ	0xFFF
 14069                           tosh	equ	0xFFE
 14070                           tosl	equ	0xFFD
 14071                           pclatu	equ	0xFFB
 14072                           pclath	equ	0xFFA
 14073                           tblptru	equ	0xFF8
 14074                           tblptrh	equ	0xFF7
 14075                           tblptrl	equ	0xFF6
 14076                           tablat	equ	0xFF5
 14077                           prodh	equ	0xFF4
 14078                           prodl	equ	0xFF3
 14079                           intcon	equ	0xFF2
 14080                           postinc0	equ	0xFEE
 14081                           fsr0h	equ	0xFEA
 14082                           fsr0l	equ	0xFE9
 14083                           wreg	equ	0xFE8
 14084                           indf1	equ	0xFE7
 14085                           postinc1	equ	0xFE6
 14086                           fsr1h	equ	0xFE2
 14087                           fsr1l	equ	0xFE1
 14088                           indf2	equ	0xFDF
 14089                           postinc2	equ	0xFDE
 14090                           postdec2	equ	0xFDD
 14091                           plusw2	equ	0xFDB
 14092                           fsr2h	equ	0xFDA
 14093                           fsr2l	equ	0xFD9
 14094                           status	equ	0xFD8
 14095                           
 14096 ;; *************** function i2_hxClearArray *****************
 14097 ;; Defined at:
 14098 ;;		line 302 in file "HX_CommInterface.c"
 14099 ;; Parameters:    Size  Location     Type
 14100 ;;  arr             2    0[COMRAM] PTR unsigned char 
 14101 ;;		 -> hx_outData(64), hx_mainData(61), hx_inData(64), 
 14102 ;;  size            1    2[COMRAM] unsigned char 
 14103 ;; Auto vars:     Size  Location     Type
 14104 ;;  hxClearArray    1    3[COMRAM] unsigned char 
 14105 ;; Return value:  Size  Location     Type
 14106 ;;                  1    wreg      void 
 14107 ;; Registers used:
 14108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14109 ;; Tracked objects:
 14110 ;;		On entry : 0/0
 14111 ;;		On exit  : 0/0
 14112 ;;		Unchanged: 0/0
 14113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14114 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14115 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14117 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14118 ;;Total ram usage:        4 bytes
 14119 ;; Hardware stack levels used:    1
 14120 ;; This function calls:
 14121 ;;		Nothing
 14122 ;; This function is called by:
 14123 ;;		i2_hxFlushInputBuffer
 14124 ;;		i2_hxFlushOutputBuffer
 14125 ;;		i2_hxFlushMainDataBuffer
 14126 ;; This function uses a non-reentrant model
 14127 ;;
 14128                           
 14129                           	psect	text68
 14130  002886                     __ptext68:
 14131                           	opt stack 0
 14132  002886                     i2_hxClearArray:
 14133                           	opt stack 19
 14134                           
 14135                           ;HX_CommInterface.c: 304: for(uint8_t i = 0; i < size; i++)
 14136                           
 14137                           ;incstack = 0
 14138  002886  0E00               	movlw	0
 14139  002888  6E04               	movwf	i2hxClearArray@i,c
 14140  00288A  D00B               	goto	i2l4679
 14141  00288C                     i2l4675:
 14142                           
 14143                           ;HX_CommInterface.c: 305: {
 14144                           ;HX_CommInterface.c: 306: arr[i] = 0;
 14145  00288C  5004               	movf	i2hxClearArray@i,w,c
 14146  00288E  0D01               	mullw	1
 14147  002890  50F3               	movf	prodl,w,c
 14148  002892  2401               	addwf	i2hxClearArray@arr,w,c
 14149  002894  6ED9               	movwf	fsr2l,c
 14150  002896  50F4               	movf	prodh,w,c
 14151  002898  2002               	addwfc	i2hxClearArray@arr+1,w,c
 14152  00289A  6EDA               	movwf	fsr2h,c
 14153  00289C  0E00               	movlw	0
 14154  00289E  6EDF               	movwf	indf2,c
 14155  0028A0  2A04               	incf	i2hxClearArray@i,f,c
 14156  0028A2                     i2l4679:
 14157  0028A2  5003               	movf	i2hxClearArray@size,w,c
 14158  0028A4  5C04               	subwf	i2hxClearArray@i,w,c
 14159  0028A6  B0D8               	btfsc	status,0,c
 14160  0028A8  0012               	return	
 14161  0028AA  D7F0               	goto	i2l4675
 14162  0028AC                     __end_ofi2_hxClearArray:
 14163                           	opt stack 0
 14164                           tosu	equ	0xFFF
 14165                           tosh	equ	0xFFE
 14166                           tosl	equ	0xFFD
 14167                           pclatu	equ	0xFFB
 14168                           pclath	equ	0xFFA
 14169                           tblptru	equ	0xFF8
 14170                           tblptrh	equ	0xFF7
 14171                           tblptrl	equ	0xFF6
 14172                           tablat	equ	0xFF5
 14173                           prodh	equ	0xFF4
 14174                           prodl	equ	0xFF3
 14175                           intcon	equ	0xFF2
 14176                           postinc0	equ	0xFEE
 14177                           fsr0h	equ	0xFEA
 14178                           fsr0l	equ	0xFE9
 14179                           wreg	equ	0xFE8
 14180                           indf1	equ	0xFE7
 14181                           postinc1	equ	0xFE6
 14182                           fsr1h	equ	0xFE2
 14183                           fsr1l	equ	0xFE1
 14184                           indf2	equ	0xFDF
 14185                           postinc2	equ	0xFDE
 14186                           postdec2	equ	0xFDD
 14187                           plusw2	equ	0xFDB
 14188                           fsr2h	equ	0xFDA
 14189                           fsr2l	equ	0xFD9
 14190                           status	equ	0xFD8
 14191                           
 14192 ;; *************** function _hxCalcChecksum *****************
 14193 ;; Defined at:
 14194 ;;		line 291 in file "HX_CommInterface.c"
 14195 ;; Parameters:    Size  Location     Type
 14196 ;;  data            2    0[COMRAM] PTR unsigned char 
 14197 ;;		 -> hx_outData(64), 
 14198 ;;  size            1    2[COMRAM] unsigned char 
 14199 ;; Auto vars:     Size  Location     Type
 14200 ;;  i               1    3[COMRAM] unsigned char 
 14201 ;;  temp_checksu    1    4[COMRAM] unsigned char 
 14202 ;; Return value:  Size  Location     Type
 14203 ;;                  1    wreg      unsigned char 
 14204 ;; Registers used:
 14205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14206 ;; Tracked objects:
 14207 ;;		On entry : 0/0
 14208 ;;		On exit  : 0/0
 14209 ;;		Unchanged: 0/0
 14210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14211 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14212 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14214 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14215 ;;Total ram usage:        5 bytes
 14216 ;; Hardware stack levels used:    1
 14217 ;; This function calls:
 14218 ;;		Nothing
 14219 ;; This function is called by:
 14220 ;;		_hxSetupPacket1
 14221 ;;		_hxSetupPacket2
 14222 ;; This function uses a non-reentrant model
 14223 ;;
 14224                           
 14225                           	psect	text69
 14226  00282C                     __ptext69:
 14227                           	opt stack 0
 14228  00282C                     _hxCalcChecksum:
 14229                           	opt stack 19
 14230                           
 14231                           ;HX_CommInterface.c: 293: uint8_t temp_checksum = 0;
 14232                           
 14233                           ;incstack = 0
 14234  00282C  0E00               	movlw	0
 14235  00282E  6E05               	movwf	hxCalcChecksum@temp_checksum,c
 14236                           
 14237                           ;HX_CommInterface.c: 294: for(uint8_t i = 0; i < size; i++)
 14238  002830  0E00               	movlw	0
 14239  002832  6E04               	movwf	hxCalcChecksum@i,c
 14240  002834  D00B               	goto	i2l4687
 14241  002836                     i2l4683:
 14242                           
 14243                           ;HX_CommInterface.c: 295: {
 14244                           ;HX_CommInterface.c: 296: temp_checksum += data[i];
 14245  002836  5004               	movf	hxCalcChecksum@i,w,c
 14246  002838  0D01               	mullw	1
 14247  00283A  50F3               	movf	prodl,w,c
 14248  00283C  2401               	addwf	hxCalcChecksum@data,w,c
 14249  00283E  6ED9               	movwf	fsr2l,c
 14250  002840  50F4               	movf	prodh,w,c
 14251  002842  2002               	addwfc	hxCalcChecksum@data+1,w,c
 14252  002844  6EDA               	movwf	fsr2h,c
 14253  002846  50DF               	movf	indf2,w,c
 14254  002848  2605               	addwf	hxCalcChecksum@temp_checksum,f,c
 14255  00284A  2A04               	incf	hxCalcChecksum@i,f,c
 14256  00284C                     i2l4687:
 14257  00284C  5003               	movf	hxCalcChecksum@size,w,c
 14258  00284E  5C04               	subwf	hxCalcChecksum@i,w,c
 14259  002850  A0D8               	btfss	status,0,c
 14260  002852  D7F1               	goto	i2l4683
 14261                           
 14262                           ;HX_CommInterface.c: 297: }
 14263                           ;HX_CommInterface.c: 298: temp_checksum = (~temp_checksum) + 1;
 14264  002854  6C05               	negf	hxCalcChecksum@temp_checksum,c
 14265                           
 14266                           ;HX_CommInterface.c: 299: return temp_checksum;
 14267  002856  5005               	movf	hxCalcChecksum@temp_checksum,w,c
 14268  002858  0012               	return	
 14269  00285A                     __end_of_hxCalcChecksum:
 14270                           	opt stack 0
 14271  0000                     tosu	equ	0xFFF
 14272                           tosh	equ	0xFFE
 14273                           tosl	equ	0xFFD
 14274                           pclatu	equ	0xFFB
 14275                           pclath	equ	0xFFA
 14276                           tblptru	equ	0xFF8
 14277                           tblptrh	equ	0xFF7
 14278                           tblptrl	equ	0xFF6
 14279                           tablat	equ	0xFF5
 14280                           prodh	equ	0xFF4
 14281                           prodl	equ	0xFF3
 14282                           intcon	equ	0xFF2
 14283                           postinc0	equ	0xFEE
 14284                           fsr0h	equ	0xFEA
 14285                           fsr0l	equ	0xFE9
 14286                           wreg	equ	0xFE8
 14287                           indf1	equ	0xFE7
 14288                           postinc1	equ	0xFE6
 14289                           fsr1h	equ	0xFE2
 14290                           fsr1l	equ	0xFE1
 14291                           indf2	equ	0xFDF
 14292                           postinc2	equ	0xFDE
 14293                           postdec2	equ	0xFDD
 14294                           plusw2	equ	0xFDB
 14295                           fsr2h	equ	0xFDA
 14296                           fsr2l	equ	0xFD9
 14297                           status	equ	0xFD8
 14298                           tosu	equ	0xFFF
 14299                           tosh	equ	0xFFE
 14300                           tosl	equ	0xFFD
 14301                           pclatu	equ	0xFFB
 14302                           pclath	equ	0xFFA
 14303                           tblptru	equ	0xFF8
 14304                           tblptrh	equ	0xFF7
 14305                           tblptrl	equ	0xFF6
 14306                           tablat	equ	0xFF5
 14307                           prodh	equ	0xFF4
 14308                           prodl	equ	0xFF3
 14309                           intcon	equ	0xFF2
 14310                           postinc0	equ	0xFEE
 14311                           fsr0h	equ	0xFEA
 14312                           fsr0l	equ	0xFE9
 14313                           wreg	equ	0xFE8
 14314                           indf1	equ	0xFE7
 14315                           postinc1	equ	0xFE6
 14316                           fsr1h	equ	0xFE2
 14317                           fsr1l	equ	0xFE1
 14318                           indf2	equ	0xFDF
 14319                           postinc2	equ	0xFDE
 14320                           postdec2	equ	0xFDD
 14321                           plusw2	equ	0xFDB
 14322                           fsr2h	equ	0xFDA
 14323                           fsr2l	equ	0xFD9
 14324                           status	equ	0xFD8
 14325                           
 14326                           	psect	text70
 14327  000000                     __ptext70:
 14328                           	opt stack 0
 14329                           tosu	equ	0xFFF
 14330                           tosh	equ	0xFFE
 14331                           tosl	equ	0xFFD
 14332                           pclatu	equ	0xFFB
 14333                           pclath	equ	0xFFA
 14334                           tblptru	equ	0xFF8
 14335                           tblptrh	equ	0xFF7
 14336                           tblptrl	equ	0xFF6
 14337                           tablat	equ	0xFF5
 14338                           prodh	equ	0xFF4
 14339                           prodl	equ	0xFF3
 14340                           intcon	equ	0xFF2
 14341                           postinc0	equ	0xFEE
 14342                           fsr0h	equ	0xFEA
 14343                           fsr0l	equ	0xFE9
 14344                           wreg	equ	0xFE8
 14345                           indf1	equ	0xFE7
 14346                           postinc1	equ	0xFE6
 14347                           fsr1h	equ	0xFE2
 14348                           fsr1l	equ	0xFE1
 14349                           indf2	equ	0xFDF
 14350                           postinc2	equ	0xFDE
 14351                           postdec2	equ	0xFDD
 14352                           plusw2	equ	0xFDB
 14353                           fsr2h	equ	0xFDA
 14354                           fsr2l	equ	0xFD9
 14355                           status	equ	0xFD8
 14356                           
 14357                           	psect	rparam
 14358  0000                     tosu	equ	0xFFF
 14359                           tosh	equ	0xFFE
 14360                           tosl	equ	0xFFD
 14361                           pclatu	equ	0xFFB
 14362                           pclath	equ	0xFFA
 14363                           tblptru	equ	0xFF8
 14364                           tblptrh	equ	0xFF7
 14365                           tblptrl	equ	0xFF6
 14366                           tablat	equ	0xFF5
 14367                           prodh	equ	0xFF4
 14368                           prodl	equ	0xFF3
 14369                           intcon	equ	0xFF2
 14370                           postinc0	equ	0xFEE
 14371                           fsr0h	equ	0xFEA
 14372                           fsr0l	equ	0xFE9
 14373                           wreg	equ	0xFE8
 14374                           indf1	equ	0xFE7
 14375                           postinc1	equ	0xFE6
 14376                           fsr1h	equ	0xFE2
 14377                           fsr1l	equ	0xFE1
 14378                           indf2	equ	0xFDF
 14379                           postinc2	equ	0xFDE
 14380                           postdec2	equ	0xFDD
 14381                           plusw2	equ	0xFDB
 14382                           fsr2h	equ	0xFDA
 14383                           fsr2l	equ	0xFD9
 14384                           status	equ	0xFD8
 14385                           
 14386                           	psect	temp
 14387  000040                     btemp:
 14388                           	opt stack 0
 14389  000040                     	ds	1
 14390  0000                     int$flags	set	btemp
 14391                           tosu	equ	0xFFF
 14392                           tosh	equ	0xFFE
 14393                           tosl	equ	0xFFD
 14394                           pclatu	equ	0xFFB
 14395                           pclath	equ	0xFFA
 14396                           tblptru	equ	0xFF8
 14397                           tblptrh	equ	0xFF7
 14398                           tblptrl	equ	0xFF6
 14399                           tablat	equ	0xFF5
 14400                           prodh	equ	0xFF4
 14401                           prodl	equ	0xFF3
 14402                           intcon	equ	0xFF2
 14403                           postinc0	equ	0xFEE
 14404                           fsr0h	equ	0xFEA
 14405                           fsr0l	equ	0xFE9
 14406                           wreg	equ	0xFE8
 14407                           indf1	equ	0xFE7
 14408                           postinc1	equ	0xFE6
 14409                           fsr1h	equ	0xFE2
 14410                           fsr1l	equ	0xFE1
 14411                           indf2	equ	0xFDF
 14412                           postinc2	equ	0xFDE
 14413                           postdec2	equ	0xFDD
 14414                           plusw2	equ	0xFDB
 14415                           fsr2h	equ	0xFDA
 14416                           fsr2l	equ	0xFD9
 14417                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         345
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      63
    BANK0           160     62     160
    BANK1           256    256     256
    BANK2           256      0     224
    BANK3           256    256     256
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          126      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> run_I2C@tx_arr(BANK1[256]), ASLB_test1@ramReadback(BANK0[4]), ASLB_test1@ramRdMsg(BANK0[5]), ASLB_test1@ramWrMsg(BANK0[6]), 
		 -> hx_mainData(BANK0[61]), 

    i2c1_tr_queue.pTrFlag	PTR enum E11599 size(2) Largest target is 0
		 -> readI2C@status(BANK0[1]), writeI2C@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    ASLB_cnfg1@rxBuffer	PTR unsigned char  size(2) Largest target is 61
		 -> hx_mainData(BANK0[61]), 

    ASLB_cnfg0@rxBuffer	PTR unsigned char  size(2) Largest target is 61
		 -> hx_mainData(BANK0[61]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 256
		 -> run_I2C@tx_arr(BANK1[256]), ASLB_test1@ramRdMsg(BANK0[5]), ASLB_test1@ramWrMsg(BANK0[6]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 256
		 -> run_I2C@tx_arr(BANK1[256]), ASLB_test1@ramReadback(BANK0[4]), ASLB_test1@ramRdMsg(BANK0[5]), ASLB_test1@ramWrMsg(BANK0[6]), 
		 -> hx_mainData(BANK0[61]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterReadTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 61
		 -> ASLB_test1@ramReadback(BANK0[4]), hx_mainData(BANK0[61]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 256
		 -> run_I2C@tx_arr(BANK1[256]), ASLB_test1@ramReadback(BANK0[4]), ASLB_test1@ramRdMsg(BANK0[5]), ASLB_test1@ramWrMsg(BANK0[6]), 
		 -> hx_mainData(BANK0[61]), 

    I2C1_MasterReadTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 256
		 -> run_I2C@tx_arr(BANK1[256]), ASLB_test1@ramReadback(BANK0[4]), ASLB_test1@ramRdMsg(BANK0[5]), ASLB_test1@ramWrMsg(BANK0[6]), 
		 -> hx_mainData(BANK0[61]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E11599 size(2) Largest target is 1
		 -> readI2C@status(BANK0[1]), writeI2C@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E11599 size(2) Largest target is 1
		 -> readI2C@status(BANK0[1]), writeI2C@status(BANK0[1]), 

    I2C1_MasterRead@pflag	PTR enum E11599 size(2) Largest target is 1
		 -> readI2C@status(BANK0[1]), 

    I2C1_MasterRead@pdata	PTR unsigned char  size(2) Largest target is 61
		 -> ASLB_test1@ramReadback(BANK0[4]), hx_mainData(BANK0[61]), 

    F11711.pbuffer	PTR unsigned char  size(2) Largest target is 256
		 -> run_I2C@tx_arr(BANK1[256]), ASLB_test1@ramReadback(BANK0[4]), ASLB_test1@ramRdMsg(BANK0[5]), ASLB_test1@ramWrMsg(BANK0[6]), 
		 -> hx_mainData(BANK0[61]), 

    I2C1_MasterWrite@pflag	PTR enum E11599 size(2) Largest target is 1
		 -> writeI2C@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 256
		 -> run_I2C@tx_arr(BANK1[256]), ASLB_test1@ramRdMsg(BANK0[5]), ASLB_test1@ramWrMsg(BANK0[6]), 

    F11706.pbuffer	PTR unsigned char  size(2) Largest target is 256
		 -> run_I2C@tx_arr(BANK1[256]), ASLB_test1@ramReadback(BANK0[4]), ASLB_test1@ramRdMsg(BANK0[5]), ASLB_test1@ramWrMsg(BANK0[6]), 
		 -> hx_mainData(BANK0[61]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 256
		 -> I2C1_ISR@i2c_address(COMRAM[2]), NULL(NULL[0]), run_I2C@tx_arr(BANK1[256]), ASLB_test1@ramReadback(BANK0[4]), 
		 -> ASLB_test1@ramRdMsg(BANK0[5]), ASLB_test1@ramWrMsg(BANK0[6]), hx_mainData(BANK0[61]), 

    S936$pbuffer	PTR unsigned char  size(2) Largest target is 256
		 -> run_I2C@tx_arr(BANK1[256]), ASLB_test1@ramReadback(BANK0[4]), ASLB_test1@ramRdMsg(BANK0[5]), ASLB_test1@ramWrMsg(BANK0[6]), 
		 -> hx_mainData(BANK0[61]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 256
		 -> run_I2C@tx_arr(BANK1[256]), ASLB_test1@ramReadback(BANK0[4]), ASLB_test1@ramRdMsg(BANK0[5]), ASLB_test1@ramWrMsg(BANK0[6]), 
		 -> hx_mainData(BANK0[61]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E11599 size(2) Largest target is 1
		 -> readI2C@status(BANK0[1]), writeI2C@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    S948$pTrFlag	PTR enum E11599 size(2) Largest target is 1
		 -> readI2C@status(BANK0[1]), writeI2C@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E11599 size(2) Largest target is 1
		 -> readI2C@status(BANK0[1]), writeI2C@status(BANK0[1]), 

    S948$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(BANK0[5]), I2C1_MasterWrite@trBlock(BANK0[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), NULL(NULL[0]), 

    S959$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    S959$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(BANK0[5]), 

    run_I2C@hx_inData	PTR unsigned char  size(2) Largest target is 64
		 -> hx_inData(BANK2[64]), 

    ARDUINO_test_debug@rxBuffer	PTR unsigned char  size(2) Largest target is 61
		 -> hx_mainData(BANK0[61]), 

    ASLB_test1@rxBuffer	PTR unsigned char  size(2) Largest target is 61
		 -> hx_mainData(BANK0[61]), 

    ASLB_test0@rxBuffer	PTR unsigned char  size(2) Largest target is 61
		 -> hx_mainData(BANK0[61]), 

    write_ASLBoron_cstm_cnfg@cnfg_arr	PTR unsigned char  size(2) Largest target is 256
		 -> run_ASLBoron@cnfg_arr(BANK3[256]), 

    write_ASLBoron_cstm_cnfg@rxBuffer	PTR unsigned char  size(2) Largest target is 61
		 -> hx_mainData(BANK0[61]), 

    write_ASLBoron_cnfg@rxBuffer	PTR unsigned char  size(2) Largest target is 61
		 -> hx_mainData(BANK0[61]), 

    write_ASLBoron_test@run_rpt	PTR unsigned char  size(2) Largest target is 2
		 -> run_ASLBoron@rpt_run(BANK1[2]), 

    write_ASLBoron_test@rxBuffer	PTR unsigned char  size(2) Largest target is 61
		 -> hx_mainData(BANK0[61]), 

    run_ASLBoron@hx_inData	PTR unsigned char  size(2) Largest target is 64
		 -> hx_inData(BANK2[64]), 

    hxOddParityCalc@buff	PTR unsigned char  size(2) Largest target is 64
		 -> hx_inData(BANK2[64]), 

    hxSPPCarbonCheckBusy_test@rxBuffer	PTR unsigned char  size(2) Largest target is 61
		 -> hx_mainData(BANK0[61]), 

    hxSPPCarbonCheckBusy_test@txBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> hx_inData(BANK2[64]), 

    hxSPPCarbonProgram_test@rxBuffer	PTR unsigned char  size(2) Largest target is 61
		 -> hx_mainData(BANK0[61]), 

    hxSPPCarbonProgram_test@txBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> hx_inData(BANK2[64]), 

    hxSPPCarbonWriteReg_test@txBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> hx_inData(BANK2[64]), 

    hxSPPCarbonReadReg_test@rxBuffer	PTR unsigned char  size(2) Largest target is 61
		 -> hx_mainData(BANK0[61]), 

    hxSPPCarbonReadReg_test@txBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> hx_inData(BANK2[64]), 

    hxSPPCarbonRead_test@rxBuffer	PTR unsigned char  size(2) Largest target is 61
		 -> hx_mainData(BANK0[61]), 

    hxSPPCarbonRead_test@txBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> hx_inData(BANK2[64]), 

    hxSPPCarbonWrite_test@rxBuffer	PTR unsigned char  size(2) Largest target is 61
		 -> hx_mainData(BANK0[61]), 

    hxSPPCarbonWrite_test@txBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> hx_inData(BANK2[64]), 

    hxSPPCarbonWriteAndVerity_test@rxBuffer	PTR unsigned char  size(2) Largest target is 61
		 -> hx_mainData(BANK0[61]), 

    hxSPPCarbonWriteAndVerity_test@txBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> hx_inData(BANK2[64]), 

    run_SPPCarbon_test@hx_inData	PTR unsigned char  size(2) Largest target is 64
		 -> hx_inData(BANK2[64]), 

    calcChecksum@data	PTR unsigned char  size(2) Largest target is 64
		 -> ASLB_test1@ramRdMsg(BANK0[5]), ASLB_test1@ramWrMsg(BANK0[6]), hx_inData(BANK2[64]), 

    readI2C@rxData	PTR unsigned char  size(2) Largest target is 61
		 -> ASLB_test1@ramReadback(BANK0[4]), hx_mainData(BANK0[61]), 

    writeI2C@txData	PTR unsigned char  size(2) Largest target is 256
		 -> run_I2C@tx_arr(BANK1[256]), ASLB_test1@ramRdMsg(BANK0[5]), ASLB_test1@ramWrMsg(BANK0[6]), 

    hxClearArray@arr	PTR unsigned char  size(2) Largest target is 64
		 -> hx_outData(BANK2[64]), hx_mainData(BANK0[61]), hx_inData(BANK2[64]), 

    hxCalcChecksum@data	PTR unsigned char  size(2) Largest target is 64
		 -> hx_outData(BANK2[64]), 


Critical Paths under _main in COMRAM

    _main->_run_SPPCarbon_test
    _run_ASLBoron->_write_ASLBoron_cnfg
    _run_ASLBoron->_write_ASLBoron_cstm_cnfg
    _write_ASLBoron_test->_ASLB_test0
    _I2C1_MasterWrite->_I2C1_MasterTRBInsert
    _I2C1_MasterRead->_I2C1_MasterTRBInsert
    _hxHandleTxUART->_EUSART1_Write
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _hxFlushOutputBuffer->_hxClearArray
    _hxFlushMainDataBuffer->_hxClearArray
    _hxFlushInputBuffer->_hxClearArray

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_DefaultInterruptHandler->_hxHandleTmr0
    _hxHandleTmr0->_hxSetupPacket1
    _I2C1_ISR->_I2C1_Stop
    _EUSART1_Receive_ISR->_hxISRHandle
    _hxISRHandle->_hxCmdFilter
    i2_hxStopTimer->i2_TMR0_Write16bitTimer
    _hxCmdFilter->_hxSetupPacket1
    _hxCmdFilter->_hxSetupPacket2
    i2_hxFlushMainDataBuffer->i2_hxClearArray
    i2_hxFlushInputBuffer->i2_hxClearArray
    _hxStartTimer->i2_TMR0_Write16bitTimer
    _hxSetupPacket2->_hxCalcChecksum
    _hxSetupPacket1->_hxCalcChecksum
    i2_hxFlushOutputBuffer->i2_hxClearArray

Critical Paths under _main in BANK0

    _main->_run_ASLBoron
    _run_SPPCarbon_test->_hxSPPCarbonWriteAndVerity_test
    _hxSPPCarbonWrite_test->_hxSPPCarbonWriteReg_test
    _hxSPPCarbonWriteAndVerity_test->_hxSPPCarbonReadReg_test
    _hxSPPCarbonWriteReg_test->_hxOddParityCalc
    _hxSPPCarbonRead_test->_hxSPPCarbonReadReg_test
    _hxSPPCarbonReadReg_test->_hxOddParityCalc
    _hxSPPCarbonProgram_test->_hxOddParityCalc
    _hxSPPCarbonCheckBusy_test->_hxOddParityCalc
    _run_I2C->_readI2C
    _run_I2C->_writeI2C
    _run_ASLBoron->_write_ASLBoron_test
    _write_ASLBoron_test->_ASLB_test1
    _ASLB_test1->_readI2C
    _ASLB_test1->_writeI2C
    _ARDUINO_test_debug->_readI2C
    _ARDUINO_test_debug->_writeI2C
    _writeI2C->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _readI2C->_I2C1_MasterRead
    _I2C1_MasterRead->_I2C1_MasterReadTRBBuild
    _write_ASLBoron_cnfg->_ASLB_cnfg0
    _write_ASLBoron_cnfg->_ASLB_cnfg1
    _hxStopTimer->_TMR0_Write16bitTimer
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _hxFlushOutputBuffer->_hxClearArray
    _hxFlushMainDataBuffer->_hxClearArray
    _hxFlushInputBuffer->_hxClearArray

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_run_I2C

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_run_ASLBoron

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   50555
                      _HX_Initialize
                  _SYSTEM_Initialize
                     _hxHandleTxUART
                       _run_ASLBoron
                            _run_I2C
                 _run_SPPCarbon_test
 ---------------------------------------------------------------------------------
 (1) _run_SPPCarbon_test                                   7     4      3   18743
                                             31 COMRAM     1     1      0
                                             36 BANK0      6     3      3
          _hxSPPCarbonCheckBusy_test
            _hxSPPCarbonProgram_test
               _hxSPPCarbonRead_test
     _hxSPPCarbonWriteAndVerity_test
           _hxSPPCarbonWriteReg_test
              _hxSPPCarbonWrite_test
 ---------------------------------------------------------------------------------
 (2) _hxSPPCarbonWrite_test                                6     2      4    2034
                                             16 BANK0      6     2      4
           _hxSPPCarbonWriteReg_test
 ---------------------------------------------------------------------------------
 (2) _hxSPPCarbonWriteAndVerity_test                      10     6      4    5405
                                             26 BANK0     10     6      4
            _hxSPPCarbonReadReg_test
           _hxSPPCarbonWriteReg_test
 ---------------------------------------------------------------------------------
 (3) _hxSPPCarbonWriteReg_test                             9     7      2    1753
                                              7 BANK0      9     7      2
                    _hxOddParityCalc
 ---------------------------------------------------------------------------------
 (2) _hxSPPCarbonRead_test                                 7     2      5    3693
                                             26 BANK0      7     2      5
            _hxSPPCarbonReadReg_test
 ---------------------------------------------------------------------------------
 (3) _hxSPPCarbonReadReg_test                             19    14      5    2580
                                              7 BANK0     19    14      5
                    _hxOddParityCalc
 ---------------------------------------------------------------------------------
 (2) _hxSPPCarbonProgram_test                             10     6      4    1673
                                              7 BANK0     10     6      4
                    _hxOddParityCalc
 ---------------------------------------------------------------------------------
 (2) _hxSPPCarbonCheckBusy_test                           20    15      5    2523
                                              7 BANK0     20    15      5
                    _hxOddParityCalc
 ---------------------------------------------------------------------------------
 (4) _hxOddParityCalc                                      7     4      3     956
                                              0 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (1) _run_I2C                                            275   272      3    8818
                                             24 BANK0     19    16      3
                                              0 BANK1    256   256      0
                       _calcChecksum
                            _readI2C
                           _writeI2C
 ---------------------------------------------------------------------------------
 (1) _run_ASLBoron                                       277   274      3   20184
                                             59 BANK0      3     0      3
                                              0 BANK1     18    18      0
                                              0 BANK3    256   256      0
                       _calcChecksum
                _write_ASLBoron_cnfg
           _write_ASLBoron_cstm_cnfg
                _write_ASLBoron_test
 ---------------------------------------------------------------------------------
 (2) _write_ASLBoron_test                                 12     8      4   16580
                                             47 BANK0     12     8      4
                 _ARDUINO_test_debug
                         _ASLB_test0
                         _ASLB_test1
 ---------------------------------------------------------------------------------
 (3) _ASLB_test1                                          23    21      2    9355
                                             24 BANK0     23    21      2
                       _calcChecksum
                            _readI2C
                           _writeI2C
 ---------------------------------------------------------------------------------
 (2) _calcChecksum                                         5     2      3     971
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (3) _ASLB_test0                                           3     1      2     145
                                             31 COMRAM     1     1      0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ARDUINO_test_debug                                   6     4      2    6542
                                             24 BANK0      6     4      2
                            _readI2C
                           _writeI2C
 ---------------------------------------------------------------------------------
 (2) _writeI2C                                             8     3      5    3127
                                             16 BANK0      8     3      5
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWrite                                     7     0      7    1451
                                              9 BANK0      7     0      7
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWriteTRBBuild                             9     2      7     494
                                              0 BANK0      9     2      7
 ---------------------------------------------------------------------------------
 (2) _readI2C                                              8     3      5    3152
                                             16 BANK0      8     3      5
                    _I2C1_MasterRead
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterRead                                      7     0      7    1482
                                              9 BANK0      7     0      7
            _I2C1_MasterReadTRBBuild
               _I2C1_MasterTRBInsert
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterTRBInsert                                 6     2      4     494
                                             31 COMRAM     1     1      0
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterReadTRBBuild                              9     2      7     525
                                              0 BANK0      9     2      7
 ---------------------------------------------------------------------------------
 (2) _write_ASLBoron_cstm_cnfg                             7     1      6     618
                                             31 COMRAM     1     1      0
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _write_ASLBoron_cnfg                                  3     1      2     417
                                             31 COMRAM     1     1      0
                                              2 BANK0      2     0      2
                         _ASLB_cnfg0
                         _ASLB_cnfg1
 ---------------------------------------------------------------------------------
 (3) _ASLB_cnfg1                                           2     0      2      77
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ASLB_cnfg0                                           2     0      2      77
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _hxHandleTxUART                                       5     5      0     903
                                              3 BANK0      5     5      0
                      _EUSART1_Write
                _hxFlushOutputBuffer
                        _hxStopTimer
 ---------------------------------------------------------------------------------
 (2) _hxStopTimer                                          0     0      0     181
                     _TMR0_StopTimer
               _TMR0_Write16bitTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_Write16bitTimer                                 2     0      2     181
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      62
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     131
                 _EUSART1_Initialize
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     108
                                              3 BANK0      2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             3     0      3     108
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _HX_Initialize                                        0     0      0    1776
                 _hxFlushInputBuffer
              _hxFlushMainDataBuffer
                _hxFlushOutputBuffer
 ---------------------------------------------------------------------------------
 (2) _hxFlushOutputBuffer                                  0     0      0     592
                       _hxClearArray
 ---------------------------------------------------------------------------------
 (2) _hxFlushMainDataBuffer                                0     0      0     592
                       _hxClearArray
 ---------------------------------------------------------------------------------
 (2) _hxFlushInputBuffer                                   0     0      0     592
                       _hxClearArray
 ---------------------------------------------------------------------------------
 (3) _hxClearArray                                         4     1      3     592
                                             31 COMRAM     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                          14    14      0    5576
                                             17 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0    1839
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0    1839
                       _hxHandleTmr0
 ---------------------------------------------------------------------------------
 (10) _hxHandleTmr0                                        2     2      0    1839
                                              8 COMRAM     2     2      0
                     _hxSetupPacket1
               i2_hxFlushInputBuffer
              i2_hxFlushOutputBuffer
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             2     2      0      31
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C1_Stop                                            3     3      0      31
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Receive_ISR                                  0     0      0    3706
                        _hxISRHandle
 ---------------------------------------------------------------------------------
 (9) _hxISRHandle                                          8     8      0    3706
                                              9 COMRAM     8     8      0
                        _hxCmdFilter
                       _hxStartTimer
               i2_hxFlushInputBuffer
                      i2_hxStopTimer
 ---------------------------------------------------------------------------------
 (10) i2_hxStopTimer                                       0     0      0      96
                   i2_TMR0_StopTimer
             i2_TMR0_Write16bitTimer
 ---------------------------------------------------------------------------------
 (11) i2_TMR0_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _hxCmdFilter                                         1     1      0    2878
                                              8 COMRAM     1     1      0
                     _hxSetupPacket1
                     _hxSetupPacket2
                       _hxStartTimer
               i2_hxFlushInputBuffer
            i2_hxFlushMainDataBuffer
              i2_hxFlushOutputBuffer
 ---------------------------------------------------------------------------------
 (11) i2_hxFlushMainDataBuffer                             0     0      0     246
                     i2_hxClearArray
 ---------------------------------------------------------------------------------
 (11) i2_hxFlushInputBuffer                                0     0      0     246
                     i2_hxClearArray
 ---------------------------------------------------------------------------------
 (10) _hxStartTimer                                        2     0      2     310
                                              2 COMRAM     2     0      2
                    _TMR0_StartTimer
             i2_TMR0_Write16bitTimer
 ---------------------------------------------------------------------------------
 (11) i2_TMR0_Write16bitTimer                              2     0      2      96
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR0_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _hxSetupPacket2                                      3     3      0     461
                                              5 COMRAM     3     3      0
                     _hxCalcChecksum
 ---------------------------------------------------------------------------------
 (11) _hxSetupPacket1                                      3     2      1    1323
                                              5 COMRAM     3     2      1
                     _hxCalcChecksum
              i2_hxFlushOutputBuffer
 ---------------------------------------------------------------------------------
 (11) i2_hxFlushOutputBuffer                               0     0      0     246
                     i2_hxClearArray
 ---------------------------------------------------------------------------------
 (12) i2_hxClearArray                                      4     1      3     246
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (12) _hxCalcChecksum                                      5     2      3     393
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HX_Initialize
     _hxFlushInputBuffer
       _hxClearArray
     _hxFlushMainDataBuffer
       _hxClearArray
     _hxFlushOutputBuffer
       _hxClearArray
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _hxHandleTxUART
     _EUSART1_Write
     _hxFlushOutputBuffer
       _hxClearArray
     _hxStopTimer
       _TMR0_StopTimer
       _TMR0_Write16bitTimer
   _run_ASLBoron
     _calcChecksum
     _write_ASLBoron_cnfg
       _ASLB_cnfg0
       _ASLB_cnfg1
     _write_ASLBoron_cstm_cnfg
     _write_ASLBoron_test
       _ARDUINO_test_debug
         _readI2C
           _I2C1_MasterRead
             _I2C1_MasterReadTRBBuild
             _I2C1_MasterTRBInsert
         _writeI2C
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
             _I2C1_MasterWriteTRBBuild
       _ASLB_test0
       _ASLB_test1
         _calcChecksum
         _readI2C
           _I2C1_MasterRead
             _I2C1_MasterReadTRBBuild
             _I2C1_MasterTRBInsert
         _writeI2C
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
             _I2C1_MasterWriteTRBBuild
   _run_I2C
     _calcChecksum
     _readI2C
       _I2C1_MasterRead
         _I2C1_MasterReadTRBBuild
         _I2C1_MasterTRBInsert
     _writeI2C
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
   _run_SPPCarbon_test
     _hxSPPCarbonCheckBusy_test
       _hxOddParityCalc
     _hxSPPCarbonProgram_test
       _hxOddParityCalc
     _hxSPPCarbonRead_test
       _hxSPPCarbonReadReg_test
         _hxOddParityCalc
     _hxSPPCarbonWriteAndVerity_test
       _hxSPPCarbonReadReg_test
         _hxOddParityCalc
       _hxSPPCarbonWriteReg_test
         _hxOddParityCalc
     _hxSPPCarbonWriteReg_test
       _hxOddParityCalc
     _hxSPPCarbonWrite_test
       _hxSPPCarbonWriteReg_test
         _hxOddParityCalc

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
     _hxISRHandle
       _hxCmdFilter
         _hxSetupPacket1
           _hxCalcChecksum
           i2_hxFlushOutputBuffer
             i2_hxClearArray
         _hxSetupPacket2
           _hxCalcChecksum
         _hxStartTimer
           _TMR0_StartTimer
           i2_TMR0_Write16bitTimer
         i2_hxFlushInputBuffer
           i2_hxClearArray
         i2_hxFlushMainDataBuffer
           i2_hxClearArray
         i2_hxFlushOutputBuffer
           i2_hxClearArray
       _hxStartTimer
         _TMR0_StartTimer
         i2_TMR0_Write16bitTimer
       i2_hxFlushInputBuffer
         i2_hxClearArray
       i2_hxStopTimer
         i2_TMR0_StopTimer
         i2_TMR0_Write16bitTimer
   _EUSART1_Transmit_ISR
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
       _hxHandleTmr0
         _hxSetupPacket1
           _hxCalcChecksum
           i2_hxFlushOutputBuffer
             i2_hxClearArray
         i2_hxFlushInputBuffer
           i2_hxClearArray
         i2_hxFlushOutputBuffer
           i2_hxClearArray

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7D      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100    100     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      E0      10       87.5%
BITBANK1           100      0       0       7        0.0%
BANK1              100    100     100       8      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3E      A0       5      100.0%
BITBANK14           7E      0       0      33        0.0%
BANK14              7E      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      3F       1       67.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3BF       6        0.0%
DATA                 0      0     3BF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Oct 19 09:38:31 2017

                        hxCalcChecksum@size 0003                    _eusart1TxBufferRemaining 00FF  
                               __CFG_CP$OFF 000000                         ?_run_SPPCarbon_test 00E2  
    hxSPPCarbonCheckBusy_test@readbackTimer 00CD                            ??i2_hxClearArray 0004  
                               __CFG_LVP$ON 000000                                         l646 176A  
                                       l672 0310                                         l585 0982  
                                       l696 2138                                         _GIE 007F97  
                              __CFG_CPD$OFF 000000                      ??_hxSPPCarbonRead_test 0020  
              __size_of_hxFlushOutputBuffer 001C                              ??_hxClearArray 0020  
                                       prod 000FF3                                         tosl 000FFD  
                                       wreg 000FE8                 run_SPPCarbon_test@hx_inData 00E2  
     write_ASLBoron_cstm_cnfg@cnfg_arr_size 00C0                      ??i2_hxFlushInputBuffer 0005  
                              __CFG_ZCD$OFF 000000                            __end_of_I2C1_ISR 15B6  
                                      l1501 1FD6                                        l1266 261A  
                      ??_run_SPPCarbon_test 0020               run_SPPCarbon_test@returnValue 00E5  
                                      l7011 2478                                        l7005 2424  
                                      l7101 2156                                        l7015 2184  
                                      l7121 287A                                        l7033 21D2  
                                      l7025 21C0                                        l7017 21A8  
                                      l8001 1B2E                                        l7043 2328  
                                      l7035 21D8                                        l8003 1B46  
                                      l7117 2860                                        l8021 2234  
                                      l8013 21E8                                        l7061 2376  
                                      l7053 2364                                        l7045 234C  
                                      l8005 1B4C                                        l7301 086E  
                                      l7063 237C                                        l7071 25CE  
                                      l7311 088E                                        l7303 0874  
                                      l7215 18C2                                        l7207 18AE  
                                      l8111 0ABA                                        l8017 220E  
                                      l8009 1B88                                        l7313 0894  
                                      l7209 18B4                                        l7217 18C8  
                                      l7161 1806                                        l7153 17EA  
                                      l7137 17BA                                        l8105 0A7E  
                                      l8027 2246                                        l7075 25EE  
                                      l7219 18CC                                        l7163 180C  
                                      l7171 1820                                        l7147 17DA  
                                      l7139 17C0                                        l8301 1334  
                                      l8213 10C8                                        l7085 210C  
                                      l7405 09E4                                        l7421 0A20  
                                      l7333 08CE                                        l7325 08BA  
                                      l7317 089E                                        l7229 18EE  
                                      l7173 1828                                        l7149 17E0  
                                      l8141 0BC6                                        l8133 0B80  
                                      l8125 0B3A                                        l8231 1136  
                                      l7095 2142                                        l7431 0A54  
                                      l7415 0A12                                        l7327 08C0  
                                      l7335 08D4                                        l7271 07F6  
                                      l7255 07C6                                        l7183 1862  
                                      l8151 0C06                                        l8119 0B00  
                                      l8233 113E                                        l8225 1126  
                                      l8241 11A0                                        l7089 212E  
                                      l7417 0A1A                                        l7337 08D8  
                                      l7281 0818                                        l7265 07E6  
                                      l7257 07CC                                        l7193 1882  
                                      l7185 1868                                        l7169 181A  
                                      l7601 27B0                                        l8161 0C58  
                                      l8153 0C12                                        l8091 22F0  
                                      l7531 071A                                        l7515 0690  
                                      l8251 120A                                        l8227 1130  
                                      l7099 2152                                        l7435 0A62  
                                      l7363 093C                                        l7347 08FA  
                                      l7291 0834                                        l7267 07EC  
                                      l7195 1888                                        l8171 0C9E  
                                      l8261 125E                                        l8245 11C0  
                                      l8333 0E38                                        l7701 16EE  
                                      l7357 0926                                        l7429 0A48  
                                      l7613 24C6                                        l8181 0CF0  
                                      l8087 22D4                                        l8239 1172  
                                      l8335 0E44                                        l8351 0EB4  
                                      l7703 16F4                                        l7711 1708  
                                      l7631 15FA                                        l7359 0932  
                                      l7287 0826                                        l7279 0812  
                                      l7199 1892                                        l8249 1200  
                                      l8409 1018                                        l8337 0E50  
                                      l7801 01E0                                        l7713 170C  
                                      l7641 161A                                        l7633 1600  
                                      l7393 09B4                                        l7289 082C  
                                      l8193 0D60                                        l7483 057C  
                                      l8291 12FA                                        l8259 1254  
                                      l8419 1052                                        l8363 0EFC  
                                      l7811 0200                                        l7723 172E  
                                      l7643 1620                                        l7387 099E  
                                      l8285 12DC                                        l8373 0F30  
                                      l8357 0EEA                                        l7709 1702  
                                      l8189 0D36                                        l8621 1F70  
                                      l7591 2642                                        l8279 12B2  
                                      l8383 0F84                                        l7903 039E  
                                      l7831 023A                                        l7823 0226  
                                      l7815 020A                                        l7663 165A  
                                      l7655 1646                                        l7647 162A  
                                      l7399 09CC                                        l8623 1F86  
                                      l7577 2606                                        l8297 132E  
                                      l8393 0FBC                                        l7825 022C  
                                      l7833 0240                                        l7809 01FA  
                                      l7753 0132                                        l7657 164C  
                                      l7665 1660                                        l8609 1F3E  
                                      l7499 0606                                        l7923 041E  
                                      l7835 0244                                        l7763 0152  
                                      l7755 0138                                        l7667 1668  
                                      l8619 1F5A                                        l8627 1F9C  
                                      l7589 263E                                        l6981 1EE6  
                                      l8397 0FDC                                        l7909 03D0  
                                      l7861 02B4                                        l7845 0266  
                                      l7765 0158                                        l7693 16D2  
                                      l7677 16A2                                        l8629 1FD0  
                                      l6991 1F22                                        l7919 03FE  
                                      l7927 0424                                        l7863 02C0  
                                      l7935 0464                                        l7687 16C2  
                                      l7679 16A8                                        l6985 1F06  
                                      l7937 0470                                        l7785 0192  
                                      l7777 017E                                        l7769 0162  
                                      l7689 16C8                                        l6987 1F12  
                                      l7891 0342                                        l7867 02CA  
                                      l7779 0184                                        l7787 0198  
                                      l7971 1C90                                        l7963 1C4E  
                                      l7947 1BE2                                        l7981 1AB8  
                                      l7789 01A0                                        l7965 1C56  
                                      l7973 1C94                                        l7991 1AF8  
                                      l7983 1AC4                                        l7799 01DA  
                                      l7993 1B10                                        l7897 0370  
                                      l7995 1B1C                                        l7987 1ADE  
                                      _LATA 000F83                                        _LATB 000F84  
                                      _LATC 000F85                                        _LATD 000F86  
                                      _LATE 000F87                                        u4040 1D96  
                                      u6200 035A                                        u6230 0386  
                                      u6150 032A                                        u6240 0388  
                                      u6160 032C                                        u7107 17A8  
                                      u7117 17B4                                        u6270 03B6  
                                      u6190 0358                                        u7207 18A8  
                                      u7127 17C6                                        u6280 03B8  
                                      u7217 18BA                                        u7137 17D2  
                                      u7307 080C                                        u7227 18E8  
                                      u7147 1800                                        u7317 081E  
                                      u7237 18F4                                        u7157 1812  
                                      u7407 090C                                        u7327 085C  
                                      u7247 1900                                        u7167 1850  
                                      u7417 0918                                        u7337 0868  
                                      u7257 190C                                        u7177 185C  
                                      u7507 1652                                        u7427 0942  
                                      u7347 087A                                        u7267 07B4  
                                      u7187 186E                                        u7517 1690  
                                      u7437 094E                                        u7357 0886  
                                      u7277 07C0                                        u7197 187A  
                                      u7607 174C                                        u7527 169C  
                                      u7447 095A                                        u7367 08B4  
                                      u7287 07D2                             hxISRHandle@data 0011  
                                      u7617 0120                                        u7537 16AE  
                                      u7457 15E8                                        u7377 08C6  
                                      u7297 07DE                                        u7707 01F2  
                                      u7627 012C                                        u7547 16BA  
                                      u7467 15F4                                        u7387 08F4  
                                      u7717 0220                                        u7637 013E  
                                      u7557 16E8                                        u7477 1606  
                                      u7397 0900                              ??_hxHandleTmr0 0009  
                                      u7807 209E                                        u7727 0232  
                                      u7647 014A                                        u7567 16FA  
                                      u7487 1612                                        u7817 20D4  
                                      u7737 0260                                        u7657 0178  
                                      u7577 1728                                        u7497 1640  
                                      u7747 026C                                        u7667 018A  
                                      u7587 1734                                        u7757 0278  
                                      u7677 01C8                                        u7597 1740  
                                      u7767 0284                                        u7687 01D4  
                                      u7777 02D0                                        u7697 01E6  
                                      u7787 02DC                                        u7797 02E8  
                                      _WPUA 000F10                                        _WPUB 000F18  
                                      _WPUC 000F20                                        _WPUD 000F25  
             hxSPPCarbonWrite_test@rxBuffer 00D0                                        _WPUE 000F2D  
           __end_of_I2C1_MasterReadTRBBuild 23DE                               _EUSART1_Write 2604  
                             __CFG_FCMEN$ON 000000               hxSPPCarbonWrite_test@txBuffer 00CE  
                 hxSPPCarbonWriteReg_test@i 00CB                   hxSPPCarbonWriteReg_test@j 00CA  
                                      _main 1F2E                             _TMR0_StartTimer 2A56  
                           ??_HX_Initialize 0021                                        fsr0h 000FEA  
                                      fsr1h 000FE2                                        fsr2h 000FDA  
                                      fsr0l 000FE9                                        indf1 000FE7  
                                      indf2 000FDF                                        fsr1l 000FE1  
                                      fsr2l 000FD9                      ??_I2C1_MasterTRBInsert 0020  
                                      btemp 0040                  hxSPPCarbonWrite_test@numTX 00D2  
                     i2_hxFlushOutputBuffer 29C2                                        prodh 000FF4  
                                      prodl 000FF3                                        start 00E4  
                ?_hxSPPCarbonCheckBusy_test 00C5                   hxSPPCarbonRead_test@numRX 00D8  
                 hxSPPCarbonRead_test@numTX 00DD                               __CFG_CSWEN$ON 000000  
          write_ASLBoron_cstm_cnfg@cnfg_arr 00BE                                ___param_bank 000000  
                     __size_of_calcChecksum 0044              I2C1_MasterWriteTRBBuild@length 00C2  
                             __CFG_SCANE$ON 000000                        run_I2C@calc_checksum 00E1  
                   __end_of_TMR0_Initialize 2576                                  _i2c1_state 002C  
            ??_TMR0_DefaultInterruptHandler 000B                   ??_hxSPPCarbonProgram_test 0020  
                       __size_of_ASLB_cnfg0 0002                         __size_of_ASLB_cnfg1 0002  
                              ?_hxStopTimer 0001              __size_of_OSCILLATOR_Initialize 0020  
                 I2C1_MasterTRBInsert@count 00C2               __end_of_OSCILLATOR_Initialize 2910  
                 I2C1_MasterTRBInsert@pflag 00C0                         __size_of_ASLB_test0 0022  
                       __size_of_ASLB_test1 02FC                                       ?_main 0001  
                         __end_of_I2C1_Stop 2788                               __CFG_WDTE$OFF 000000  
                            __CFG_DEBUG$OFF 000000                                       i2l970 13FA  
                                     i2l972 1402                                       i2l973 140A  
                                     i2l983 14B0                                       i2l967 1384  
                                     i2l993 14F2                                       i2l978 1438  
                                     i2l979 1448                                       i2l996 150E  
                                     i2l997 1520                                       i2l989 14C4  
                                     _OSCEN 000EDC                                       _TMR0H 000FD4  
                                     _TMR0L 000FD3                                       _PORTA 000F8D  
                                     _TRISA 000F88                                       _TRISB 000F89  
                                     _TRISC 000F8A                                       _TRISD 000F8B  
                                     _TRISE 000F8C            write_ASLBoron_cstm_cnfg@rxBuffer 00C2  
         __size_of_TMR0_SetInterruptHandler 000E                __end_of_I2C1_BusCollisionISR 2A60  
                             __CFG_WRT0$OFF 000000                               __CFG_WRT1$OFF 000000  
                             __CFG_WRT2$OFF 000000                   ?_TMR0_SetInterruptHandler 00BE  
                             __CFG_WRT3$OFF 000000                           ??_I2C1_MasterRead 0021  
                             __CFG_WRT4$OFF 000000                               __CFG_WRT5$OFF 000000  
                             __CFG_WRT6$OFF 000000                               __CFG_WRT7$OFF 000000  
                      _EUSART1_Transmit_ISR 27F8                              __CFG_EBTR0$OFF 000000  
                            __CFG_EBTR1$OFF 000000                              __CFG_EBTR2$OFF 000000  
                            __CFG_EBTR3$OFF 000000                           ??_I2C1_Initialize 0020  
                            __CFG_EBTR4$OFF 000000                              __CFG_EBTR5$OFF 000000  
                            __CFG_EBTR6$OFF 000000                            __end_of_TMR0_ISR 27F8  
                            __CFG_EBTR7$OFF 000000                               __CFG_WRTB$OFF 000000  
                             __CFG_WRTC$OFF 000000                               __CFG_WRTD$OFF 000000  
                           __end_of_readI2C 2388                              __CFG_EBTRB$OFF 000000  
          write_ASLBoron_cstm_cnfg@rx_index 0020                          __CFG_MCLRE$EXTMCLR 000000  
                    run_SPPCarbon_test@size 00E4                              ?_EUSART1_Write 0001  
      hxSPPCarbonReadReg_test@oddParityCalc 00CE                            ?_hxOddParityCalc 00BE  
                                     pclath 000FFA                                       tablat 000FF5  
                           __end_of_run_I2C 1058                                       plusw2 000FDB  
                  ?_hxSPPCarbonReadReg_test 00C5                                       status 000FD8  
                              _calcChecksum 25C0             I2C1_MasterWriteTRBBuild@address 00C3  
                      __size_of_hxISRHandle 00D6                             __initialization 268A  
                     I2C1_MasterWrite@pdata 00C7                       I2C1_MasterWrite@pflag 00CC  
                __end_of_EUSART1_Initialize 268A                                __end_of_main 1FDE  
                           writeI2C@timeOut 00D3                      hxISRHandle@rxHxCmdFlag 002F  
             hxSPPCarbonWriteReg_test@j_746 00CC                 ?_INTERRUPT_InterruptManager 0001  
                             ?_hxStartTimer 0003                                 _i2c1_object 0060  
                                    ??_main 0021                 write_ASLBoron_cnfg@rxBuffer 00C0  
             hxSPPCarbonWriteReg_test@numTX 00C7                  __end_of_hxFlushInputBuffer 28F0  
                             __activetblptr 000003                      hxISRHandle@rxHxPktFlag 002D  
  hxSPPCarbonReadReg_test@readbackCommState 00D6                       ?_EUSART1_Transmit_ISR 0001  
                   __size_of_hxSetupPacket1 0050                     __size_of_hxSetupPacket2 006C  
               write_ASLBoron_cnfg@run_cnfg 0020                     __end_of_TMR0_StartTimer 2A5A  
                 __size_ofi2_TMR0_StopTimer 0004                                      _ANSELA 000F11  
                                    _ANSELB 000F19                                      _ANSELC 000F21  
                                    _ANSELD 000F26                                      _ANSELE 000F2E  
                                    _T0CON0 000FD5                                      _T0CON1 000FD6  
                   ??_hxSPPCarbonWrite_test 0020                                      _RC1REG 000F99  
                                    _RB1PPS 000EF0                                      _RC1PPS 000EF8  
                                    _RC1STA 000F9D                                      _RC2PPS 000EF9  
           __end_of_hxSPPCarbonProgram_test 1770                                      _ODCONA 000F0F  
                                    _ODCONB 000F17                                      _ODCONC 000F1F  
                                    _ODCOND 000F24                                      _ODCONE 000F2C  
                                    i2l1001 1552                                      i2l1120 0096  
                                    i2l1114 0054                                      i2l1116 006A  
                                    i2l1124 00A8                                      i2l1118 0080  
                                    i2l1272 2826                              __CFG_WDTCCS$SC 000000  
                                    i2l5451 1DE2                                      i2l5443 1DCE  
                                    i2l4901 19D2                                      i2l5471 1E52  
                                    i2l5439 1DC0                                      i2l4745 228A  
                                    i2l4913 1A0E                                      i2l4921 1A60  
                                    i2l5465 1E42                                      i2l4683 2836  
                                    i2l4675 288C                                      i2l4739 2262  
                                    i2l4915 1A1A                                      i2l4907 19FA  
                                    i2l5475 1E68                                      i2l5459 1E20  
                                    i2l4941 1AA2                                      i2l4687 284C  
                                    i2l4679 28A2                                      i2l4935 1A8E  
                                    i2l4919 1A26                                      i2l8063 2990  
                                    i2l8055 2782                                      i2l4881 1974  
                                    i2l4873 1944                                      i2l6545 2A18  
                                    i2l4883 1984                                      i2l4875 1950  
                                    i2l6539 2820                                      i2l4877 195C  
                                    i2l4869 192E                                      i2l4949 2722  
                                    i2l4879 1964                                      i2l4897 19C4  
                                    i2l8507 14D6                                      i2l8533 1530  
                                    i2l8517 14FA                                      i2l8447 13DC  
                                    i2l8545 1558                                      i2l8529 1528  
                                    i2l8465 1432                        __size_of_hxCmdFilter 0190  
                                    i2l8547 155C                                      i2l8459 141A  
                                    i2l8555 1570                                      i2l8549 1564  
                                    i2l8479 1476                                      i2l8499 14BE  
          hxSPPCarbonWriteReg_test@tempByte 00CD                                      _OSCFRQ 000EDE  
                          ??_hxHandleTxUART 00C1            hxSPPCarbonWriteReg_test@txBuffer 00C5  
                                    _NVMDAT 000F80                                      _TX1REG 000F9A  
                                    _TX1STA 000F9E                      ?i2_hxFlushOutputBuffer 0001  
                         ?_I2C1_MasterWrite 00C7                              __CFG_PWRTE$OFF 000000  
              __end_of_TMR0_Write16bitTimer 2A3A                        __end_of_hxClearArray 2886  
                            __CFG_XINST$OFF 000000                          ??_I2C1_MasterWrite 0021  
                            _p_i2c1_current 0021                              __CFG_STVREN$ON 000000  
                        hxSetupPacket1@data 0006                              ??_hxStartTimer 0005  
                          _hxHandleTmr0$263 0009                  ??_I2C1_MasterWriteTRBBuild 00C5  
                          ?_TMR0_Initialize 0001                                   ?_I2C1_ISR 0001  
                                    clear_0 26A2                                      clear_1 26AE  
                                    clear_2 26BA                        __end_of_hxHandleTmr0 274A  
            i2TMR0_Write16bitTimer@timerVal 0001                     ?i2_TMR0_Write16bitTimer 0001  
                       run_ASLBoron@rpt_run 0107            __size_of_I2C1_MasterReadTRBBuild 0056  
                                 ??_readI2C 0021                    _write_ASLBoron_cstm_cnfg 1FDE  
                              __pdataCOMRAM 003F                                      tblptrh 000FF7  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                                 ??_run_I2C 00D9                             ??_EUSART1_Write 0020  
            __size_of_hxFlushMainDataBuffer 001C    TMR0_SetInterruptHandler@InterruptHandler 00BE  
             __end_of_hxFlushMainDataBuffer 2948               I2C1_MasterWriteTRBBuild@pdata 00C0  
                              ??_ASLB_cnfg0 0020                                ??_ASLB_cnfg1 0020  
                          __end_of_writeI2C 21E4                  __end_of_ARDUINO_test_debug 20F8  
             __size_of_INTERRUPT_Initialize 0004                             _eusart1TxBuffer 0200  
                              ??_ASLB_test0 0020                                ??_ASLB_test1 0021  
   hxSPPCarbonWriteAndVerity_test@tempValue 00E1                           _SYSTEM_Initialize 2964  
                           hxCalcChecksum@i 0004                                  __accesstop 0060  
                   __end_of__initialization 26C0                          ?_SYSTEM_Initialize 0001  
                         _hx_rxOverflowFlag 006F                               ___rparam_used 000001  
                       _hxFlushOutputBuffer 2910                              _i2c1_trb_count 002B  
               __end_of_write_ASLBoron_cnfg 2256                 __end_of_write_ASLBoron_test 1BBA  
                     _I2C1_FunctionComplete 297E                        _I2C1_BusCollisionISR 2A5E  
                     hxOddParityCalc@parity 00C3                            readI2C@slaveAddr 00D1  
                            __pcstackCOMRAM 0001                      I2C1_MasterWrite@length 00C9  
                       ??_SYSTEM_Initialize 0021                                   ?_TMR0_ISR 0001  
            __end_ofi2_TMR0_Write16bitTimer 2A44                                  ??_I2C1_ISR 0004  
                        __end_of_ASLB_cnfg0 2A5E                          __end_of_ASLB_cnfg1 2A5C  
            I2C1_MasterReadTRBBuild@address 00C3                    ?i2_hxFlushMainDataBuffer 0001  
    __end_of_hxSPPCarbonWriteAndVerity_test 1CB2     __size_of_hxSPPCarbonWriteAndVerity_test 00F8  
            _hxSPPCarbonWriteAndVerity_test 1BBA                          __end_of_ASLB_test0 28CE  
                        __end_of_ASLB_test1 0776                      ??_EUSART1_Transmit_ISR 0001  
                      __size_of_hxStopTimer 0014                        ?_hxFlushOutputBuffer 0001  
               __end_of_EUSART1_Receive_ISR 2A20                             hxHandleTxUART@i 00C4  
                  _hxSPPCarbonWriteReg_test 1770                            ?_TMR0_StartTimer 0001  
                 __end_of_SYSTEM_Initialize 297E             hxSPPCarbonCheckBusy_test@bitVal 00D5  
                             _eusart1RxHead 006B                               _eusart1TxHead 0028  
                             _eusart1RxTail 006A                                  __pbssBANK0 0060  
                                __pbssBANK2 0200                               _eusart1TxTail 0027  
                                __pnvCOMRAM 003C             hxSPPCarbonReadReg_test@rxBuffer 00C8  
                    __size_ofi2_hxStopTimer 0012             hxSPPCarbonReadReg_test@tempByte 00D7  
           hxSPPCarbonReadReg_test@txBuffer 00C6             hxSPPCarbonReadReg_test@portAVal 00CA  
               ??_hxSPPCarbonCheckBusy_test 00CA                 write_ASLBoron_test@rxBuffer 00EF  
                     ?_I2C1_BusCollisionISR 0001                              _SSP1DATPPSbits 000EB8  
                        i2hxClearArray@size 0003            __end_of_TMR0_SetInterruptHandler 2A2E  
                   __size_of_TMR0_StopTimer 0004                                  ??_TMR0_ISR 000B  
                           __CFG_PPS1WAY$ON 000000                             _I2C1_MasterRead 2432  
                           _I2C1_Initialize 26CA                     __size_of_hxCalcChecksum 002E  
               write_ASLBoron_test@run_test 00F4                             run_I2C@debugArr 00DC  
                            _SSP1CLKPPSbits 000EB7                             run_I2C@checksum 00E0  
                     ??_hxFlushOutputBuffer 0021                              _hxSetupPacket1 24D8  
                            _hxSetupPacket2 2256                                     _SP1BRGH 000F9C  
                                   _SP1BRGL 000F9B               __size_of_hxSPPCarbonRead_test 0052  
                                   _OSCCON1 000ED8                                     _OSCCON3 000EDA  
                                 _I2C1_Stop 274A                        _TMR0_Write16bitTimer 2A2E  
                                   _NVMADRH 000F7F                                     _NVMADRL 000F7E  
                                   _OSCTUNE 000EDD                                     _NVMCON2 000F82  
                                   _SSP1ADD 000F93                                     _PPSLOCK 000EA0  
                                   _SSP1BUF 000F92                            i2_TMR0_StopTimer 2A52  
                                _boronRxPkt 0240                                  _boronTxPkt 0250  
              hxSPPCarbonProgram_test@j_755 00CD                 __size_of_run_SPPCarbon_test 02F6  
                write_ASLBoron_test@run_rpt 00ED               __size_ofi2_hxFlushInputBuffer 001C  
                      __end_of_hxStartTimer 2A10                       __size_of_hxClearArray 002C  
             I2C1_MasterTRBInsert@ptrb_list 00BE                hxSPPCarbonProgram_test@numTX 00C9  
                        hxISRHandle@pktSize 002E                        run_ASLBoron@checksum 010B  
                              writeI2C@size 00D0            hxSPPCarbonWrite_test@returnValue 00D3  
                     __end_of_HX_Initialize 29AC                      ?_I2C1_FunctionComplete 0001  
                                   __Hparam 0000               __size_of_I2C1_MasterTRBInsert 00BE  
                      run_ASLBoron@cnfg_arr 0300                        run_ASLBoron@cnfg_cnt 010E  
                      run_ASLBoron@cnfg_run 010A                                     __Lparam 0000  
                __CFG_RSTOSC$HFINTOSC_64MHZ 000000                          _p_i2c1_trb_current 0023  
                     __size_of_hxHandleTmr0 0040                               readI2C@rxData 00CE  
           __end_ofi2_hxFlushMainDataBuffer 29C2                           run_I2C@data_index 00E7  
                             readI2C@status 00D5            __size_of_hxSPPCarbonReadReg_test 02F8  
                                   __pcinit 268A                             i2hxClearArray@i 0004  
                                 ?_writeI2C 00CE                                     __ramtop 0F00  
                   _I2C1_MasterReadTRBBuild 2388                        run_ASLBoron@mode_run 010F  
                                   __ptext0 1F2E                                     __ptext1 0A6E  
                                   __ptext2 2788                                     __ptext3 1BBA  
                                   __ptext4 1770                                     __ptext5 2486  
                                   __ptext6 0776                                     __ptext7 15B6  
                                   __ptext8 00E8                                     __ptext9 20F8  
                    __end_of_hxSetupPacket1 2528                      __end_of_hxSetupPacket2 22C2  
                             i2_hxStopTimer 29EC        hxSPPCarbonReadReg_test@readbackTimer 00CC  
                                   _readI2C 2326                       _OSCILLATOR_Initialize 28F0  
                 _hxSPPCarbonCheckBusy_test 00E8                I2C1_MasterReadTRBBuild@pdata 00C0  
                      I2C1_MasterRead@pdata 00C7                        I2C1_MasterRead@pflag 00CC  
                                _hx_outData 02A0                  ARDUINO_test_debug@rxBuffer 00D6  
                     ?_TMR0_Write16bitTimer 00BE                          _EUSART1_Initialize 2648  
                  ??_PIN_MANAGER_Initialize 0020                                _hxClearArray 285A  
                                ?_I2C1_Stop 0001                           ASLB_test1@ramData 00DC  
                                   _run_I2C 0D64                        run_ASLBoron@test_run 0109  
                __size_of_SYSTEM_Initialize 001A                        I2C1_ISR@pi2c_buf_ptr 0067  
                   ??i2_hxFlushOutputBuffer 0005           hxSPPCarbonCheckBusy_test@rxBuffer 00C8  
                      end_of_initialization 26C0           hxSPPCarbonCheckBusy_test@tempByte 00D8  
                   __size_ofi2_hxClearArray 0026           hxSPPCarbonCheckBusy_test@txBuffer 00C6  
                       ?_EUSART1_Initialize 0001                          _hxFlushInputBuffer 28CE  
         hxSPPCarbonCheckBusy_test@portAVal 00D6               hxISRHandle@currentByteCounter 0031  
                             ?_run_ASLBoron 00F9              __size_of_hxSPPCarbonWrite_test 003A  
             __end_of_hxSPPCarbonWrite_test 27C2                                _hxHandleTmr0 270A  
                             ??_hxISRHandle 000A         hxSPPCarbonWriteReg_test@tempHxState 00C8  
                          _hx_rxFullPktFlag 0033                     __end_of_I2C1_MasterRead 2486  
                    ??_I2C1_BusCollisionISR 0001                     __end_of_I2C1_Initialize 270A  
                               run_I2C@mode 00E6                                 run_I2C@size 00D8  
                      ASLB_test1@ramAddrLow 00E9                         ?_hxFlushInputBuffer 0001  
                  __size_of_hxOddParityCalc 007A                    ?_hxSPPCarbonProgram_test 00C5  
                ??_write_ASLBoron_cstm_cnfg 0020                                     postdec2 000FDD  
                                   postinc0 000FEE                                     postinc1 000FE6  
                                   postinc2 000FDE                        ??_EUSART1_Initialize 0020  
                     __CFG_WDTCPS$WDTCPS_31 000000                                  ??_writeI2C 0021  
                            ?i2_hxStopTimer 0001                    _TMR0_SetInterruptHandler 2A20  
                                 _PORTAbits 000F8D                             ?_hxSetupPacket1 0006  
                           ?_hxSetupPacket2 0001                   __size_of_I2C1_MasterWrite 0054  
                         __size_of_I2C1_ISR 026A                        ??_hxFlushInputBuffer 0021  
                             ??_hxCmdFilter 0009                         EUSART1_Write@txData 0020  
                          __CFG_FEXTOSC$OFF 000000           I2C1_ISR@i2c_10bit_address_restart 0029  
                            ??_run_ASLBoron 0100                TMR0_Write16bitTimer@timerVal 00BE  
                        ASLB_cnfg0@rxBuffer 00BE                             hxSetupPacket2@i 0008  
             hxSPPCarbonReadReg_test@bitVal 00D4                            run_ASLBoron@size 00FB  
                        ASLB_cnfg1@rxBuffer 00BE                     I2C1_MasterWrite@address 00CA  
                      _timer0ReloadVal16bit 003C                              _TMR0_StopTimer 2A4A  
           hxSPPCarbonRead_test@returnValue 00DE                          _ARDUINO_test_debug 2074  
                       __end_of_hxISRHandle 1E70                   ??_I2C1_MasterReadTRBBuild 00C5  
              __end_of_INTERRUPT_Initialize 2A52                              _hxCalcChecksum 282C  
                   I2C1_MasterWrite@trBlock 00B4                               __pidataCOMRAM 2A60  
                ??_hxSPPCarbonWriteReg_test 0020                           __size_of_TMR0_ISR 0036  
                  I2C1_Stop@completion_code 0003                         ?_ARDUINO_test_debug 00D6  
                    ?_OSCILLATOR_Initialize 0001                    hxSPPCarbonReadReg_test@i 00D0  
                  hxSPPCarbonReadReg_test@j 00CF                           writeI2C@slaveAddr 00D1  
                    ??_TMR0_Write16bitTimer 0020                         start_initialization 268A  
                    run_ASLBoron@data_index 0110                                 ??_I2C1_Stop 0001  
                     __size_of_hxStartTimer 0012                    __size_of_TMR0_Initialize 004E  
           __size_of_PIN_MANAGER_Initialize 00E8                              writeI2C@txData 00CE  
                            writeI2C@status 00D5           __size_of_I2C1_MasterWriteTRBBuild 004A  
                 ?_I2C1_MasterWriteTRBBuild 00BE                              _hx_inDataIndex 0037  
                     __end_of_EUSART1_Write 2648            __size_ofi2_hxFlushMainDataBuffer 0016  
                     _hxFlushMainDataBuffer 292C                             _eeprom_currAddr 0025  
                      ??_ARDUINO_test_debug 00D8                         __end_of_hxCmdFilter 1AA8  
                    __end_of_TMR0_StopTimer 2A4E                            ?_I2C1_MasterRead 00C7  
                          ?_I2C1_Initialize 0001                            __CFG_LPBOREN$OFF 000000  
                    __end_of_hxCalcChecksum 285A                            hxOddParityCalc@i 00C1  
                          hxOddParityCalc@j 00C2         hxSPPCarbonWriteAndVerity_test@numTX 00DF  
                  __end_ofi2_TMR0_StopTimer 2A56                     _hxSPPCarbonReadReg_test 0776  
                   __size_of_hxHandleTxUART 0064                             ??i2_hxStopTimer 0003  
                      hxStartTimer@timerVal 0003        hxSPPCarbonProgram_test@oddParityCalc 00CA  
                             ??_hxStopTimer 0020                                _hxStartTimer 29FE  
              __size_of_write_ASLBoron_cnfg 0072                           ??_hxOddParityCalc 0020  
                hxSPPCarbonCheckBusy_test@i 00D1                  hxSPPCarbonCheckBusy_test@j 00D0  
           hxSPPCarbonProgram_test@rxBuffer 00C7                __size_of_write_ASLBoron_test 0112  
    hxSPPCarbonWriteAndVerity_test@rxBuffer 00DA             hxSPPCarbonProgram_test@tempByte 00CE  
              I2C1_MasterWriteTRBBuild@ptrb 00BE                              _eusart1RxCount 0069  
           hxSPPCarbonProgram_test@txBuffer 00C5      hxSPPCarbonWriteAndVerity_test@txBuffer 00D8  
                               __pbssCOMRAM 0021               __size_of_EUSART1_Transmit_ISR 0034  
                             __pcstackBANK0 00BE                               __pcstackBANK1 0100  
                             __pcstackBANK3 0300                               _i2c1_tr_queue 00B9  
                            i2_hxClearArray 2886          __size_of_hxSPPCarbonCheckBusy_test 0392  
            hxSPPCarbonCheckBusy_test@i_770 00D3              hxSPPCarbonCheckBusy_test@j_771 00D4  
            hxSPPCarbonCheckBusy_test@j_769 00D2                     ??_I2C1_FunctionComplete 0001  
              __size_of_EUSART1_Receive_ISR 0010                               ?_calcChecksum 00BE  
                               _hxISRHandle 1D9A                       _TMR0_InterruptHandler 00FC  
            hxSPPCarbonCheckBusy_test@numRX 00C5              hxSPPCarbonCheckBusy_test@numTX 00CC  
                                 __pnvBANK0 00FC                    __size_of_TMR0_StartTimer 0004  
              __end_of_hxSPPCarbonRead_test 24D8                             ?_TMR0_StopTimer 0001  
                    _PIN_MANAGER_Initialize 1CB2                           i2hxClearArray@arr 0001  
          __end_of_write_ASLBoron_cstm_cnfg 2074                             ?_hxCalcChecksum 0001  
                                 __pintcode 0008                   calcChecksum@temp_checksum 00C2  
                          _run_ASLBoron$863 0103                            _run_ASLBoron$864 0105  
               __end_of_hxFlushOutputBuffer 292C                __end_ofi2_hxFlushInputBuffer 2964  
                                  _I2C1_ISR 134C                        __end_of_run_ASLBoron 134C  
              ??_INTERRUPT_InterruptManager 0012                            _I2C1_MasterWrite 23DE  
                                  ?_readI2C 00CE                                    _BAUD1CON 000F9F  
              __end_of_I2C1_MasterTRBInsert 1F2E                           __size_of_writeI2C 0072  
                       __end_of_hxStopTimer 29EC                      I2C1_MasterRead@address 00CA  
                    __end_ofi2_hxClearArray 28AC                                    ?_run_I2C 00D6  
                __end_of_run_SPPCarbon_test 0D64                run_SPPCarbon_test@numRxBytes 00E6  
                                 _hx_inData 0260                                 _hxCmdFilter 1918  
              run_SPPCarbon_test@numTxBytes 00E7                            _hx_mainDataIndex 0038  
    hxSPPCarbonCheckBusy_test@oddParityCalc 00CF                      ?_hxFlushMainDataBuffer 0001  
                      _INTERRUPT_Initialize 2A4E                                   _hx_pktCmd 0071  
                            ??_calcChecksum 0020              __size_ofi2_hxFlushOutputBuffer 0016  
               I2C1_MasterReadTRBBuild@ptrb 00BE               __end_ofi2_hxFlushOutputBuffer 29D8  
                    I2C1_MasterRead@trBlock 00AF                           ??_TMR0_Initialize 00C1  
                                  _LATAbits 000F83           __end_of_hxSPPCarbonCheckBusy_test 047A  
                                  _PIE0bits 000EC2                                    _PIE3bits 000EC5  
                       __CFG_BORV$VBOR_2P45 000000       hxSPPCarbonWriteReg_test@oddParityCalc 00C9  
             ARDUINO_test_debug@ardDebugVal 00DA                    ??i2_TMR0_Write16bitTimer 0003  
       __size_of_INTERRUPT_InterruptManager 00DC                   ??_hxSPPCarbonReadReg_test 0020  
                ??_TMR0_SetInterruptHandler 0020                                    _PIR0bits 000ECA  
                                  _PIR3bits 000ECD                                    i2u457_48 27E2  
                                  _PIR7bits 000ED1                                _hx_startMain 0070  
                          ??_hxSetupPacket1 0007                            ??_hxSetupPacket2 0006  
                                  _SSP1CON1 000F96                                    _SSP1CON3 000F98  
                                  _TMR0_ISR 27C2                                    _SSP1STAT 000F95  
           hxSPPCarbonWriteAndVerity_test@i 00E0                 hxCalcChecksum@temp_checksum 0005  
                           _hx_outDataIndex 0039            __end_of_hxSPPCarbonWriteReg_test 1918  
                             calcChecksum@i 00C1                            run_I2C@hx_inData 00D6  
                       ASLB_test1@rd_status 00EB            __size_of_hxSPPCarbonProgram_test 01BA  
                    __size_of_HX_Initialize 0016                             ?i2_hxClearArray 0001  
                  hxISRHandle@rxPktSizeFlag 0030                       ?_INTERRUPT_Initialize 0001  
                   i2_hxFlushMainDataBuffer 29AC                            run_I2C@slaveAddr 00E2  
                           _hx_txPacketFlag 003F                       _hxSPPCarbonWrite_test 2788  
 hxSPPCarbonWriteAndVerity_test@returnValue 00DE                                    __Hrparam 0000  
             __size_of_I2C1_BusCollisionISR 0002                                    __Lrparam 0000  
                        __CFG_BOREN$SBORDIS 000000                      I2C1_ISR@i2c_bytes_left 002A  
                       ASLB_test1@wr_status 00EA                              _hxHandleTxUART 22C2  
                   ??_OSCILLATOR_Initialize 0020                           ??_TMR0_StartTimer 0001  
               __size_of_EUSART1_Initialize 0042                              readI2C@numOfRx 00D0  
                       hxOddParityCalc@buff 00BE                                 _hxStopTimer 29D8  
                       hxOddParityCalc@temp 00C4                         hxOddParityCalc@size 00C0  
                            readI2C@timeOut 00D3            __end_of_I2C1_MasterWriteTRBBuild 25C0  
                               _hx_debugVar 0032                                 _hx_checksum 0036  
                          __size_of_readI2C 0062                                  _T0CON0bits 000FD5  
                     run_ASLBoron@hx_inData 00F9             __end_of_hxSPPCarbonReadReg_test 0A6E  
               __size_of_hxFlushInputBuffer 0022                        _hxSPPCarbonRead_test 2486  
         __size_of_write_ASLBoron_cstm_cnfg 0096                                 _hx_mainData 0072  
                       I2C1_ISR@i2c_address 003A                   ?_write_ASLBoron_cstm_cnfg 00BE  
                                  __ptext10 0D64                                    __ptext11 1058  
                                  __ptext20 2326                                    __ptext12 1AA8  
                                  __ptext21 2432                                    __ptext13 047A  
                                  __ptext30 2A2E                                    __ptext22 1E70  
                                  __ptext14 25C0                                    __ptext31 2A4A  
                                  __ptext23 2388                                    __ptext15 28AC  
                                  __ptext40 2648                                    __ptext32 2604  
                                  __ptext24 1FDE                                    __ptext16 2074  
                                  __ptext41 2996                                    __ptext33 2964  
                                  __ptext25 21E4                                    __ptext17 2172  
                                  __ptext50 134C                                    __ptext42 2910  
                                  __ptext34 2528                                    __ptext26 2A5A  
                                  __ptext18 23DE                                    __ptext51 274A  
                                  __ptext43 292C                                    __ptext35 2A20  
                                  __ptext27 2A5C                                    __ptext19 2576  
                                  __ptext60 29AC                                    __ptext52 297E  
                                  __ptext44 28CE                                    __ptext36 1CB2  
                                  __ptext28 22C2                                    __ptext61 2948  
                                  __ptext53 2A5E                                    __ptext45 285A  
                                  __ptext37 28F0                                    __ptext29 29D8  
                                  __ptext70 0000                                    __ptext62 29FE  
                                  __ptext54 27F8                                    __ptext38 2A4E  
                                  __ptext63 2A3A                                    __ptext55 2A10  
                                  __ptext47 27C2                                    __ptext39 26CA  
                                  __ptext64 2A56                                    __ptext56 1D9A  
                                  __ptext48 2A44                                    __ptext65 2256  
                                  __ptext57 29EC                                    __ptext49 270A  
                                  __ptext66 24D8                                    __ptext58 2A52  
                                  __ptext67 29C2                                    __ptext59 1918  
                                  __ptext68 2886                                    __ptext69 282C  
                              _SSP1CON1bits 000F96                                _SSP1CON2bits 000F97  
                          __size_of_run_I2C 02F4                        hxSetupPacket1@pc_cmd 0008  
                      hxSetupPacket2@pc_cmd 0007                                  _ASLB_cnfg0 2A5C  
                                _ASLB_cnfg1 2A5A                        i2_hxFlushInputBuffer 2948  
                                _ASLB_test0 28AC                                  _ASLB_test1 047A  
                       _write_ASLBoron_cnfg 21E4                               run_I2C@tx_arr 0100  
                       _write_ASLBoron_test 1AA8                                    _hx_abort 006E  
                                  _hx_pcCmd 0035                               __size_of_main 00B0  
             I2C1_MasterReadTRBBuild@length 00C2                       I2C1_MasterRead@length 00C9  
                               _hx_pktState 0034                                    _hx_state 003E  
      __end_of_TMR0_DefaultInterruptHandler 2A4A       __size_of_TMR0_DefaultInterruptHandler 0006  
              _TMR0_DefaultInterruptHandler 2A44                        __CFG_WDTCWS$WDTCWS_7 000000  
                           _hxOddParityCalc 20F8                        _I2C1_MasterTRBInsert 1E70  
                    __end_of_hxHandleTxUART 2326                               _HX_Initialize 2996  
                                _RC1STAbits 000F9D             __size_ofi2_TMR0_Write16bitTimer 000A  
              hxSPPCarbonRead_test@rxBuffer 00DB                       __size_of_run_ASLBoron 02F4  
                        ASLB_test1@ramRdMsg 00E3                hxSPPCarbonRead_test@txBuffer 00D9  
                        ASLB_test1@ramWrMsg 00DD                          ASLB_test0@rxBuffer 00BE  
                                  int$flags 0040                           ?i2_TMR0_StopTimer 0001  
        __end_of_INTERRUPT_InterruptManager 00E4                  _INTERRUPT_InterruptManager 0008  
                        ASLB_test1@rxBuffer 00D6                        ?_write_ASLBoron_cnfg 00C0  
                                  _writeI2C 2172                        ?_write_ASLBoron_test 00ED  
                       _EUSART1_Receive_ISR 2A10                        __end_of_calcChecksum 2604  
                        ??i2_TMR0_StopTimer 0001                          ASLB_test0@rx_index 0020  
               PIN_MANAGER_Initialize@state 0020                                  _INTCONbits 000FF2  
                        ASLB_test1@rx_index 00EC                       ?_hxSPPCarbonRead_test 00D8  
                               _NVMCON1bits 000F81                   ??i2_hxFlushMainDataBuffer 0005  
             __size_of_TMR0_Write16bitTimer 000C                      ??_INTERRUPT_Initialize 0020  
                     ?i2_hxFlushInputBuffer 0001                   run_ASLBoron@calc_checksum 010C  
                                  intlevel2 0000                            ??_TMR0_StopTimer 0020  
         __size_of_hxSPPCarbonWriteReg_test 01A8                   ?_hxSPPCarbonWriteReg_test 00C5  
                      ?_EUSART1_Receive_ISR 0001                                _run_ASLBoron 1058  
               __size_of_ARDUINO_test_debug 0084                     ?_PIN_MANAGER_Initialize 0001  
                          ??_hxCalcChecksum 0004                                ?_hxISRHandle 0001  
                    ?_hxSPPCarbonWrite_test 00CE                    __end_of_I2C1_MasterWrite 2432  
                         __CFG_CLKOUTEN$OFF 000000              __size_of_I2C1_FunctionComplete 0018  
                     ASLB_test1@ramAddrHigh 00E8                                run_I2C@numRx 00E5  
                              run_I2C@numTx 00E4               __end_of_I2C1_FunctionComplete 2996  
                               _PPSLOCKbits 000EA0                       ?_I2C1_MasterTRBInsert 00BE  
              __end_of_EUSART1_Transmit_ISR 282C                    ?_I2C1_MasterReadTRBBuild 00BE  
                            ?_HX_Initialize 0001                             ?_hxHandleTxUART 0001  
                                  run_I2C@i 00DE               ?_TMR0_DefaultInterruptHandler 0001  
                             run_ASLBoron@i 010D  hxSPPCarbonCheckBusy_test@readbackCommState 00D7  
                     ??_write_ASLBoron_cnfg 0020                    __size_of_I2C1_MasterRead 0054  
        hxSPPCarbonReadReg_test@tempHxState 00D5                       ??_write_ASLBoron_test 00F1  
                  __size_of_I2C1_Initialize 0040                       __end_ofi2_hxStopTimer 29FE  
                    __size_of_EUSART1_Write 0044                                  _RX1PPSbits 000EB5  
                  hxSPPCarbonProgram_test@i 00CC                    hxSPPCarbonProgram_test@j 00CB  
                              hxCmdFilter@i 0009                     _hxSPPCarbonProgram_test 15B6  
                     ASLB_test1@ramReadback 00D8                             _TMR0_Initialize 2528  
              hxSPPCarbonReadReg_test@i_736 00D2                hxSPPCarbonReadReg_test@j_735 00D1  
              hxSPPCarbonReadReg_test@j_737 00D3                      i2_TMR0_Write16bitTimer 2A3A  
                             ?_hxClearArray 00BE                    _I2C1_MasterWriteTRBBuild 2576  
                   ??_hxFlushMainDataBuffer 0021                             _boronRxPktIndex 006C  
                              ?_hxCmdFilter 0001                hxSPPCarbonReadReg_test@numRX 00C5  
              hxSPPCarbonReadReg_test@numTX 00CB                                 ?_ASLB_cnfg0 00BE  
                               ?_ASLB_cnfg1 00BE                     __end_of_hxOddParityCalc 2172  
                      write_ASLBoron_test@i 00F5                        write_ASLBoron_test@j 00F7  
                     ??_EUSART1_Receive_ISR 0012              __end_of_PIN_MANAGER_Initialize 1D9A  
                          calcChecksum@data 00BE                                 ?_ASLB_test0 00BE  
                               ?_ASLB_test1 00D6                            hxClearArray@size 00C0  
                           _boronTxPktIndex 006D                            calcChecksum@size 00C0  
                             ?_hxHandleTmr0 0001                          __size_of_I2C1_Stop 003E  
                           hxClearArray@arr 00BE            ??_hxSPPCarbonWriteAndVerity_test 00DC  
           ?_hxSPPCarbonWriteAndVerity_test 00D8                          _run_SPPCarbon_test 0A6E  
                             hxClearArray@i 0020                          hxCalcChecksum@data 0001  
